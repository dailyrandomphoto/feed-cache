<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Fri, 11 Jun 2021 02:18:52 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>pmndrs/racing-game</title>
      <link>https://github.com/pmndrs/racing-game</link>
      <description>&lt;p&gt;üèé Open source racing game developed by everyone willing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üèéÔ∏è @pmndrs/racing-game&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pmndrs/racing-game/main/thumbnail.webp&quot; alt=&quot;img&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Live demo (current state): https://racing.pmnd.rs/&lt;/p&gt; 
&lt;p&gt;This project is a showcase for the feasibility of React in gaming. It is 100% open source, anyone can participate. If you have a PR merged you are added to the triage team. Refer to &lt;a href=&quot;https://raw.githubusercontent.com/pmndrs/racing-game/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;/assets   - the bend files
/utils    - game state store, helpers
/models   - gltfjsx models, players, characters
/effects  - dust, trails, skids, shaders
/ui       - intros, heads up displays, leaderboards
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is a dedicated discord channel for this project here: https://discord.gg/dQW7fDmaAG&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chinnkarahoi/jd_scripts</title>
      <link>https://github.com/chinnkarahoi/jd_scripts</link>
      <description>&lt;p&gt;lxk0301/jd_scriptsÂ§á‰ªΩ„ÄÇ‰∏çË¶Åstar„ÄÇ‰∏çË¶Åfork„ÄÇË∞¢Ë∞¢ÈÖçÂêà„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Special statement:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Any unlocking and decryption analysis scripts involved in the Script project released by this warehouse are only used for testing, learning and research, and are forbidden to be used for commercial purposes. Their legality, accuracy, completeness and effectiveness cannot be guaranteed. Please make your own judgment based on the situation. .&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;All resource files in this project are forbidden to be reproduced or published in any form by any official account or self-media.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;This warehouse is not responsible for any script problems, including but not limited to any loss or damage caused by any script errors.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Any user who indirectly uses the script, including but not limited to establishing a VPS or disseminating it when certain actions violate national/regional laws or related regulations, this warehouse is not responsible for any privacy leakage or other consequences caused by this.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do not use any content of the Script project for commercial or illegal purposes, otherwise you will be responsible for the consequences.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If any unit or individual believes that the script of the project may be suspected of infringing on their rights, they should promptly notify and provide proof of identity and ownership. We will delete the relevant script after receiving the certification document.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Anyone who views this item in any way or directly or indirectly uses any script of the Script item should read this statement carefully. This warehouse reserves the right to change or supplement this disclaimer at any time. Once you have used and copied any relevant scripts or rules of the Script project, you are deemed to have accepted this disclaimer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;You must completely delete the above content from your computer or mobile phone within 24 hours after downloading.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;You have used or copied any script made by yourself in this warehouse, it is deemed to have accepted this statement, please read it carefully&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Special thanks to:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/liuxiaoyucc&quot;&gt;@liuxiaoyucc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Zero-S1&quot;&gt;@Zero-S1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/uniqueque&quot;&gt;@uniqueque&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/nzw9314&quot;&gt;@nzw9314&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>GoogleChrome/lighthouse</title>
      <link>https://github.com/GoogleChrome/lighthouse</link>
      <description>&lt;p&gt;Automated auditing, performance metrics, and best practices for the web.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lighthouse &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/GoogleChrome/lighthouse/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;GitHub Actions Status Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/actions/workflows/unit.yml&quot;&gt;&lt;img src=&quot;https://github.com/GoogleChrome/lighthouse/workflows/unit/badge.svg?sanitize=true&quot; alt=&quot;GitHub Actions Status Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/actions/workflows/smoke.yml&quot;&gt;&lt;img src=&quot;https://github.com/GoogleChrome/lighthouse/workflows/smoke/badge.svg?sanitize=true&quot; alt=&quot;GitHub Actions Status Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/GoogleChrome/lighthouse&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/GoogleChrome/lighthouse/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lh-build-tracker.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/buildtracker-ok-blue&quot; alt=&quot;Build tracker for Lighthouse&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/lighthouse&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/lighthouse.svg?sanitize=true&quot; alt=&quot;NPM lighthouse package&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Lighthouse analyzes web apps and web pages, collecting modern performance metrics and insights on developer best practices.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Using Lighthouse 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#using-lighthouse-in-chrome-devtools&quot;&gt;Using Lighthouse in Chrome DevTools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#using-the-chrome-extension&quot;&gt;Using the Chrome extension&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#using-the-node-cli&quot;&gt;Using the Node CLI&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#cli-options&quot;&gt;CLI options&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#using-the-node-module&quot;&gt;Using the Node module&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#viewing-a-report&quot;&gt;Viewing a report&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#online-viewer&quot;&gt;Online Viewer&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#docs--recipes&quot;&gt;Docs &amp;amp; Recipes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#develop&quot;&gt;Developing Lighthouse&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#setup&quot;&gt;Setup&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#run&quot;&gt;Run&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#tests&quot;&gt;Tests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#docs&quot;&gt;Docs&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Associated Products and Projects 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#lighthouse-integrations-in-web-perf-services&quot;&gt;Lighthouse Integrations in Web Perf services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#lighthouse-integrations-in-non-web-perf-services&quot;&gt;Lighthouse Integrations in non-Web Perf services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#related-projects&quot;&gt;Related Projects&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#faq&quot;&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-does-lighthouse-work&quot;&gt;How does Lighthouse work?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#can-i-configure-the-lighthouse-run&quot;&gt;Can I configure the lighthouse run?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-does-lighthouse-use-network-throttling-and-how-can-i-make-it-better&quot;&gt;How does Lighthouse use network throttling, and how can I make it better?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#are-results-sent-to-a-remote-server&quot;&gt;Are results sent to a remote server?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-do-i-get-localized-lighthouse-results-via-the-cli&quot;&gt;How do I get localized Lighthouse results?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-do-i-author-custom-audits-to-extend-lighthouse&quot;&gt;How do I author custom audits to extend Lighthouse?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/#how-do-i-contribute&quot;&gt;How do I contribute?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Lighthouse in Chrome DevTools&lt;/h2&gt; 
&lt;p&gt;Lighthouse is integrated directly into the Chrome DevTools, under the ‚ÄúLighthouse‚Äù panel.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: install &lt;a href=&quot;https://www.google.com/chrome/browser&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: open Chrome DevTools, select the Lighthouse panel, and hit ‚ÄúGenerate report‚Äù.&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/4dbab6bf5466e7220980bccd2f5883f4ad661725/assets/example_dev_tools.png&quot; alt=&quot;Lighthouse integration in Chrome DevTools&quot; width=&quot;500px&quot;&gt; 
&lt;h2&gt;Using the Chrome extension&lt;/h2&gt; 
&lt;p&gt;The Chrome extension was available prior to Lighthouse being available in Chrome Developer Tools, and offers similar functionality.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: &lt;a href=&quot;https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk&quot;&gt;install the extension&lt;/a&gt; from the Chrome Web Store.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: follow the &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/#extension&quot;&gt;extension quick-start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using the Node CLI&lt;/h2&gt; 
&lt;p&gt;The Node CLI provides the most flexibility in how Lighthouse runs can be configured and reported. Users who want more advanced usage, or want to run Lighthouse in an automated fashion should use the Node CLI.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Lighthouse requires Node 12 LTS (12.x) or later.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install -g lighthouse
# or use yarn:
# yarn global add lighthouse
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: &lt;code&gt;lighthouse https://airhorner.com/&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;By default, Lighthouse writes the report to an HTML file. You can control the output format by passing flags.&lt;/p&gt; 
&lt;h3&gt;CLI options&lt;/h3&gt; 
&lt;!-- To update the help output:
  node lighthouse-cli --help | pbcopy
--&gt; 
&lt;pre&gt;&lt;code&gt;$ lighthouse --help

lighthouse &amp;lt;url&amp;gt; &amp;lt;options&amp;gt;

Logging:
  --verbose  Displays verbose logging  [boolean] [default: false]
  --quiet    Displays no progress, debug logs, or errors  [boolean] [default: false]

Configuration:
  --save-assets                  Save the trace contents &amp;amp; devtools logs to disk  [boolean] [default: false]
  --list-all-audits              Prints a list of all available audits and exits  [boolean] [default: false]
  --list-trace-categories        Prints a list of all required trace categories and exits  [boolean] [default: false]
  --print-config                 Print the normalized config for the given config and options, then exit.  [boolean] [default: false]
  --additional-trace-categories  Additional categories to capture with the trace (comma-delimited).  [string]
  --config-path                  The path to the config JSON.
                                 An example config file: lighthouse-core/config/lr-desktop-config.js  [string]
  --preset                       Use a built-in configuration.
                                 WARNING: If the --config-path flag is provided, this preset will be ignored.  [string] [choices: &quot;perf&quot;, &quot;experimental&quot;, &quot;desktop&quot;]
  --chrome-flags                 Custom flags to pass to Chrome (space-delimited). For a full list of flags, see https://bit.ly/chrome-flags
                                 Additionally, use the CHROME_PATH environment variable to use a specific Chrome binary. Requires Chromium version 66.0 or later. If omitted, any detected Chrome Canary or Chrome stable will be used.  [string] [default: &quot;&quot;]
  --port                         The port to use for the debugging protocol. Use 0 for a random port  [number] [default: 0]
  --hostname                     The hostname to use for the debugging protocol.  [string] [default: &quot;localhost&quot;]
  --form-factor                  Determines how performance metrics are scored and if mobile-only audits are skipped. For desktop, --preset=desktop instead.  [string] [choices: &quot;mobile&quot;, &quot;desktop&quot;]
  --screenEmulation              Sets screen emulation parameters. See also --preset. Use --screenEmulation.disabled to disable. Otherwise set these 4 parameters individually: --screenEmulation.mobile --screenEmulation.width=360 --screenEmulation.height=640 --screenEmulation.deviceScaleFactor=2
  --emulatedUserAgent            Sets useragent emulation  [string]
  --max-wait-for-load            The timeout (in milliseconds) to wait before the page is considered done loading and the run should continue. WARNING: Very high values can lead to large traces and instability  [number]
  --enable-error-reporting       Enables error reporting, overriding any saved preference. --no-enable-error-reporting will do the opposite. More: https://git.io/vFFTO  [boolean]
  --gather-mode, -G              Collect artifacts from a connected browser and save to disk. (Artifacts folder path may optionally be provided). If audit-mode is not also enabled, the run will quit early.
  --audit-mode, -A               Process saved artifacts from disk. (Artifacts folder path may be provided, otherwise defaults to ./latest-run/)
  --only-audits                  Only run the specified audits  [array]
  --only-categories              Only run the specified categories. Available categories: accessibility, best-practices, performance, pwa, seo  [array]
  --skip-audits                  Run everything except these audits  [array]
  --budget-path                  The path to the budget.json file for LightWallet.  [string]

Output:
  --output       Reporter for the results, supports multiple values. choices: &quot;json&quot;, &quot;html&quot;, &quot;csv&quot;  [array] [default: [&quot;html&quot;]]
  --output-path  The file path to output the results. Use &#39;stdout&#39; to write to stdout.
                   If using JSON output, default is stdout.
                   If using HTML or CSV output, default is a file in the working directory with a name based on the test URL and date.
                   If using multiple outputs, --output-path is appended with the standard extension for each output type. &quot;reports/my-run&quot; -&amp;gt; &quot;reports/my-run.report.html&quot;, &quot;reports/my-run.report.json&quot;, etc.
                   Example: --output-path=./lighthouse-results.html  [string]
  --view         Open HTML report in your browser  [boolean] [default: false]

Options:
  --version                            Show version number  [boolean]
  --help                               Show help  [boolean]
  --cli-flags-path                     The path to a JSON file that contains the desired CLI flags to apply. Flags specified at the command line will still override the file-based ones.
  --locale                             The locale/language the report should be formatted in
  --blocked-url-patterns               Block any network requests to the specified URL patterns  [array]
  --disable-storage-reset              Disable clearing the browser cache and other storage APIs before a run  [boolean]
  --throttling-method                  Controls throttling method  [string] [choices: &quot;devtools&quot;, &quot;provided&quot;, &quot;simulate&quot;]
  --throttling
  --throttling.rttMs                   Controls simulated network RTT (TCP layer)
  --throttling.throughputKbps          Controls simulated network download throughput
  --throttling.requestLatencyMs        Controls emulated network RTT (HTTP layer)
  --throttling.downloadThroughputKbps  Controls emulated network download throughput
  --throttling.uploadThroughputKbps    Controls emulated network upload throughput
  --throttling.cpuSlowdownMultiplier   Controls simulated + emulated CPU throttling
  --extra-headers                      Set extra HTTP Headers to pass with request
  --precomputed-lantern-data-path      Path to the file where lantern simulation data should be read from, overwriting the lantern observed estimates for RTT and server latency.  [string]
  --lantern-data-output-path           Path to the file where lantern simulation data should be written to, can be used in a future run with the `precomputed-lantern-data-path` flag.  [string]
  --plugins                            Run the specified plugins  [array]
  --channel  [string] [default: &quot;cli&quot;]
  --chrome-ignore-default-flags  [boolean] [default: false]

Examples:
  lighthouse &amp;lt;url&amp;gt; --view                                                                          Opens the HTML report in a browser after the run completes
  lighthouse &amp;lt;url&amp;gt; --config-path=./myconfig.js                                                     Runs Lighthouse with your own configuration: custom audits, report generation, etc.
  lighthouse &amp;lt;url&amp;gt; --output=json --output-path=./report.json --save-assets                         Save trace, screenshots, and named JSON report.
  lighthouse &amp;lt;url&amp;gt; --screenEmulation.disabled --throttling-method=provided --no-emulatedUserAgent  Disable device emulation and all throttling
  lighthouse &amp;lt;url&amp;gt; --chrome-flags=&quot;--window-size=412,660&quot;                                          Launch Chrome with a specific window size
  lighthouse &amp;lt;url&amp;gt; --quiet --chrome-flags=&quot;--headless&quot;                                             Launch Headless Chrome, turn off logging
  lighthouse &amp;lt;url&amp;gt; --extra-headers &quot;{\&quot;Cookie\&quot;:\&quot;monster=blue\&quot;, \&quot;x-men\&quot;:\&quot;wolverine\&quot;}&quot;        Stringify&#39;d JSON HTTP Header key/value pairs to send in requests
  lighthouse &amp;lt;url&amp;gt; --extra-headers=./path/to/file.json                                             Path to JSON file of HTTP Header key/value pairs to send in requests
  lighthouse &amp;lt;url&amp;gt; --only-categories=performance,pwa                                               Only run the specified categories. Available categories: accessibility, best-practices, performance, pwa, seo

For more information on Lighthouse, see https://developers.google.com/web/tools/lighthouse/.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Output Examples&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;lighthouse
# saves `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.html`

lighthouse --output json
# json output sent to stdout

lighthouse --output html --output-path ./report.html
# saves `./report.html`

# NOTE: specifying an output path with multiple formats ignores your specified extension for *ALL* formats
lighthouse --output json --output html --output-path ./myfile.json
# saves `./myfile.report.json` and `./myfile.report.html`

lighthouse --output json --output html
# saves `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.json` and `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.html`

lighthouse --output-path=~/mydir/foo.out --save-assets
# saves `~/mydir/foo.report.html`
# saves `~/mydir/foo-0.trace.json` and `~/mydir/foo-0.devtoolslog.json`

lighthouse --output-path=./report.json --output json
# saves `./report.json`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Lifecycle Examples&lt;/h5&gt; 
&lt;p&gt;You can run a subset of Lighthouse‚Äôs lifecycle if desired via the &lt;code&gt;--gather-mode&lt;/code&gt; (&lt;code&gt;-G&lt;/code&gt;) and &lt;code&gt;--audit-mode&lt;/code&gt; (&lt;code&gt;-A&lt;/code&gt;) CLI flags.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;lighthouse http://example.com -G
# launches browser, collects artifacts, saves them to disk (in `./latest-run/`) and quits

lighthouse http://example.com -A
# skips browser interaction, loads artifacts from disk (in `./latest-run/`), runs audits on them, generates report

lighthouse http://example.com -GA
# Normal gather + audit run, but also saves collected artifacts to disk for subsequent -A runs.


# You can optionally provide a custom folder destination to -G/-A/-GA. Without a value, the default will be `$PWD/latest-run`.
lighthouse -GA=./gmailartifacts https://gmail.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notes on Error Reporting&lt;/h4&gt; 
&lt;p&gt;The first time you run the CLI you will be prompted with a message asking you if Lighthouse can anonymously report runtime exceptions. The Lighthouse team uses this information to detect new bugs and avoid regressions. Opting out will not affect your ability to use Lighthouse in any way. &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/raw/master/docs/error-reporting.md&quot;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using the Node module&lt;/h2&gt; 
&lt;p&gt;You can also use Lighthouse programmatically with the Node module.&lt;/p&gt; 
&lt;p&gt;Read &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/readme.md#using-programmatically&quot;&gt;Using Lighthouse programmatically&lt;/a&gt; for help getting started.&lt;br&gt; Read &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/configuration.md&quot;&gt;Lighthouse Configuration&lt;/a&gt; to learn more about the configuration options available.&lt;/p&gt; 
&lt;h2&gt;Viewing a report&lt;/h2&gt; 
&lt;p&gt;Lighthouse can produce a report as JSON or HTML.&lt;/p&gt; 
&lt;p&gt;HTML report:&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/443ff2c8a297dfd2297dfaca86c4966a87c8574a/assets/example_audit.png&quot; alt=&quot;Lighthouse example audit&quot; width=&quot;500px&quot;&gt; 
&lt;h3&gt;Online Viewer&lt;/h3&gt; 
&lt;p&gt;Running Lighthouse with the &lt;code&gt;--output=json&lt;/code&gt; flag generates a JSON dump of the run. You can view this report online by visiting &lt;a href=&quot;https://googlechrome.github.io/lighthouse/viewer/&quot;&gt;https://googlechrome.github.io/lighthouse/viewer/&lt;/a&gt; and dragging the file onto the app. You can also use the ‚ÄúExport‚Äù button from the top of any Lighthouse HTML report and open the report in the &lt;a href=&quot;https://googlechrome.github.io/lighthouse/viewer/&quot;&gt;Lighthouse Viewer&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In the Viewer, reports can be shared by clicking the share icon in the top right corner and signing in to GitHub.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: shared reports are stashed as a secret Gist in GitHub, under your account.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Docs &amp;amp; Recipes&lt;/h2&gt; 
&lt;p&gt;Useful documentation, examples, and recipes to get you started.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/variability.md&quot;&gt;Dealing with variance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/readme.md#using-programmatically&quot;&gt;Using Lighthouse programmatically&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/authenticated-pages.md&quot;&gt;Testing a site with authentication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/plugins.md&quot;&gt;Developing Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/new-audits.md&quot;&gt;Making a New Audit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/readme.md#testing-on-a-mobile-device&quot;&gt;Testing on a mobile device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/performance-budgets.md&quot;&gt;Setting a performance budget&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/architecture.md&quot;&gt;Lighthouse Architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Recipes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/recipes/gulp&quot;&gt;gulp&lt;/a&gt; - helpful for CI integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/recipes/lighthouse-plugin-example&quot;&gt;Plugin&lt;/a&gt; - example Lighthouse plugin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/recipes/custom-audit&quot;&gt;Custom Audit example&lt;/a&gt; - extend Lighthouse, run your own audits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Videos&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The session from Google I/O 2018 covers the new performance engine, upcoming Lighthouse REST API, and using the Chrome UX report to evaluate real-user data.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=UvK9zAsSM8Q&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/UvK9zAsSM8Q/0.jpg&quot; alt=&quot;Lighthouse @ Google I/O 2018&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The session from Google I/O 2017 covers architecture, writing custom audits, GitHub/Travis/CI integration, headless Chrome, and more:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=NoRYn6gOtVo&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/NoRYn6gOtVo/0.jpg&quot; alt=&quot;Lighthouse @ Google I/O 2017&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;click to watch the video&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Develop&lt;/h2&gt; 
&lt;p&gt;Read on for the basics of hacking on Lighthouse. Also, see &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# yarn should be installed first

git clone https://github.com/GoogleChrome/lighthouse

cd lighthouse
yarn
yarn build-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node lighthouse-cli http://example.com
# append --chrome-flags=&quot;--no-sandbox --headless --disable-gpu&quot; if you run into problems connecting to Chrome
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Getting started tip&lt;/strong&gt;: &lt;code&gt;node --inspect-brk lighthouse-cli http://example.com&lt;/code&gt; to open up Chrome DevTools and step through the entire app. See &lt;a href=&quot;https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.59rma3ukm&quot;&gt;Debugging Node.js with Chrome DevTools&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# lint and test all files
yarn test

# watch for file changes and run tests
#   Requires http://entrproject.org : brew install entr
yarn watch

## run linting, unit, and smoke tests separately
yarn lint
yarn unit
yarn smoke

## run tsc compiler
yarn type-check
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docs&lt;/h3&gt; 
&lt;p&gt;Some of our docs have tests that run only in CI by default. If you end up needing to modify our documentation, you‚Äôll need to run &lt;code&gt;yarn test-docs&lt;/code&gt; locally to make sure they pass.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Additional Dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install jq&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Lighthouse Integrations in Web Perf services&lt;/h2&gt; 
&lt;p&gt;This section details services that have integrated Lighthouse data. If you‚Äôre working on a cool project integrating Lighthouse and would like to be featured here, file an issue to this repo or tweet at us &lt;a href=&quot;https://twitter.com/____lighthouse&quot;&gt;@_____lighthouse&lt;/a&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.webpagetest.org&quot;&gt;Web Page Test&lt;/a&gt;&lt;/strong&gt; ‚Äî An &lt;a href=&quot;https://github.com/WPO-Foundation/webpagetest&quot;&gt;open source&lt;/a&gt; tool for measuring and analyzing the performance of web pages on real devices. Users can choose to produce a Lighthouse report alongside the analysis of WebPageTest results.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://httparchive.org/&quot;&gt;HTTPArchive&lt;/a&gt;&lt;/strong&gt; - HTTPArchive tracks how the web is built by crawling 500k pages with Web Page Test, including Lighthouse results, and stores the information in BigQuery where it is &lt;a href=&quot;https://discuss.httparchive.org/t/quickstart-guide-to-exploring-the-http-archive/682&quot;&gt;publicly available&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://calibreapp.com&quot;&gt;Calibre&lt;/a&gt;&lt;/strong&gt; - Calibre is a comprehensive performance monitoring platform running on Lighthouse. See the performance impact of your work before it hits production with GitHub Pull Request Reviews. Track the impact of Third Party scripts. Automate your performance system with a developer-first Node.js API. Try Calibre with a free 15-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.debugbear.com/&quot;&gt;DebugBear&lt;/a&gt;&lt;/strong&gt; - DebugBear is a website monitoring tool based on Lighthouse. See how your scores and metrics changed over time, with a focus on understanding what caused each change. DebugBear is a paid product with a free 30-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://treo.sh&quot;&gt;Treo&lt;/a&gt;&lt;/strong&gt; - Treo is Lighthouse as a Service. It provides regression testing, geographical regions, custom networks, and integrations with GitHub &amp;amp; Slack. Treo is a paid product with plans for solo-developers and teams.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.alertdesk.com/&quot;&gt;Alertdesk&lt;/a&gt;&lt;/strong&gt; - Alertdesk is based on Lighthouse and helps you to keep track of your site‚Äôs quality &amp;amp; performance. Run daily quality &amp;amp; performance tests from both Mobile and Desktop and dive into the powerful &amp;amp; intuitive reports. You can also monitor your uptime (every minute - 24/7) &amp;amp; domain health. Alertdesk is a paid product with a free 14-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://screpy.com&quot;&gt;Screpy&lt;/a&gt;&lt;/strong&gt; - Screpy is a web analysis tool that can analyze all pages of your websites in one dashboard and monitor them with your team. It‚Äôs powered by Lighthouse and it also includes some different analysis tools (SERP, W3C, Uptime, etc). Screpy has free and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://lighthouse-keeper.com/&quot;&gt;Lighthouse Keeper&lt;/a&gt;&lt;/strong&gt; - Lighthouse Keeper monitors your pages‚Äô Lighthouse scores and notifies you if they drop below your thresholds. Lighthouse Keeper is a free service that monitors up to 3 URLs once per day.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://siteimprove.com/en/performance/&quot;&gt;Siteimprove Performance&lt;/a&gt;&lt;/strong&gt; ‚Äî Siteimprove Performance is a web Performance monitoring solution that enables a marketer, manager or decision maker to understand and optimize website load times. Get easy-to-use insights with a focus on quick and impactful wins. Siteimprove Performance is a paid product with a free 14-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://speedcurve.com&quot;&gt;SpeedCurve&lt;/a&gt;&lt;/strong&gt; ‚Äî SpeedCurve is a tool for continuously monitoring web performance across different browsers, devices, and regions. It can aggregate any metric including Lighthouse scores across multiple pages and sites, and allows you to set performance budgets with Slack or email alerts. SpeedCurve is a paid product with a free 30-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://speedrank.app&quot;&gt;Speedrank&lt;/a&gt;&lt;/strong&gt; - Speedrank monitors the performance of your website in the background. It displays Lighthouse reports over time and delivers recommendations for improvement. Speedrank is a paid product with 14-day-trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.foo.software/lighthouse&quot;&gt;Foo&lt;/a&gt;&lt;/strong&gt; - Lighthouse-as-a-service offering free and premium plans. Provides monitoring and historical reporting of Lighthouse audits with CircleCI, GitHub, and other integrations. Features include Slack notifications, PR comment reporting and more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://apdex.co&quot;&gt;Apdex&lt;/a&gt;&lt;/strong&gt; - Apdex is a website performance service. The main features are historical Lighthouse report visualizations, mobile/desktop options, alerts, uptime monitoring, and more. There are flexible paid plans and a 30-day free trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://websu.io&quot;&gt;Websu&lt;/a&gt;&lt;/strong&gt; - Websu is an open source project to provide Lighthouse-as-a-Service through a simple HTTP REST API. The main features are ability to host and deploy in your own environment and historical Lighthouse report summaries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Lighthouse Integrations in non-Web Perf services&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pagewatch.dev/&quot;&gt;PageWatch&lt;/a&gt;&lt;/strong&gt; ‚Äî PageWatch is a tool to find problem pages on your website. It provides insights into spelling errors, layout issues, slow pages (powered by Lighthouse) and more. PageWatch is offered via free and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.seo-guard.com&quot;&gt;SEO Guard&lt;/a&gt;&lt;/strong&gt; ‚Äî SEO Guard is a website monitoring solution. It provides metrics based on Lighthouse scores. The service is offered via free and paid premium plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://fluxguard.com/&quot;&gt;Fluxguard&lt;/a&gt;&lt;/strong&gt; - Fluxguard provides website DOM change monitoring orchestrated with Google Puppeteer, and audited by Lighthouse. Fluxguard is a freemium product, with monthly monitoring of up to 75 pages for free.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://microlink.io&quot;&gt;Microlink&lt;/a&gt;&lt;/strong&gt; ‚Äî Microlink is a cloud browser as API. It offers Lighthouse reports on demand, making it easy to build any service on top. Similar functionality is available via the underlying open-source project named browserless.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://wattspeed.com/&quot;&gt;Wattspeed&lt;/a&gt;&lt;/strong&gt; ‚Äî Wattspeed is a free tool that generates snapshots - historical captures of your web pages that include Lighthouse scores, a list of technologies, W3C HTML validator results, DOM size, mixed content info, and more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://awesometechstack.com&quot;&gt;AwesomeTechStack&lt;/a&gt;&lt;/strong&gt; ‚Äî AwesomeTechStack is a free to use website tech stack analyzer. AwesomeTechStack provides insights into the security, modernity, and performance of any website‚Äôs technology stack and guidance to improve performance. Lighthouse insights are a crucial part of a website‚Äôs tech stack rating.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/treosh/lighthouse-plugin-field-performance&quot;&gt;lighthouse-plugin-field-performance&lt;/a&gt;&lt;/strong&gt; - a plugin that adds real-user performance metrics for the URL using the data from &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report/&quot;&gt;Chrome UX Report&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/googleads/publisher-ads-lighthouse-plugin&quot;&gt;lighthouse-plugin-publisher-ads&lt;/a&gt;&lt;/strong&gt; - a tool to improve ad speed and overall quality through a series of automated audits. At the moment, this is primarily targeted at sites using Google Ad Manager. This tool will aid in resolving discovered problems, providing a tool to be used to evaluate effectiveness of iterative changes while suggesting actionable feedback.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/dvelasquez/lighthouse-plugin-crux&quot;&gt;lighthouse-plugin-crux&lt;/a&gt;&lt;/strong&gt; - a plugin that quickly gathers real-user-metrics data from the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report/api/reference&quot;&gt;Chrome UX Report API&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;p&gt;Other awesome open source projects that use Lighthouse.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/TGiles/auto-lighthouse&quot;&gt;auto-lighthouse&lt;/a&gt;&lt;/strong&gt; - a CLI for crawling a domain and generating mobile and desktop reports for each page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/treosh/exthouse&quot;&gt;Exthouse&lt;/a&gt;&lt;/strong&gt; - Analyze the impact of a browser extension on web performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/boyney123/garie&quot;&gt;Garie&lt;/a&gt;&lt;/strong&gt; - An open source tool for monitoring performance using Lighthouse, PageSpeed Insights, &lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt;, &lt;a href=&quot;https://grafana.com/&quot;&gt;Grafana&lt;/a&gt; and &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://labs.moduscreate.com/gimbal-web-performance-audit-budgeting&quot;&gt;Gimbal&lt;/a&gt;&lt;/strong&gt; - An &lt;a href=&quot;https://github.com/ModusCreateOrg/gimbal&quot;&gt;open source (MIT licensed)&lt;/a&gt; tool used to measure, analyze, and budget aspects of a web application. Gimbal also integrates reports with GitHub pull requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Cognifide/gradle-lighthouse-plugin&quot;&gt;Gradle Lighthouse Plugin&lt;/a&gt;&lt;/strong&gt; - An open source Gradle plugin that runs Lighthouse tests on multiple URLs and asserts category score thresholds (useful in continuous integration).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/github/lightcrawler&quot;&gt;lightcrawler&lt;/a&gt;&lt;/strong&gt; - Crawl a website and run each page found through Lighthouse.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/emazzotta/lighthouse-badges&quot;&gt;lighthouse-badges&lt;/a&gt;&lt;/strong&gt; - Generate gh-badges (shields.io) based on Lighthouse performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.npmjs.com/package/lighthouse-batch&quot;&gt;lighthouse-batch&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse over a number of sites and generate a summary of their metrics/scores.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.npmjs.com/package/lighthouse-batch-parallel&quot;&gt;lighthouse-batch-parallel&lt;/a&gt;&lt;/strong&gt; - Run multiple Lighthouse runs in parallel to accelerate the data collecting process, get the result stream (csv, json, js object) in your own process (warning: performance results may be volatile).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/foo-software/lighthouse-check-action&quot;&gt;lighthouse-check-action&lt;/a&gt;&lt;/strong&gt; - A GitHub Action to run Lighthouse in a workflow, featuring Slack notifications and report upload to S3.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://circleci.com/orbs/registry/orb/foo-software/lighthouse-check&quot;&gt;lighthouse-check-orb&lt;/a&gt;&lt;/strong&gt; - A CircleCI Orb to run Lighthouse in a workflow, featuring Slack notifications and report upload to S3.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/andreasonny83/lighthouse-ci&quot;&gt;andreasonny83/lighthouse-ci&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and assert scores satisfy your custom thresholds.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse-ci&quot;&gt;GoogleChrome/lighthouse-ci&lt;/a&gt;&lt;/strong&gt; - (&lt;strong&gt;official&lt;/strong&gt;) Automate running Lighthouse for every commit, viewing the changes, and preventing regressions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/treosh/lighthouse-ci-action&quot;&gt;lighthouse-ci-action&lt;/a&gt;&lt;/strong&gt; - A GitHub Action that makes it easy to run Lighthouse in CI and keep your pages small using performance budgets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/thearegee/lighthouse-cron&quot;&gt;lighthouse-cron&lt;/a&gt;&lt;/strong&gt; - Cron multiple batch Lighthouse audits and emit results for sending to remote server.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/carlesnunez/lighthouse-gh-reporter&quot;&gt;lighthouse-gh-reporter&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse in CI and report back in a comment on your pull requests&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/ebidel/lighthouse-hue&quot;&gt;lighthouse-hue&lt;/a&gt;&lt;/strong&gt; - Set the color of Philips Hue lights based on a Lighthouse score&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/justinribeiro/lighthouse-jest-example&quot;&gt;lighthouse-jest-example&lt;/a&gt;&lt;/strong&gt; - Gather performance metrics via Lighthouse and assert results with Jest; uses Puppeteer to start Chrome with network emulation settings defined by WebPageTest.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/joytocode/lighthouse-lambda&quot;&gt;lighthouse-lambda&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse on AWS Lambda with prebuilt stable desktop Headless Chrome.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/manekinekko/lighthouse-magic-light&quot;&gt;lighthouse-magic-light&lt;/a&gt;&lt;/strong&gt; - Set the color of the MagicLight Bluetooth Smart Light Bulb based on Lighthouse score&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/rishichawda/lighthouse-mocha-example&quot;&gt;lighthouse-mocha-example&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse performance tests with Mocha and chrome-launcher.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/verivox/lighthouse-monitor&quot;&gt;lighthouse-monitor&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse against all your URLs. Send metrics to any backend you want, save all reports with automatic data retention, and compare any two results in a web UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/foo-software/lighthouse-persist&quot;&gt;lighthouse-persist&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and upload HTML reports to an AWS S3 bucket.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/dvelasquez/lighthouse-viewer/tree/main/packages/lighthouse-viewer&quot;&gt;lighthouse-viewer&lt;/a&gt;&lt;/strong&gt; - Render the Lighthouse JSON into a report, using the Lighthouse Report Renderer repackaged as UMD and ESM. Also available with React, Svelte and Vue wrappers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/godaddy/lighthouse4u&quot;&gt;lighthouse4u&lt;/a&gt;&lt;/strong&gt; - LH4U provides Google Lighthouse as a service, surfaced by both a friendly UI+API, and backed by Elastic Search for easy querying and visualization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://performance-budgets.netlify.com/&quot;&gt;performance-budgets&lt;/a&gt;&lt;/strong&gt; - Easily assert Lighthouse budgets with Docker.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/paulirish/pwmetrics/&quot;&gt;pwmetrics&lt;/a&gt;&lt;/strong&gt; - Gather performance metrics&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.npmjs.com/package/react-lighthouse-viewer&quot;&gt;react-lighthouse-viewer&lt;/a&gt;&lt;/strong&gt; - Render a Lighthouse JSON report in a React Component.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/viasite/site-audit-seo&quot;&gt;site-audit-seo&lt;/a&gt;&lt;/strong&gt; - CLI tool for SEO site audit, crawl site, lighthouse each page. Output to console and tables in csv, xlsx, json, web or Google Drive.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/addyosmani/webpack-lighthouse-plugin&quot;&gt;webpack-lighthouse-plugin&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse from a Webpack build.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/lirantal/is-website-vulnerable&quot;&gt;is-website-vulnerable&lt;/a&gt;&lt;/strong&gt; - An open source Node.js CLI tool that finds publicly known security vulnerabilities in a website‚Äôs frontend JavaScript libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/mfrachet/cypress-audit&quot;&gt;cypress-audit&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and Pa11y audits directly in your E2E test suites.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How does Lighthouse work?&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/architecture.md&quot;&gt;Lighthouse Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why is the performance score so low? It looks fine to me.&lt;/h3&gt; 
&lt;p&gt;Lighthouse reports the performance metrics as they would be experienced by a typical mobile user on a 4G connection and a mid-tier ~$200 phone. Even if it loads quickly on your device and network, users in other environments will experience the site very differently.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/throttling.md&quot;&gt;guide to throttling&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why does the performance score change so much?&lt;/h3&gt; 
&lt;p&gt;Lighthouse performance scores will change due to inherent variability in web and network technologies, even if there hasn‚Äôt been a code change. Test in consistent environments, run Lighthouse multiple times, and beware of variability before drawing conclusions about a performance-impacting change.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/variability.md&quot;&gt;guide to reducing variability&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Can I configure the lighthouse run?&lt;/h3&gt; 
&lt;p&gt;Yes! Details in &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/configuration.md&quot;&gt;Lighthouse configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;How does Lighthouse use network throttling, and how can I make it better?&lt;/h3&gt; 
&lt;p&gt;Good question. Network and CPU throttling are applied by default in a Lighthouse run. The network attempts to emulate slow 4G connectivity and the CPU is slowed down 4x from your machine‚Äôs default speed. If you prefer to run Lighthouse without throttling, you‚Äôll have to use the CLI and disable it with the &lt;code&gt;--throttling.*&lt;/code&gt; flags mentioned above.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/throttling.md&quot;&gt;guide to network throttling&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Are results sent to a remote server?&lt;/h3&gt; 
&lt;p&gt;Nope. Lighthouse runs locally, auditing a page using a local version of the Chrome browser installed on the machine. Report results are never processed or beaconed to a remote server.&lt;/p&gt; 
&lt;h3&gt;How do I get localized Lighthouse results via the CLI?&lt;/h3&gt; 
&lt;p&gt;Starting in Lighthouse 8.0, Lighthouse relies entirely on native &lt;code&gt;Intl&lt;/code&gt; support and no longer uses an &lt;code&gt;Intl&lt;/code&gt; polyfill. If you‚Äôre using Node 13 or later, there should be no issue because Node is now &lt;a href=&quot;https://nodejs.medium.com/node-js-12-to-lts-and-node-js-13-is-here-e28d6a4a2bd#9514&quot;&gt;built with &lt;code&gt;full-icu&lt;/code&gt; by default&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;However, if you‚Äôre using Node 12 (when &lt;code&gt;small-icu&lt;/code&gt; was the default) or another &lt;code&gt;small-icu&lt;/code&gt; Node build, you may see Lighthouse log messages about your locale not being available. To remedy this, you can upgrade to Node 14+ or manually install ICU data by using the &lt;a href=&quot;https://www.npmjs.com/package/full-icu&quot;&gt;&lt;code&gt;full-icu&lt;/code&gt;&lt;/a&gt; module and the &lt;a href=&quot;https://nodejs.org/api/intl.html#intl_providing_icu_data_at_runtime&quot;&gt;&lt;code&gt;--icu-data-dir&lt;/code&gt; node flag&lt;/a&gt; at launch.&lt;/p&gt; 
&lt;h3&gt;How do I author custom audits to extend Lighthouse?&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: see &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/architecture.md&quot;&gt;Lighthouse Architecture&lt;/a&gt; for more information on terminology and architecture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Lighthouse can be extended to run custom audits and gatherers that you author. This is great if you‚Äôre already tracking performance metrics in your site and want to surface those metrics within a Lighthouse report.&lt;/p&gt; 
&lt;p&gt;If you‚Äôre interested in running your own custom audits, check out our &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/docs/recipes/custom-audit&quot;&gt;Custom Audit Example&lt;/a&gt; over in recipes.&lt;/p&gt; 
&lt;h3&gt;How do I contribute?&lt;/h3&gt; 
&lt;p&gt;We‚Äôd love help writing audits, fixing bugs, and making the tool more useful! See &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/GoogleChrome/lighthouse/8b3d7f052b2e64dd857e741d7395647f487697e7/assets/lighthouse-logo.png&quot; alt=&quot;Lighthouse logo&quot; height=&quot;150&quot;&gt; &lt;br&gt; &lt;b&gt;Lighthouse&lt;/b&gt;, Ààlƒ´tÀåhous (n): a &lt;s&gt;tower or other structure&lt;/s&gt; tool containing a beacon light to warn or guide &lt;s&gt;ships at sea&lt;/s&gt; developers. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mechaniac/Map-of-Javascript</title>
      <link>https://github.com/mechaniac/Map-of-Javascript</link>
      <description>&lt;p&gt;Javascript on one sheet. (and one for algorithms)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;map of javascript&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/mechaniac/javaScript_cheatSheet/raw/main/Javascript_01.jpg?raw=true&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;p&gt;data structures and alogrithms &lt;img src=&quot;https://github.com/mechaniac/javaScript_cheatSheet/raw/main/algorithms_01.jpg?raw=true&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;p&gt;HTML and CSS and DOM interaction &lt;img src=&quot;https://github.com/mechaniac/javaScript_cheatSheet/raw/main/HTML_CSS_01.jpg?raw=true&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jhu-ep-coursera/fullstack-course4</title>
      <link>https://github.com/jhu-ep-coursera/fullstack-course4</link>
      <description>&lt;p&gt;Example code for HTML, CSS, and Javascript for Web Developers Coursera Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coursera: HTML, CSS and Javascript for Web Developers&lt;/h1&gt; 
&lt;h2&gt;Example Source Code&lt;/h2&gt; 
&lt;p&gt;This repository contains all of the example source code used in the Coursera.org course called &lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;HTML, CSS and Javascript for Web Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;Enroll now! It‚Äôs free!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please check our FAQ to see if a question you want to ask on the forums has been answered already. Here is the link to the FAQ:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jhu-ep-coursera/fullstack-course4/master/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Customer Website Launched&lt;/h2&gt; 
&lt;p&gt;As part of this course we developed a &lt;em&gt;real&lt;/em&gt; website for a &lt;em&gt;real&lt;/em&gt; client. Below is a link to the final product. (&lt;em&gt;Note&lt;/em&gt;, the site is left without speed optimization to keep it exactly as it was in the course. Site optimization wasn‚Äôt part of the course).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.davidchuschinabistro.com/&quot;&gt;David Chu‚Äôs China Bistro Restaurant in Baltimore, MD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; ¬∑ &lt;a href=&quot;https://github.com/facebook/react/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&quot; alt=&quot;CircleCI Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don‚Äôt make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&quot;https://reactnative.dev/&quot;&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Learn how to use React in your own project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://reactjs.org/docs/getting-started.html#online-playgrounds&quot;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html&quot;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;Create a New React App&lt;/a&gt; if you‚Äôre looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&quot;https://reactjs.org/docs/cdn-links.html&quot;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href=&quot;https://reactjs.org/docs&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/tutorial/tutorial.html&quot;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hello-world.html&quot;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/jsx-in-depth.html&quot;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/react-api.html&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/community/support.html&quot;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href=&quot;https://reactjs.org/&quot;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

ReactDOM.render(
  &amp;lt;HelloMessage name=&quot;Taylor&quot; /&amp;gt;,
  document.getElementById(&#39;container&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render ‚ÄúHello Taylor‚Äù into a container on the page.&lt;/p&gt; 
&lt;p&gt;You‚Äôll notice that we used an HTML-like syntax; &lt;a href=&quot;https://reactjs.org/docs/introducing-jsx.html&quot;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you‚Äôre using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&quot;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&quot;https://github.com/facebook/react/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>odoo/odoo</title>
      <link>https://github.com/odoo/odoo</link>
      <description>&lt;p&gt;Odoo. Open Source Apps To Grow Your Business.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;http://runbot.odoo.com/runbot&quot;&gt;&lt;img src=&quot;http://runbot.odoo.com/runbot/badge/flat/1/master.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.odoo.com/documentation/master&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-docs-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Tech Doc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.odoo.com/forum/help-1&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-help-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Help&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://nightly.odoo.com/&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-nightly-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Nightly Builds&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Odoo&lt;/h2&gt; 
&lt;p&gt;Odoo is a suite of web based open source business apps.&lt;/p&gt; 
&lt;p&gt;The main Odoo Apps include an &lt;a href=&quot;https://www.odoo.com/page/crm&quot;&gt;Open Source CRM&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/website-builder&quot;&gt;Website Builder&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/e-commerce&quot;&gt;eCommerce&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/warehouse&quot;&gt;Warehouse Management&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/project-management&quot;&gt;Project Management&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/accounting&quot;&gt;Billing &amp;amp; Accounting&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/point-of-sale&quot;&gt;Point of Sale&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/employees&quot;&gt;Human Resources&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/lead-automation&quot;&gt;Marketing&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/manufacturing&quot;&gt;Manufacturing&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/#apps&quot;&gt;‚Ä¶&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Odoo Apps can be used as stand-alone applications, but they also integrate seamlessly so you get a full-featured &lt;a href=&quot;https://www.odoo.com&quot;&gt;Open Source ERP&lt;/a&gt; when you install several Apps.&lt;/p&gt; 
&lt;h2&gt;Getting started with Odoo&lt;/h2&gt; 
&lt;p&gt;For a standard installation please follow the &lt;a href=&quot;https://www.odoo.com/documentation/14.0/administration/install.html&quot;&gt;Setup instructions&lt;/a&gt; from the documentation.&lt;/p&gt; 
&lt;p&gt;To learn the software, we recommend the &lt;a href=&quot;https://www.odoo.com/slides&quot;&gt;Odoo eLearning&lt;/a&gt;, or &lt;a href=&quot;https://www.odoo.com/page/scale-up-business-game&quot;&gt;Scale-up&lt;/a&gt;, the &lt;a href=&quot;https://www.odoo.com/page/scale-up-business-game&quot;&gt;business game&lt;/a&gt;. Developers can start with &lt;a href=&quot;https://www.odoo.com/documentation/14.0/developer/howtos.html&quot;&gt;the developer tutorials&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matt8707/hass-config</title>
      <link>https://github.com/matt8707/hass-config</link>
      <description>&lt;p&gt;A different take on designing a Lovelace UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Home Assistant Configuration&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.home-assistant.io/installation/#compare-installation-methods&quot;&gt;Home Assistant Container&lt;/a&gt; (&lt;a href=&quot;https://hub.docker.com/r/homeassistant/home-assistant&quot;&gt;Docker&lt;/a&gt;) on a NAS (&lt;a href=&quot;https://www.synology.com/products/DS918+&quot;&gt;Synology DiskStation DS918+&lt;/a&gt;). My use case is a &lt;a href=&quot;https://www.durable.eu/information-and-presentation/tablet-holder/wall-mounted-tablet-holder/tablet-holder-wall.html&quot;&gt;wall mounted&lt;/a&gt; tablet (&lt;a href=&quot;https://www.samsung.com/us/mobile/tablets/galaxy-tab-a/galaxy-tab-a-10-1-2019-32gb-black-wi-fi-sm-t510nzkaxar/&quot;&gt;Galaxy Tab A 10.1&lt;/a&gt;) using &lt;a href=&quot;https://www.ozerov.de/fully-kiosk-browser/&quot;&gt;Fully Kiosk Browser&lt;/a&gt;, and on desktop using &lt;a href=&quot;https://github.com/mrvnklm/homeassistant-desktop&quot;&gt;homeassistant-desktop&lt;/a&gt;. My configuration is exposed to HomeKit with Apple Tv acting as a hub for remote connection. I also support &lt;a href=&quot;https://www.nabucasa.com/&quot;&gt;Nabu Casa&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you like anything here be sure to :star2: my repo!&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/screenshot.png&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;June 2021&lt;/h1&gt; 
&lt;p&gt;While picture elements is still a valid card for layouts that doesn‚Äôt follow a specific grid, this dashboard does. Instead of placing button cards using coordinates, it‚Äôs now placed onto a grid that is responsive.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Layout&lt;/strong&gt; &lt;code&gt;custom:layout-card&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CSS grid everything and as a bonus‚Ä¶&lt;/li&gt; 
 &lt;li&gt;Mobile and portrait dashboards&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;https://user-images.githubusercontent.com/36163594/120789256-ad825000-c531-11eb-97c2-18904c48efdd.mp4&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Buttons&lt;/strong&gt; &lt;code&gt;custom:button-card&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Loader template doesn‚Äôt need any &lt;code&gt;input_boolean&lt;/code&gt; helpers anymore&lt;/li&gt; 
 &lt;li&gt;Icons will only animate on state change to prevent all icons animating on dashboard refresh&lt;/li&gt; 
 &lt;li&gt;Some entity checks for undefined entities, no errors on restarts&lt;/li&gt; 
 &lt;li&gt;Added a bounce effect to the button when pressed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Theme&lt;/strong&gt; &lt;code&gt;custom:card-mod&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reworked themes with focus on performance&lt;/li&gt; 
 &lt;li&gt;Wrote a tool to help with styling &lt;a href=&quot;https://matt8707.github.io/card-mod-helper/&quot;&gt;card-mod-helper&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Deprecated&lt;/strong&gt; &lt;em&gt;If you‚Äôre looking for picture elements, browse this repository before March 2021 &lt;a href=&quot;https://github.com/matt8707/hass-config/tree/c9dd19e04bd4fde2322e610a42f4e246b58ee19a&quot;&gt;https://github.com/matt8707/hass-config/tree/c9dd19e04bd4fde2322e610a42f4e246b58ee19a&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Includes&lt;/strong&gt; Since this configuration is split into several yaml files, I‚Äôm using &lt;a href=&quot;https://github.com/akmolina28/lovelace-gulp-watch&quot;&gt;lovelace-gulp-watch&lt;/a&gt;, which auto updates lovelace if an included file is changed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Known issues&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;card-mod randomly not applying markdown styling on 2021.6.0 &lt;a href=&quot;https://github.com/thomasloven/lovelace-card-mod/issues/130&quot;&gt;#130&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;swipe-card not updating size unless resizing window &lt;a href=&quot;https://github.com/bramkragten/swipe-card/issues/32&quot;&gt;#32&lt;/a&gt; &lt;a href=&quot;https://github.com/thomasloven/lovelace-layout-card/issues/147&quot;&gt;#147&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt; If you want, you can &lt;a href=&quot;https://www.buymeacoffee.com/matt8707&quot;&gt;buy me a beer&lt;/a&gt; :blush:&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A different take on designing a &lt;a href=&quot;https://www.home-assistant.io/lovelace/&quot;&gt;Lovelace UI&lt;/a&gt; using &lt;s&gt;picture elements card&lt;/s&gt; &lt;a href=&quot;https://github.com/thomasloven/lovelace-layout-card&quot;&gt;custom:layout-card&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Achieving a less cluttered interface by displaying &lt;a href=&quot;https://github.com/thomasloven/hass-browser_mod#popup&quot;&gt;more information&lt;/a&gt; on a &lt;a href=&quot;https://www.home-assistant.io/lovelace/picture-elements/#hold_action&quot;&gt;long press&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading wheel for slow responding entities such as booting a computer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thomasloven/hass-browser_mod#media_player&quot;&gt;Adding sounds&lt;/a&gt; to the UI using automations listening for events&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/css/css3_animations.asp&quot;&gt;CSS Animations&lt;/a&gt; based on state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/animations.gif&quot; alt=&quot;animations&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;The sidebar&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.home-assistant.io/lovelace/markdown/&quot;&gt;Markdown Card&lt;/a&gt; to create dynamic &lt;a href=&quot;https://www.home-assistant.io/docs/configuration/templating/&quot;&gt;templates&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Time and date with greeting based on time of day&lt;/li&gt; 
 &lt;li&gt;Lights and switches that are on, using natural language&lt;/li&gt; 
 &lt;li&gt;Temperature with emoji based on weather conditions&lt;/li&gt; 
 &lt;li&gt;Important calendar information&lt;/li&gt; 
 &lt;li&gt;Other conditional alerts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sidebar footer&lt;/h3&gt; 
&lt;p&gt;The three icons at the bottom in order:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Card to control &lt;a href=&quot;https://www.mi-store.se/en/smart-homes/robot-vacuum-cleaners/xiaomi-robot-vacuum-2-roborock&quot;&gt;robot vacuum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitor &lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt;, &lt;a href=&quot;https://www.samsung.com/us/mobile/tablets/galaxy-tab-a/galaxy-tab-a-10-1-2019-32gb-black-wi-fi-sm-t510nzkaxar/&quot;&gt;tablet&lt;/a&gt; and &lt;a href=&quot;https://www.synology.com/products/DS918+&quot;&gt;Network Attached Storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lists available HACS updates and release notes for Home Assistant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/info.png&quot; alt=&quot;info&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Media&lt;/h3&gt; 
&lt;p&gt;Conditionally displaying media player controls based on last active device such as &lt;a href=&quot;https://www.home-assistant.io/integrations/apple_tv/&quot;&gt;Apple TV&lt;/a&gt;, &lt;a href=&quot;https://www.home-assistant.io/integrations/ps4/&quot;&gt;Playstation 4&lt;/a&gt;, &lt;a href=&quot;https://www.home-assistant.io/integrations/cast/&quot;&gt;Google Nest Mini&lt;/a&gt;. If nothing is active for 15 minutes then a poster of last downloaded movie/episode is shown (&lt;a href=&quot;https://github.com/Radarr/Radarr&quot;&gt;Radarr&lt;/a&gt;/&lt;a href=&quot;https://github.com/Sonarr/Sonarr&quot;&gt;Sonarr&lt;/a&gt;). Swipe to reveal other than last active media players.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/media.gif&quot; alt=&quot;media&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Lights and sensors&lt;/h3&gt; 
&lt;p&gt;All &lt;a href=&quot;https://www2.meethue.com&quot;&gt;Philips Hue&lt;/a&gt; lights with &lt;a href=&quot;https://www2.meethue.com/en-gb/p/hue-motion-sensor/8718696743171&quot;&gt;sensors&lt;/a&gt; in hallway, bathroom and walk-in closet.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/light.gif&quot; alt=&quot;light&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Switches&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.switch-bot.com/bot&quot;&gt;SwitchBot&lt;/a&gt; to cold boot computer with a raspberry as a &lt;a href=&quot;https://github.com/OpenWonderLabs/python-host&quot;&gt;hub&lt;/a&gt;. Numerous shell commands to monitor and control macOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.belkin.com/&quot;&gt;Belkin WeMo Switch&lt;/a&gt; to control studio monitors (speakers) with automations to apply &lt;a href=&quot;https://www.sonarworks.com/reference&quot;&gt;EQ calibration&lt;/a&gt; and volume control through AppleScript&lt;/li&gt; 
 &lt;li&gt;Control a pedestal fan, using &lt;a href=&quot;https://www.belkin.com/&quot;&gt;Belkin WeMo Switch&lt;/a&gt; and hue motion sensor temperature data to automate on summer nights&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ibroadlink.com/products/ir+rf&quot;&gt;Broadlink&lt;/a&gt; to control fan and air purifier with IR and &lt;a href=&quot;https://www.gosund.com/download/smart_plug/127.html&quot;&gt;Gosund Smart Wi-Fi Plug&lt;/a&gt; for power/state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/info_light.png&quot; alt=&quot;info_light&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Custom icons&lt;/h3&gt; 
&lt;p&gt;I made some custom icons located in &lt;code&gt;www/custom_icons.js&lt;/code&gt;. If you want to make your own I recommend reading the &lt;a href=&quot;https://material.io/design/iconography/system-icons.html#design-principles&quot;&gt;material design principles&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/custom_icons.png&quot; alt=&quot;custom_icons&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Misc&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/vacuum.png&quot; alt=&quot;vacuum&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/misc.png&quot; alt=&quot;misc&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/tracker.png&quot; alt=&quot;tracker&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Home Assistant Community Topic&lt;/strong&gt;&lt;br&gt; &lt;a href=&quot;https://community.home-assistant.io/t/a-different-take-on-designing-a-lovelace-ui/162594&quot;&gt;https://community.home-assistant.io/t/a-different-take-on-designing-a-lovelace-ui/162594&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AMAI-GmbH/AI-Expert-Roadmap</title>
      <link>https://github.com/AMAI-GmbH/AI-Expert-Roadmap</link>
      <description>&lt;p&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap&quot;&gt; &lt;img src=&quot;https://uploads-ssl.webflow.com/58e6a2b25c28230d367487ad/5c32232ecb585fcc5c4645e1_icon_machine-learning.svg?sanitize=true&quot; alt=&quot;Developer Roadmap&quot; width=&quot;96&quot; height=&quot;96&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;i.am.ai&lt;br&gt;AI Expert Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://twitter.com/home?status=https://i.am.ai/roadmap Roadmap to becoming an Artificial Intelligence Expert in 2021&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tweet-blue.svg?logo=twitter&amp;amp;logoColor=white&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/shareArticle?mini=true&amp;amp;url=https://i.am.ai/roadmap&amp;amp;title=&amp;amp;summary=Roadmap to becoming an Artificial Intelligence Expert in 2021&amp;amp;source=&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/post-blue.svg?logo=linkedin&amp;amp;logoColor=white&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Roadmap-2021-yellowgreen.svg?sanitize=true&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Badge&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://img.shields.io/badge/Author-AMAI GmbH-blue.svg&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/MIT/&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Below you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a data scientist, machine learning or an ai expert. We made these charts for our new employees to make them AI Experts but we wanted to share them here to help the community.&lt;/p&gt; 
&lt;p&gt;If you are interested to become an AI EXPERT at &lt;a href=&quot;https://www.linkedin.com/company/amai-gmbh/?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Become+Expert&quot;&gt;AMAI&lt;/a&gt; in Germany, or you want to &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Hire+Expert&quot;&gt;hire an AI Expert&lt;/a&gt;, please say &lt;a href=&quot;mailto:hi@am.ai&quot;&gt;hi@am.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Note&lt;/h2&gt; 
&lt;p&gt;üëâ An &lt;strong&gt;interactive version with links to follow&lt;/strong&gt; about each bullet of the list can be found at &lt;a href=&quot;https://i.am.ai/roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Interactive&quot;&gt;i.am.ai/roadmap&lt;/a&gt; üëà&lt;/p&gt; 
&lt;p&gt;To receive updates &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/stargazers&quot;&gt;star :star:&lt;/a&gt; and watch :eyes: the &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/&quot;&gt;GitHub Repo&lt;/a&gt; to get notified, when we add new content to stay on the top of the most recent research.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;The purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would better suited for some cases than the other and remember hip and trendy never means best suited for the job.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#introduction?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Introduction&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/intro.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Fundamentals&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#fundamentals?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Fundamentals&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/fundamentals.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Data Science Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#data-science-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DataScience&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/datascience.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Machine Learning Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#machine-learning-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+MachineLearning&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/machine_learning.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Deep Learning Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#deep-learning-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DeepLearning&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/deep_learning.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Data Engineer Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#data-engineer-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DataEngineer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/data_engineer.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Big Data Engineer Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#big-data-engineer-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+BigDataEngineer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/big_data_engineer.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;üö¶ Wrap Up&lt;/h2&gt; 
&lt;p&gt;If you think any of the roadmaps can be improved, please do open a PR with any updates and submit any issues. Also, we will continue to improve this, so you might want to watch/star this repository to revisit.&lt;/p&gt; 
&lt;h2&gt;üôå Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/contributing.md&quot;&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open pull request with improvements&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
 &lt;li&gt;Reach out with any feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported By&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/company/amai-gmbh/?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+SupportedBy&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/logos/amai.svg?sanitize=true&quot; style=&quot;display: inherit;max-width: 150px;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://digitalhub-ai.de?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/logos/de-hub.svg?sanitize=true&quot; style=&quot;display: inherit; max-width: 150px;&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sudheerj/reactjs-interview-questions</title>
      <link>https://github.com/sudheerj/reactjs-interview-questions</link>
      <description>&lt;p&gt;List of top 500 ReactJS Interview Questions &amp; Answers....Coding exercise questions are coming soon!!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Interview Questions &amp;amp; Answers&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click :star:if you like the project. Pull Request are highly appreciated. Follow me &lt;a href=&quot;https://twitter.com/SudheerJonna&quot;&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://www.fullstack.cafe/?utm_source=github&amp;amp;utm_medium=sud&quot;&gt; 3600 Tech Interview Questions. &lt;b&gt;Answered&lt;/b&gt;. 
  &lt;div&gt; 
   &lt;img src=&quot;https://user-images.githubusercontent.com/13550565/76382460-cc784d80-6393-11ea-8837-2b89265ac853.png&quot; width=&quot;150&quot; alt=&quot;FullStack.Cafe&quot;&gt; 
  &lt;/div&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div&gt;
  Learn to code and get hired with 
 &lt;a href=&quot;https://zerotomastery.io/?utm_source=github&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=reactjs-interview-questions&quot;&gt;Zero To Mastery:&lt;/a&gt; 
 &lt;ol&gt; 
  &lt;li&gt;This &lt;a href=&quot;https://links.zerotomastery.io/react_sudheer&quot;&gt;React course&lt;/a&gt; is good if you‚Äôre struggling to learn React beyond the basics&lt;/li&gt; 
  &lt;li&gt;This &lt;a href=&quot;http://links.zerotomastery.io/mci_sudheer&quot;&gt;coding interview bootcamp&lt;/a&gt; is helpful if you‚Äôre serious about getting hired as a developer&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repository is specific to ReactJS. Please check &lt;a href=&quot;https://github.com/sudheerj/javascript-interview-questions&quot;&gt;Javascript Interview questions&lt;/a&gt; for core javascript questions.&lt;/p&gt; 
&lt;h2&gt;Downloading PDF/Epub formats&lt;/h2&gt; 
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href=&quot;https://github.com/sudheerj/reactjs-interview-questions/actions&quot;&gt;actions tab&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| No. | Questions | | ‚Äî | ‚Äî‚Äî‚Äî | | | &lt;strong&gt;Core React&lt;/strong&gt; | |1 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react&quot;&gt;What is React?&lt;/a&gt; | |2 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-major-features-of-react&quot;&gt;What are the major features of React?&lt;/a&gt; | |3 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jsx&quot;&gt;What is JSX?&lt;/a&gt; | |4 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-element-and-component&quot;&gt;What is the difference between Element and Component?&lt;/a&gt; | |5 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-components-in-react&quot;&gt;How to create components in React?&lt;/a&gt; | |6 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-to-use-a-class-component-over-a-function-component&quot;&gt;When to use a Class Component over a Function Component?&lt;/a&gt; | |7 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-pure-components&quot;&gt;What are Pure Components?&lt;/a&gt; | |8 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-state-in-react&quot;&gt;What is state in React?&lt;/a&gt; | |9 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-props-in-react&quot;&gt;What are props in React?&lt;/a&gt; | |10 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-state-and-props&quot;&gt;What is the difference between state and props?&lt;/a&gt; | |11 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-we-not-update-the-state-directly&quot;&gt;Why should we not update the state directly?&lt;/a&gt; | |12 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-callback-function-as-an-argument-of-setstate&quot;&gt;What is the purpose of callback function as an argument of setState()?&lt;/a&gt; |13 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-html-and-react-event-handling&quot;&gt;What is the difference between HTML and React event handling?&lt;/a&gt; | |14 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-bind-methods-or-event-handlers-in-jsx-callbacks&quot;&gt;How to bind methods or event handlers in JSX callbacks?&lt;/a&gt; | |15 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-a-parameter-to-an-event-handler-or-callback&quot;&gt;How to pass a parameter to an event handler or callback?&lt;/a&gt; | |16 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-synthetic-events-in-react&quot;&gt;What are synthetic events in React?&lt;/a&gt; | |17 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-inline-conditional-expressions&quot;&gt;What are inline conditional expressions?&lt;/a&gt; | |18 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements&quot;&gt;What is ‚Äúkey‚Äù prop and what is the benefit of using it in arrays of elements?&lt;/a&gt; | |19 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-refs&quot;&gt;What is the use of refs?&lt;/a&gt; | |20 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-refs&quot;&gt;How to create refs?&lt;/a&gt; |21 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-forward-refs&quot;&gt;What are forward refs?&lt;/a&gt; | |22 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#which-is-preferred-option-with-in-callback-refs-and-finddomnode&quot;&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/a&gt; | |23 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-string-refs-legacy&quot;&gt;Why are String Refs legacy?&lt;/a&gt; | |24 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-virtual-dom&quot;&gt;What is Virtual DOM?&lt;/a&gt; | |25 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-virtual-dom-works&quot;&gt;How Virtual DOM works?&lt;/a&gt; | |26 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-shadow-dom-and-virtual-dom&quot;&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/a&gt; | |27 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-fiber&quot;&gt;What is React Fiber?&lt;/a&gt; | |28 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-goal-of-react-fiber&quot;&gt;What is the main goal of React Fiber?&lt;/a&gt; | |29 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-controlled-components&quot;&gt;What are controlled components?&lt;/a&gt; | |30 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-uncontrolled-components&quot;&gt;What are uncontrolled components?&lt;/a&gt; | |31 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-createelement-and-cloneelement&quot;&gt;What is the difference between createElement and cloneElement?&lt;/a&gt; | |32 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-lifting-state-up-in-react&quot;&gt;What is Lifting State Up in React?&lt;/a&gt; | |33 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-phases-of-component-lifecycle&quot;&gt;What are the different phases of component lifecycle?&lt;/a&gt; | |34 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-of-react&quot;&gt;What are the lifecycle methods of React?&lt;/a&gt; | |35 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-higher-order-components&quot;&gt;What are Higher-Order components?&lt;/a&gt; | |36 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-props-proxy-for-hoc-component&quot;&gt;How to create props proxy for HOC component?&lt;/a&gt; | |37 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-context&quot;&gt;What is context?&lt;/a&gt; | |38 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-children-prop&quot;&gt;What is children prop?&lt;/a&gt; | |39 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-write-comments-in-react&quot;&gt;How to write comments in React?&lt;/a&gt; | |40 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-using-super-constructor-with-props-argument&quot;&gt;What is the purpose of using super constructor with props argument?&lt;/a&gt; | |41 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reconciliation&quot;&gt;What is reconciliation?&lt;/a&gt; | |42 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-state-with-a-dynamic-key-name&quot;&gt;How to set state with a dynamic key name?&lt;/a&gt; | |43 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-would-be-the-common-mistake-of-function-being-called-every-time-the-component-renders&quot;&gt;What would be the common mistake of function being called every time the component renders?&lt;/a&gt; | |44 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-lazy-function-supports-named-exports&quot;&gt;Is lazy function supports named exports?&lt;/a&gt; | |45 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-uses-classname-over-class-attribute&quot;&gt;Why React uses className over class attribute?&lt;/a&gt; | |46 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-fragments&quot;&gt;What are fragments?&lt;/a&gt; | |47 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-fragments-are-better-than-container-divs&quot;&gt;Why fragments are better than container divs?&lt;/a&gt; | |48 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-portals-in-react&quot;&gt;What are portals in React?&lt;/a&gt; | |49 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateless-components&quot;&gt;What are stateless components?&lt;/a&gt; | |50 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateful-components&quot;&gt;What are stateful components?&lt;/a&gt; | |51 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-apply-validation-on-props-in-react&quot;&gt;How to apply validation on props in React?&lt;/a&gt; | |52 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react&quot;&gt;What are the advantages of React?&lt;/a&gt; | |53 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-of-react&quot;&gt;What are the limitations of React?&lt;/a&gt; | |54 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-error-boundaries-in-react-v16&quot;&gt;What are error boundaries in React v16&lt;/a&gt; | |55 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-error-boundaries-handled-in-react-v15&quot;&gt;How error boundaries handled in React v15?&lt;/a&gt; | |56 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-recommended-ways-for-static-type-checking&quot;&gt;What are the recommended ways for static type checking?&lt;/a&gt; | |57 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-react-dom-package&quot;&gt;What is the use of react-dom package?&lt;/a&gt; | |58 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-render-method-of-react-dom&quot;&gt;What is the purpose of render method of react-dom?&lt;/a&gt; | |59 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reactdomserver&quot;&gt;What is ReactDOMServer?&lt;/a&gt; | |60 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-innerhtml-in-react&quot;&gt;How to use InnerHtml in React?&lt;/a&gt; | |61 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-styles-in-react&quot;&gt;How to use styles in React?&lt;/a&gt; | |62 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-events-are-different-in-react&quot;&gt;How events are different in React?&lt;/a&gt; | |63 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-setstate-in-constructor&quot;&gt;What will happen if you use setState in constructor?&lt;/a&gt; | |64 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-impact-of-indexes-as-keys&quot;&gt;What is the impact of indexes as keys?&lt;/a&gt; | |65 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-setstate-in-componentwillmount-method&quot;&gt;Is it good to use setState() in componentWillMount() method?&lt;/a&gt; | |66 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-props-in-initial-state&quot;&gt;What will happen if you use props in initial state?&lt;/a&gt; | |67 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-conditionally-render-components&quot;&gt;How do you conditionally render components?&lt;/a&gt; |68 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-be-careful-when-spreading-props-on-dom-elements&quot;&gt;Why we need to be careful when spreading props on DOM elements??&lt;/a&gt; | |69 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-use-decorators-in-react&quot;&gt;How you use decorators in React?&lt;/a&gt; | |70 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-memoize-a-component&quot;&gt;How do you memoize a component?&lt;/a&gt; | |71 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-implement-server-side-rendering-or-ssr&quot;&gt;How you implement Server-Side Rendering or SSR?&lt;/a&gt; | |72 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-enable-production-mode-in-react&quot;&gt;How to enable production mode in React?&lt;/a&gt; | |73 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-cra-and-its-benefits&quot;&gt;What is CRA and its benefits?&lt;/a&gt; | |74 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-lifecycle-methods-order-in-mounting&quot;&gt;What is the lifecycle methods order in mounting?&lt;/a&gt; | |75 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-going-to-be-deprecated-in-react-v16&quot;&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/a&gt; | |76 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromprops-lifecycle-method&quot;&gt;What is the purpose of getDerivedStateFromProps() lifecycle method?&lt;/a&gt; | |77 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getsnapshotbeforeupdate-lifecycle-method&quot;&gt;What is the purpose of getSnapshotBeforeUpdate() lifecycle method?&lt;/a&gt; | |78 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-hooks-replace-render-props-and-higher-order-components&quot;&gt;Do Hooks replace render props and higher order components?&lt;/a&gt; | |79 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-way-for-naming-components&quot;&gt;What is the recommended way for naming components?&lt;/a&gt; | |80 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-ordering-of-methods-in-component-class&quot;&gt;What is the recommended ordering of methods in component class?&lt;/a&gt; | |81 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-switching-component&quot;&gt;What is a switching component?&lt;/a&gt; | |82 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-pass-a-function-to-setstate&quot;&gt;Why we need to pass a function to setState()?&lt;/a&gt; | |83 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-strict-mode-in-react&quot;&gt;What is strict mode in React?&lt;/a&gt; | |84 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-mixins&quot;&gt;What are React Mixins?&lt;/a&gt; | |85 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-ismounted-an-anti-pattern-and-what-is-the-proper-solution&quot;&gt;Why is isMounted() an anti-pattern and what is the proper solution?&lt;/a&gt; | |86 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-pointer-events-supported-in-react&quot;&gt;What are the Pointer Events supported in React?&lt;/a&gt; | |87 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-component-names-start-with-capital-letter&quot;&gt;Why should component names start with capital letter?&lt;/a&gt; | |88 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-custom-dom-attributes-supported-in-react-v16&quot;&gt;Are custom DOM attributes supported in React v16?&lt;/a&gt; | |89 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-constructor-and-getinitialstate&quot;&gt;What is the difference between constructor and getInitialState?&lt;/a&gt; | |90 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-force-a-component-to-re-render-without-calling-setstate&quot;&gt;Can you force a component to re-render without calling setState?&lt;/a&gt; | |91 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-super-and-superprops-in-react-using-es6-classes&quot;&gt;What is the difference between super() and super(props) in React using ES6 classes?&lt;/a&gt; | |92 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-loop-inside-jsx&quot;&gt;How to loop inside JSX?&lt;/a&gt; | |93 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-props-in-attribute-quotes&quot;&gt;How do you access props in attribute quotes?&lt;/a&gt; | |94 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-proptype-array-with-shape&quot;&gt;What is React PropType array with shape?&lt;/a&gt; | |95 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-conditionally-apply-class-attributes&quot;&gt;How to conditionally apply class attributes?&lt;/a&gt; | |96 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-reactdom&quot;&gt;What is the difference between React and ReactDOM?&lt;/a&gt; | |97 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-reactdom-is-separated-from-react&quot;&gt;Why ReactDOM is separated from React?&lt;/a&gt; | |98 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-react-label-element&quot;&gt;How to use React label element?&lt;/a&gt; | |99 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-combine-multiple-inline-style-objects&quot;&gt;How to combine multiple inline style objects?&lt;/a&gt; | |100| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-re-render-the-view-when-the-browser-is-resized&quot;&gt;How to re-render the view when the browser is resized?&lt;/a&gt; |101| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-setstate-and-replacestate-methods&quot;&gt;What is the difference between setState and replaceState methods?&lt;/a&gt; | |102| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-listen-to-state-changes&quot;&gt;How to listen to state changes?&lt;/a&gt; | |103| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-approach-of-removing-an-array-element-in-react-state&quot;&gt;What is the recommended approach of removing an array element in react state?&lt;/a&gt; | |104| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-rendering-html&quot;&gt;Is it possible to use React without rendering HTML?&lt;/a&gt; | |105| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pretty-print-json-with-react&quot;&gt;How to pretty print JSON with React?&lt;/a&gt; | |106| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-cant-update-props-in-react&quot;&gt;Why you can‚Äôt update props in React?&lt;/a&gt; | |107| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-focus-an-input-element-on-page-load&quot;&gt;How to focus an input element on page load?&lt;/a&gt; | |108| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-ways-of-updating-objects-in-state&quot;&gt;What are the possible ways of updating objects in state?&lt;/a&gt; | |110| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-can-we-find-the-version-of-react-at-runtime-in-the-browser&quot;&gt;How can we find the version of React at runtime in the browser?&lt;/a&gt; | |111| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-approaches-to-include-polyfills-in-your-create-react-app&quot;&gt;What are the approaches to include polyfills in your create-react-app?&lt;/a&gt; | |112| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-https-instead-of-http-in-create-react-app&quot;&gt;How to use https instead of http in create-react-app?&lt;/a&gt; | |113| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-avoid-using-relative-path-imports-in-create-react-app&quot;&gt;How to avoid using relative path imports in create-react-app?&lt;/a&gt; | |114| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-google-analytics-for-react-router&quot;&gt;How to add Google Analytics for react-router?&lt;/a&gt; | |115| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-update-a-component-every-second&quot;&gt;How to update a component every second?&lt;/a&gt; | |116| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react&quot;&gt;How do you apply vendor prefixes to inline styles in React?&lt;/a&gt; | |117| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-import-and-export-components-using-react-and-es6&quot;&gt;How to import and export components using react and ES6?&lt;/a&gt; | |118| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-exceptions-on-react-component-naming&quot;&gt;What are the exceptions on React component naming?&lt;/a&gt; | |119| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-a-component-constructor-called-only-once&quot;&gt;Why is a component constructor called only once?&lt;/a&gt; | |120| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-define-constants-in-react&quot;&gt;How to define constants in React?&lt;/a&gt; | |121| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-programmatically-trigger-click-event-in-react&quot;&gt;How to programmatically trigger click event in React?&lt;/a&gt; | |122| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-asyncawait-in-plain-react&quot;&gt;Is it possible to use async/await in plain React?&lt;/a&gt; | |123| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-common-folder-structures-for-react&quot;&gt;What are the common folder structures for React?&lt;/a&gt; | |124| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-packages-for-animation&quot;&gt;What are the popular packages for animation?&lt;/a&gt; | |125| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-styles-modules&quot;&gt;What is the benefit of styles modules?&lt;/a&gt; | |126| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-react-specific-linters&quot;&gt;What are the popular React-specific linters?&lt;/a&gt; | |127| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-call-and-in-which-component-lifecycle-methods-should-i-make-an-ajax-call&quot;&gt;How to make AJAX call and In which component lifecycle methods should I make an AJAX call?&lt;/a&gt; | |128| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-render-props&quot;&gt;What are render props?&lt;/a&gt; | | | &lt;strong&gt;React Router&lt;/strong&gt; | |129| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-router&quot;&gt;What is React Router?&lt;/a&gt; | |130| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-router-is-different-from-history-library&quot;&gt;How React Router is different from history library?&lt;/a&gt; | |131| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-router-components-of-react-router-v4&quot;&gt;What are the &amp;lt;Router&amp;gt; components of React Router v4?&lt;/a&gt; | |132| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-push-and-replace-methods-of-history&quot;&gt;What is the purpose of push and replace methods of history?&lt;/a&gt; | |133| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-programmatically-navigate-using-react-router-v4&quot;&gt;How do you programmatically navigate using React router v4?&lt;/a&gt; | |134| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-query-parameters-in-react-router-v4&quot;&gt;How to get query parameters in React Router v4&lt;/a&gt; | |135| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-get-router-may-have-only-one-child-element-warning&quot;&gt;Why you get ‚ÄúRouter may have only one child element‚Äù warning?&lt;/a&gt; | |136| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-params-to-historypush-method-in-react-router-v4&quot;&gt;How to pass params to history.push method in React Router v4?&lt;/a&gt; | |137| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-implement-default-or-notfound-page&quot;&gt;How to implement default or NotFound page?&lt;/a&gt; | |138| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-history-on-react-router-v4&quot;&gt;How to get history on React Router v4?&lt;/a&gt; | |139| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-perform-automatic-redirect-after-login&quot;&gt;How to perform automatic redirect after login?&lt;/a&gt; | | | &lt;strong&gt;React Internationalization&lt;/strong&gt; | |140| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-intl&quot;&gt;What is React-Intl?&lt;/a&gt; | |141| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-react-intl&quot;&gt;What are the main features of React Intl?&lt;/a&gt; | |142| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-two-ways-of-formatting-in-react-intl&quot;&gt;What are the two ways of formatting in React Intl?&lt;/a&gt; | |143| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-formattedmessage-as-placeholder-using-react-intl&quot;&gt;How to use FormattedMessage as placeholder using React Intl?&lt;/a&gt; | |144| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-current-locale-with-react-intl&quot;&gt;How to access current locale with React Intl&lt;/a&gt; | |145| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-format-date-using-react-intl&quot;&gt;How to format date using React Intl?&lt;/a&gt; | | | &lt;strong&gt;React Testing&lt;/strong&gt; | |146| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-shallow-renderer-in-react-testing&quot;&gt;What is Shallow Renderer in React testing?&lt;/a&gt; | |147| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-testrenderer-package-in-react&quot;&gt;What is TestRenderer package in React?&lt;/a&gt; | |148| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-reacttestutils-package&quot;&gt;What is the purpose of ReactTestUtils package?&lt;/a&gt; | |149| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jest&quot;&gt;What is Jest?&lt;/a&gt; | |150| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-jest-over-jasmine&quot;&gt;What are the advantages of Jest over Jasmine?&lt;/a&gt; | |151| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-a-simple-example-of-jest-test-case&quot;&gt;Give a simple example of Jest test case&lt;/a&gt; | | | &lt;strong&gt;React Redux&lt;/strong&gt; | |152| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flux&quot;&gt;What is Flux?&lt;/a&gt; | |153| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux&quot;&gt;What is Redux?&lt;/a&gt; | |154| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-core-principles-of-redux&quot;&gt;What are the core principles of Redux?&lt;/a&gt; | |155| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-downsides-of-redux-compared-to-flux&quot;&gt;What are the downsides of Redux compared to Flux?&lt;/a&gt; | |156| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-mapstatetoprops-and-mapdispatchtoprops&quot;&gt;What is the difference between mapStateToProps() and mapDispatchToProps()?&lt;/a&gt; | |157| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-dispatch-an-action-in-reducer&quot;&gt;Can I dispatch an action in reducer?&lt;/a&gt; | |158| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-redux-store-outside-a-component&quot;&gt;How to access Redux store outside a component?&lt;/a&gt; | |159| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-drawbacks-of-mvw-pattern&quot;&gt;What are the drawbacks of MVW pattern&lt;/a&gt; | |160| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-there-any-similarities-between-redux-and-rxjs&quot;&gt;Are there any similarities between Redux and RxJS?&lt;/a&gt; | |161| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-dispatch-an-action-on-load&quot;&gt;How to dispatch an action on load?&lt;/a&gt; | |162| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-connect-from-react-redux&quot;&gt;How to use connect from React Redux?&lt;/a&gt; | |163| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-reset-state-in-redux&quot;&gt;How to reset state in Redux?&lt;/a&gt; | |164| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#whats-the-purpose-of-at-symbol-in-the-redux-connect-decorator&quot;&gt;Whats the purpose of at symbol in the redux connect decorator?&lt;/a&gt; | |165| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-context-and-react-redux&quot;&gt;What is the difference between React context and React Redux?&lt;/a&gt; | |166| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-redux-state-functions-called-reducers&quot;&gt;Why are Redux state functions called reducers?&lt;/a&gt; | |167| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-request-in-redux&quot;&gt;How to make AJAX request in Redux?&lt;/a&gt; | |168| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-keep-all-components-state-in-redux-store&quot;&gt;Should I keep all component‚Äôs state in Redux store?&lt;/a&gt; | |169| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-way-to-access-redux-store&quot;&gt;What is the proper way to access Redux store?&lt;/a&gt; | |170| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-component-and-container-in-react-redux&quot;&gt;What is the difference between component and container in React Redux?&lt;/a&gt; | |171| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-the-constants-in-redux&quot;&gt;What is the purpose of the constants in Redux? &lt;/a&gt; | |172| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-ways-to-write-mapdispatchtoprops&quot;&gt;What are the different ways to write mapDispatchToProps()?&lt;/a&gt; | |173| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-the-ownprops-parameter-in-mapstatetoprops-and-mapdispatchtoprops&quot;&gt;What is the use of the ownProps parameter in mapStateToProps() and mapDispatchToProps()?&lt;/a&gt; | |174| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-structure-redux-top-level-directories&quot;&gt;How to structure Redux top level directories?&lt;/a&gt; | |175| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-saga&quot;&gt;What is redux-saga?&lt;/a&gt; | |176| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-mental-model-of-redux-saga&quot;&gt;What is the mental model of redux-saga?&lt;/a&gt; | |177| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-call-and-put-in-redux-saga&quot;&gt;What are the differences between call and put in redux-saga&lt;/a&gt; | |178| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-thunk&quot;&gt;What is Redux Thunk?&lt;/a&gt; | |179| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-saga-and-redux-thunk&quot;&gt;What are the differences between redux-saga and redux-thunk&lt;/a&gt; | |180| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-devtools&quot;&gt;What is Redux DevTools?&lt;/a&gt; | |181| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-redux-devtools&quot;&gt;What are the features of Redux DevTools?&lt;/a&gt; | |182| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-redux-selectors-and-why-to-use-them&quot;&gt;What are Redux selectors and Why to use them?&lt;/a&gt; | |183| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-form&quot;&gt;What is Redux Form?&lt;/a&gt; | |184| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-redux-form&quot;&gt;What are the main features of Redux Form?&lt;/a&gt; | |185| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-multiple-middlewares-to-redux&quot;&gt;How to add multiple middlewares to Redux?&lt;/a&gt; | |186| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-initial-state-in-redux&quot;&gt;How to set initial state in Redux?&lt;/a&gt; | |187| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-relay-is-different-from-redux&quot;&gt;How Relay is different from Redux?&lt;/a&gt; | |188| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-an-action-in-redux&quot;&gt;What is an action in Redux?&lt;/a&gt; | | | &lt;strong&gt;React Native&lt;/strong&gt; | |188| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-native-and-react&quot;&gt;What is the difference between React Native and React?&lt;/a&gt; | |189| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-test-react-native-apps&quot;&gt;How to test React Native apps?&lt;/a&gt; | |190| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-do-logging-in-react-native&quot;&gt;How to do logging in React Native?&lt;/a&gt; | |191| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-your-react-native&quot;&gt;How to debug your React Native?&lt;/a&gt; | | | &lt;strong&gt;React supported libraries and Integration&lt;/strong&gt; | |192| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reselect-and-how-it-works&quot;&gt;What is reselect and how it works?&lt;/a&gt; | |193| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flow&quot;&gt;What is Flow?&lt;/a&gt; | |194| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-flow-and-proptypes&quot;&gt;What is the difference between Flow and PropTypes?&lt;/a&gt; | |195| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-font-awesome-icons-in-react&quot;&gt;How to use font-awesome icons in React?&lt;/a&gt; | |196| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-dev-tools&quot;&gt;What is React Dev Tools?&lt;/a&gt; | |197| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-devtools-not-loading-in-chrome-for-local-files&quot;&gt;Why is DevTools not loading in Chrome for local files?&lt;/a&gt; | |198| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-polymer-in-react&quot;&gt;How to use Polymer in React?&lt;/a&gt; | |199| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react-over-vuejs&quot;&gt;What are the advantages of React over Vue.js?&lt;/a&gt; | |200| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-angular&quot;&gt;What is the difference between React and Angular?&lt;/a&gt; | |201| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-tab-is-not-showing-up-in-devtools&quot;&gt;Why React tab is not showing up in DevTools?&lt;/a&gt; | |202| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-styled-components&quot;&gt;What are styled components?&lt;/a&gt; | |203| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-styled-components&quot;&gt;Give an example of Styled Components?&lt;/a&gt; | |204| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-relay&quot;&gt;What is Relay?&lt;/a&gt; | |205| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-typescript-in-create-react-app-application&quot;&gt;How to use TypeScript in create-react-app application?&lt;/a&gt; | | | &lt;strong&gt;Miscellaneous&lt;/strong&gt; | |206| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-reselect-library&quot;&gt;What are the main features of reselect library?&lt;/a&gt; | |207| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-reselect-usage&quot;&gt;Give an example of reselect usage?&lt;/a&gt; | |209| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-the-statics-object-work-with-es6-classes-in-react&quot;&gt;Does the statics object work with ES6 classes in React?&lt;/a&gt; | |210| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-redux-only-be-used-with-react&quot;&gt;Can Redux only be used with React?&lt;/a&gt; | |211| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-you-need-to-have-a-particular-build-tool-to-use-redux&quot;&gt;Do you need to have a particular build tool to use Redux?&lt;/a&gt; | |212| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-redux-form-initialvalues-get-updated-from-state&quot;&gt;How Redux Form initialValues get updated from state?&lt;/a&gt; | |213| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-proptypes-allow-different-types-for-one-prop&quot;&gt;How React PropTypes allow different type for one prop?&lt;/a&gt; | |214| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-import-an-svg-file-as-react-component&quot;&gt;Can I import an SVG file as react component?&lt;/a&gt; | |215| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-inline-ref-callbacks-or-functions-not-recommended&quot;&gt;Why are inline ref callbacks or functions not recommended?&lt;/a&gt;| |216| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-render-hijacking-in-react&quot;&gt;What is render hijacking in React?&lt;/a&gt;| |217| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hoc-factory-implementations&quot;&gt;What are HOC factory implementations?&lt;/a&gt;| |218| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-numbers-to-react-component&quot;&gt;How to pass numbers to React component?&lt;/a&gt;| |219| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-keep-all-my-state-into-redux-should-i-ever-use-react-internal-state&quot;&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/a&gt;| |220| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-registerserviceworker-in-react&quot;&gt;What is the purpose of registerServiceWorker in React?&lt;/a&gt;| |221| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-memo-function&quot;&gt;What is React memo function?&lt;/a&gt;| |222| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-lazy-function&quot;&gt;What is React lazy function?&lt;/a&gt;| |223| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-unnecessary-updates-using-setstate&quot;&gt;How to prevent unnecessary updates using setState?&lt;/a&gt;| |224| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-render-array-strings-and-numbers-in-react-16-version&quot;&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/a&gt;| |225| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-class-field-declarations-syntax-in-react-classes&quot;&gt;How to use class field declarations syntax in React classes?&lt;/a&gt;| |226| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hooks&quot;&gt;What are hooks?&lt;/a&gt;| |227| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-needs-to-follow-for-hooks&quot;&gt;What are the rules needs to follow for hooks?&lt;/a&gt;| |228| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-ensure-hooks-followed-the-rules-in-your-project&quot;&gt;How to ensure hooks followed the rules in your project?&lt;/a&gt;| |229| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-flux-and-redux&quot;&gt;What are the differences between Flux and Redux?&lt;/a&gt;| |230| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-react-router-v4&quot;&gt;What are the benefits of React Router V4?&lt;/a&gt;| |231| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-describe-about-componentdidcatch-lifecycle-method-signature&quot;&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/a&gt;| |232| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#in-which-scenarios-error-boundaries-do-not-catch-errors&quot;&gt;In which scenarios error boundaries do not catch errors?&lt;/a&gt;| |233| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-not-need-error-boundaries-for-event-handlers&quot;&gt;Why do you not need error boundaries for event handlers?&lt;/a&gt;| |234| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-try-catch-block-and-error-boundaries&quot;&gt;What is the difference between try catch block and error boundaries?&lt;/a&gt;| |235| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-behavior-of-uncaught-errors-in-react-16&quot;&gt;What is the behavior of uncaught errors in react 16?&lt;/a&gt;| |236| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-placement-for-error-boundaries&quot;&gt;What is the proper placement for error boundaries?&lt;/a&gt;| |237| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-component-stack-trace-from-error-boundary&quot;&gt;What is the benefit of component stack trace from error boundary?&lt;/a&gt;| |238| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-required-method-to-be-defined-for-a-class-component&quot;&gt;What is the required method to be defined for a class component?&lt;/a&gt;| |239| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-return-types-of-render-method&quot;&gt;What are the possible return types of render method?&lt;/a&gt;| |240| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-purpose-of-constructor&quot;&gt;What is the main purpose of constructor?&lt;/a&gt;| |241| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-mandatory-to-define-constructor-for-react-component&quot;&gt;Is it mandatory to define constructor for React component?&lt;/a&gt;| |242| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-default-props&quot;&gt;What are default props?&lt;/a&gt;| |243| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-not-call-setstate-in-componentwillunmount&quot;&gt;Why should not call setState in componentWillUnmount?&lt;/a&gt;| |244| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromerror&quot;&gt;What is the purpose of getDerivedStateFromError?&lt;/a&gt;| |245| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-methods-order-when-component-re-rendered&quot;&gt;What is the methods order when component re-rendered?&lt;/a&gt;| |246| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-methods-invoked-during-error-handling&quot;&gt;What are the methods invoked during error handling?&lt;/a&gt;| |247| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-displayname-class-property&quot;&gt;What is the purpose of displayName class property?&lt;/a&gt;| |248| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-browser-support-for-react-applications&quot;&gt;What is the browser support for react applications?&lt;/a&gt;| |249| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-unmountcomponentatnode-method&quot;&gt;What is the purpose of unmountComponentAtNode method?&lt;/a&gt;| |250| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-code-splitting&quot;&gt;What is code-splitting?&lt;/a&gt;| |251| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-strict-mode&quot;&gt;What is the benefit of strict mode?&lt;/a&gt;| |252| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-keyed-fragments&quot;&gt;What are Keyed Fragments?&lt;/a&gt;| |253| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-react-support-all-html-attributes&quot;&gt;Does React support all HTML attributes?&lt;/a&gt;| |254| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-with-hocs&quot;&gt;What are the limitations with HOCs?&lt;/a&gt;| |255| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-forwardrefs-in-devtools&quot;&gt;How to debug forwardRefs in DevTools?&lt;/a&gt;| |256| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-component-props-defaults-to-true&quot;&gt;When component props defaults to true?&lt;/a&gt;| |257| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-nextjs-and-major-features-of-it&quot;&gt;What is NextJS and major features of it?&lt;/a&gt;| |258| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-an-event-handler-to-a-component&quot;&gt;How do you pass an event handler to a component?&lt;/a&gt;| |259| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-arrow-functions-in-render-methods&quot;&gt;Is it good to use arrow functions in render methods?&lt;/a&gt;| |260| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-a-function-from-being-called-multiple-times&quot;&gt;How to prevent a function from being called multiple times?&lt;/a&gt;| |261| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-jsx-prevents-injection-attacks&quot;&gt;How JSX prevents Injection Attacks?&lt;/a&gt;| |262| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-update-rendered-elements&quot;&gt;How do you update rendered elements?&lt;/a&gt;| |263| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-props-are-read-only&quot;&gt;How do you say that props are read only?&lt;/a&gt;| |264| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-state-updates-are-merged&quot;&gt;How do you say that state updates are merged?&lt;/a&gt;| |265| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-arguments-to-an-event-handler&quot;&gt;How do you pass arguments to an event handler?&lt;/a&gt;| |266| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-component-from-rendering&quot;&gt;How to prevent component from rendering?&lt;/a&gt;| |267| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-conditions-to-safely-use-the-index-as-a-key&quot;&gt;What are the conditions to safely use the index as a key?&lt;/a&gt;| |268| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-keys-should-be-globally-unique&quot;&gt;Is it keys should be globally unique?&lt;/a&gt;| |269| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-popular-choice-for-form-handling&quot;&gt;What is the popular choice for form handling?&lt;/a&gt;| |270| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-formik-over-redux-form-library&quot;&gt;What are the advantages of formik over redux form library?&lt;/a&gt;| |271| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-not-required-to-use-inheritance&quot;&gt;Why do you not required to use inheritance?&lt;/a&gt;| |272| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-web-components-in-react-application&quot;&gt;Can I use web components in react application?&lt;/a&gt;| |273| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-dynamic-import&quot;&gt;What is dynamic import?&lt;/a&gt;| |274| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-loadable-components&quot;&gt;What are loadable components?&lt;/a&gt;| |275| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-suspense-component&quot;&gt;What is suspense component?&lt;/a&gt;| |276| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-route-based-code-splitting&quot;&gt;What is route based code splitting?&lt;/a&gt;| |277| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-on-how-to-use-context&quot;&gt;Give an example on How to use context?&lt;/a&gt;| |278| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-default-value-in-context&quot;&gt;What is the purpose of default value in context?&lt;/a&gt;| |279| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-use-contexttype&quot;&gt;How do you use contextType?&lt;/a&gt;| |280| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-consumer&quot;&gt;What is a consumer?&lt;/a&gt;| |281| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-solve-performance-corner-cases-while-using-context&quot;&gt;How do you solve performance corner cases while using context?&lt;/a&gt;| |282| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-forward-ref-in-hocs&quot;&gt;What is the purpose of forward ref in HOCs?&lt;/a&gt;| |283| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-ref-argument-available-for-all-functions-or-class-components&quot;&gt;Is it ref argument available for all functions or class components?&lt;/a&gt;| |284| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-need-additional-care-for-component-libraries-while-using-forward-refs&quot;&gt;Why do you need additional care for component libraries while using forward refs?&lt;/a&gt;| |285| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-react-class-components-without-es6&quot;&gt;How to create react class components without ES6?&lt;/a&gt;| |286| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-jsx&quot;&gt;Is it possible to use react without JSX?&lt;/a&gt;| |287| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-diffing-algorithm&quot;&gt;What is diffing algorithm?&lt;/a&gt;| |288| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-covered-by-diffing-algorithm&quot;&gt;What are the rules covered by diffing algorithm?&lt;/a&gt;| |289| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-do-you-need-to-use-refs&quot;&gt;When do you need to use refs?&lt;/a&gt;| |290| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-prop-must-be-named-as-render-for-render-props&quot;&gt;Is it prop must be named as render for render props?&lt;/a&gt;| |291| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-problems-of-using-render-props-with-pure-components&quot;&gt;What are the problems of using render props with pure components?&lt;/a&gt;| |292| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-create-hoc-using-render-props&quot;&gt;How do you create HOC using render props?&lt;/a&gt;| |293| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-windowing-technique&quot;&gt;What is windowing technique?&lt;/a&gt;| |294| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-print-falsy-values-in-jsx&quot;&gt;How do you print falsy values in JSX?&lt;/a&gt;| |295| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-typical-use-case-of-portals?&quot;&gt;What is the typical use case of portals?&lt;/a&gt;| |296| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-set-default-value-for-uncontrolled-component&quot;&gt;How do you set default value for uncontrolled component?&lt;/a&gt;| |297| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-your-favorite-react-stack&quot;&gt;What is your favorite React stack?&lt;/a&gt;| |298| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-real-dom-and-virtual-dom&quot;&gt;What is the difference between Real DOM and Virtual DOM?&lt;/a&gt;| |299| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-bootstrap-to-a-react-application&quot;&gt;How to add Bootstrap to a react application?&lt;/a&gt;| |300| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-list-down-top-websites-or-applications-using-react-as-front-end-framework&quot;&gt;Can you list down top websites or applications using react as front end framework?&lt;/a&gt;| |301| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-recommended-to-use-css-in-js-technique-in-react&quot;&gt;Is it recommended to use CSS In JS technique in React?&lt;/a&gt;| |302| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-rewrite-all-my-class-components-with-hooks&quot;&gt;Do I need to rewrite all my class components with hooks?&lt;/a&gt;| |303| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-fetch-data-with-react-hooks&quot;&gt;How to fetch data with React Hooks?&lt;/a&gt;| |304| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-hooks-cover-all-use-cases-for-classes&quot;&gt;Is Hooks cover all use cases for classes?&lt;/a&gt;| |305| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-stable-release-for-hooks-support&quot;&gt;What is the stable release for hooks support?&lt;/a&gt;| |306| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-we-use-array-destructuring-square-brackets-notation-in-usestate&quot;&gt;Why do we use array destructuring (square brackets notation) in useState?&lt;/a&gt;| |307| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-sources-used-for-introducing-hooks&quot;&gt;What are the sources used for introducing hooks?&lt;/a&gt;| |308| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-imperative-api-of-web-components&quot;&gt;How do you access imperative API of web components?&lt;/a&gt;| |309| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-formik&quot;&gt;What is formik?&lt;/a&gt;| |310| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-typical-middleware-choices-for-handling-asynchronous-calls-in-redux&quot;&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/a&gt;| |311| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-browsers-understand-jsx-code&quot;&gt;Do browsers understand JSX code?&lt;/a&gt;| |312| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#describe-about-data-flow-in-react&quot;&gt;Describe about data flow in react?&lt;/a&gt;| |313| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-scripts&quot;&gt;What is react scripts?&lt;/a&gt;| |314| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-create-react-app&quot;&gt;What are the features of create react app?&lt;/a&gt;| |315| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-rendertonodestream-method&quot;&gt;What is the purpose of renderToNodeStream method?&lt;/a&gt;| |316| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-mobx&quot;&gt;What is MobX?&lt;/a&gt;| |317| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-and-mobx&quot;&gt;What are the differences between Redux and MobX?&lt;/a&gt;| |318| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-learn-es6-before-learning-reactjs&quot;&gt;Should I learn ES6 before learning ReactJS?&lt;/a&gt;| |319| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-concurrent-rendering&quot;&gt;What is Concurrent Rendering?&lt;/a&gt;| |320| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-async-mode-and-concurrent-mode&quot;&gt;What is the difference between async mode and concurrent mode?&lt;/a&gt;| |321| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-javascript-urls-in-react169&quot;&gt;Can I use javascript urls in react16.9?&lt;/a&gt;| |322| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-eslint-plugin-for-hooks&quot;&gt;What is the purpose of eslint plugin for hooks?&lt;/a&gt;| |323| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-imperative-and-declarative-in-react&quot;&gt;What is the difference between Imperative and Declarative in React?&lt;/a&gt;| |324| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-using-typescript-with-reactjs&quot;&gt;What are the benefits of using typescript with reactjs?&lt;/a&gt;| |325| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-make-sure-that-user-remains-authenticated-on-page-refresh-while-using-context-api-state-management&quot;&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/a&gt;| |326| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-new-jsx-transform&quot;&gt;What are the benefits of new JSX transform?&lt;/a&gt;| |327| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-does-new-jsx-transform-different-from-old-transform&quot;&gt;How does new JSX transform different from old transform?&lt;/a&gt;| |328| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-get-redux-scaffolding-using-create-react-app&quot;&gt;How do you get redux scaffolding using create-react-app?&lt;/a&gt;| |329| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-server-components&quot;&gt;What are React Server components?&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Core React&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;h3&gt;What is React?&lt;/h3&gt; &lt;p&gt;React is an &lt;strong&gt;open-source frontend JavaScript library&lt;/strong&gt; which is used for building user interfaces especially for single page applications. It is used for handling view layer for web and mobile apps. React was created by &lt;a href=&quot;https://github.com/jordwalke&quot;&gt;Jordan Walke&lt;/a&gt;, a software engineer working for Facebook. React was first deployed on Facebook‚Äôs News Feed in 2011 and on Instagram in 2012.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the major features of React?&lt;/h3&gt; &lt;p&gt;The major features of React are:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;It uses &lt;strong&gt;VirtualDOM&lt;/strong&gt; instead of RealDOM considering that RealDOM manipulations are expensive.&lt;/li&gt; 
   &lt;li&gt;Supports &lt;strong&gt;server-side rendering&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Follows &lt;strong&gt;Unidirectional&lt;/strong&gt; data flow or data binding.&lt;/li&gt; 
   &lt;li&gt;Uses &lt;strong&gt;reusable/composable&lt;/strong&gt; UI components to develop the view.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSX?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;JSX&lt;/em&gt; is a XML-like syntax extension to ECMAScript (the acronym stands for &lt;em&gt;JavaScript XML&lt;/em&gt;). Basically it just provides syntactic sugar for the &lt;code&gt;React.createElement()&lt;/code&gt; function, giving us expressiveness of JavaScript along with HTML like template syntax.&lt;/p&gt; &lt;p&gt;In the example below text inside &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag is returned as JavaScript function to the render function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class App extends React.Component {
  render() {
    return(
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;{&#39;Welcome to React world!&#39;}&amp;lt;/h1&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Element and Component?&lt;/h3&gt; &lt;p&gt;An &lt;em&gt;Element&lt;/em&gt; is a plain object describing what you want to appear on the screen in terms of the DOM nodes or other components. &lt;em&gt;Elements&lt;/em&gt; can contain other &lt;em&gt;Elements&lt;/em&gt; in their props. Creating a React element is cheap. Once an element is created, it is never mutated.&lt;/p&gt; &lt;p&gt;The object representation of React Element would be as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const element = React.createElement(
  &#39;div&#39;,
  {id: &#39;login-btn&#39;},
  &#39;Login&#39;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above &lt;code&gt;React.createElement()&lt;/code&gt; function returns an object:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{
  type: &#39;div&#39;,
  props: {
    children: &#39;Login&#39;,
    id: &#39;login-btn&#39;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And finally it renders to the DOM using &lt;code&gt;ReactDOM.render()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&#39;login-btn&#39;&amp;gt;Login&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas a &lt;strong&gt;component&lt;/strong&gt; can be declared in several different ways. It can be a class with a &lt;code&gt;render()&lt;/code&gt; method. Alternatively, in simple cases, it can be defined as a function. In either case, it takes props as an input, and returns a JSX tree as the output:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Button = ({ onLogin }) =&amp;gt;
  &amp;lt;div id={&#39;login-btn&#39;} onClick={onLogin}&amp;gt;Login&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then JSX gets transpiled to a &lt;code&gt;React.createElement()&lt;/code&gt; function tree:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Button = ({ onLogin }) =&amp;gt; React.createElement(
  &#39;div&#39;,
  { id: &#39;login-btn&#39;, onClick: onLogin },
  &#39;Login&#39;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to create components in React?&lt;/h3&gt; &lt;p&gt;There are two possible ways to create a component.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function Components:&lt;/strong&gt; This is the simplest way to create a component. Those are pure JavaScript functions that accept props object as first parameter and return React elements:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function Greeting({ message }) {
  return &amp;lt;h1&amp;gt;{`Hello, ${message}`}&amp;lt;/h1&amp;gt;

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Class Components:&lt;/strong&gt; You can also use ES6 class to define a component. The above function component can be written as:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Greeting extends React.Component {
  render() {
    return &amp;lt;h1&amp;gt;{`Hello, ${this.props.message}`}&amp;lt;/h1&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;When to use a Class Component over a Function Component?&lt;/h3&gt; &lt;p&gt;If the component needs &lt;em&gt;state or lifecycle methods&lt;/em&gt; then use class component otherwise use function component. &lt;em&gt;However, from React 16.8 with the addition of Hooks, you could use state , lifecycle methods and other features that were only available in class component right in your function component.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are Pure Components?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;&lt;code&gt;React.PureComponent&lt;/code&gt;&lt;/em&gt; is exactly the same as &lt;em&gt;&lt;code&gt;React.Component&lt;/code&gt;&lt;/em&gt; except that it handles the &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; method for you. When props or state changes, &lt;em&gt;PureComponent&lt;/em&gt; will do a shallow comparison on both props and state. &lt;em&gt;Component&lt;/em&gt; on the other hand won‚Äôt compare current props and state to next out of the box. Thus, the component will re-render by default whenever &lt;code&gt;shouldComponentUpdate&lt;/code&gt; is called.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is state in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;State&lt;/em&gt; of a component is an object that holds some information that may change over the lifetime of the component. We should always try to make our state as simple as possible and minimize the number of stateful components.&lt;/p&gt; &lt;p&gt;Let‚Äôs create a user component with message state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class User extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      message: &#39;Welcome to React world&#39;
    }
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;{this.state.message}&amp;lt;/h1&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/state.jpg&quot; alt=&quot;state&quot;&gt;&lt;/p&gt; &lt;p&gt;State is similar to props, but it is private and fully controlled by the component. i.e, It is not accessible to any other component til the owner component decides to pass it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are props in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Props&lt;/em&gt; are inputs to components. They are single values or objects containing a set of values that are passed to components on creation using a naming convention similar to HTML-tag attributes. They are data passed down from a parent component to a child component.&lt;/p&gt; &lt;p&gt;The primary purpose of props in React is to provide following component functionality:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Pass custom data to your component.&lt;/li&gt; 
   &lt;li&gt;Trigger state changes.&lt;/li&gt; 
   &lt;li&gt;Use via &lt;code&gt;this.props.reactProp&lt;/code&gt; inside component‚Äôs &lt;code&gt;render()&lt;/code&gt; method.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, let us create an element with &lt;code&gt;reactProp&lt;/code&gt; property:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Element reactProp={&#39;1&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This &lt;code&gt;reactProp&lt;/code&gt; (or whatever you came up with) name then becomes a property attached to React‚Äôs native props object which originally already exists on all components created using React library.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;props.reactProp
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between state and props?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;props&lt;/em&gt; and &lt;em&gt;state&lt;/em&gt; are plain JavaScript objects. While both of them hold information that influences the output of render, they are different in their functionality with respect to component. Props get passed to the component similar to function parameters whereas state is managed within the component similar to variables declared within a function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;11&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should we not update the state directly?&lt;/h3&gt; &lt;p&gt;If you try to update state directly then it won‚Äôt re-render the component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Wrong
this.state.message = &#39;Hello world&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead use &lt;code&gt;setState()&lt;/code&gt; method. It schedules an update to a component‚Äôs state object. When state changes, the component responds by re-rendering.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Correct
this.setState({ message: &#39;Hello World&#39; })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can directly assign to the state object either in &lt;em&gt;constructor&lt;/em&gt; or using latest javascript‚Äôs class field declaration syntax.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;12&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of callback function as an argument of &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;The callback function is invoked when setState finished and the component gets rendered. Since &lt;code&gt;setState()&lt;/code&gt; is &lt;strong&gt;asynchronous&lt;/strong&gt; the callback function is used for any post action.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is recommended to use lifecycle method rather than this callback function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setState({ name: &#39;John&#39; }, () =&amp;gt; console.log(&#39;The name has updated and component re-rendered&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;13&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between HTML and React event handling?&lt;/h3&gt; &lt;p&gt;Below are some of the main differences between HTML and React event handling,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, the event name usually represents in &lt;em&gt;lowercase&lt;/em&gt; as a convention:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button onclick=&#39;activateLasers()&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React it follows &lt;em&gt;camelCase&lt;/em&gt; convention:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={activateLasers}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, you can return &lt;code&gt;false&lt;/code&gt; to prevent default behavior:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&#39;#&#39; onclick=&#39;console.log(&quot;The link was clicked.&quot;); return false;&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React you must call &lt;code&gt;preventDefault()&lt;/code&gt; explicitly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function handleClick(event) {
  event.preventDefault()
  console.log(&#39;The link was clicked.&#39;)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, you need to invoke the function by appending &lt;code&gt;()&lt;/code&gt; Whereas in react you should not append &lt;code&gt;()&lt;/code&gt; with the function name. (refer ‚ÄúactivateLasers‚Äù function in the first point for example)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;14&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to bind methods or event handlers in JSX callbacks?&lt;/h3&gt; &lt;p&gt;There are 3 possible ways to achieve this:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Binding in Constructor:&lt;/strong&gt; In JavaScript classes, the methods are not bound by default. The same thing applies for React event handlers defined as class methods. Normally we bind them in constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
  constructor(props) {
    super(props)
    this.handleClick = this.handleClick.bind(this)
  }

  handleClick() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Public class fields syntax:&lt;/strong&gt; If you don‚Äôt like to use bind approach then &lt;em&gt;public class fields syntax&lt;/em&gt; can be used to correctly bind callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;handleClick = () =&amp;gt; {
  console.log(&#39;this is:&#39;, this)
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;
  {&#39;Click me&#39;}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Arrow functions in callbacks:&lt;/strong&gt; You can use &lt;em&gt;arrow functions&lt;/em&gt; directly in the callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={(event) =&amp;gt; this.handleClick(event)}&amp;gt;
  {&#39;Click me&#39;}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the callback is passed as prop to child components, those components might do an extra re-rendering. In those cases, it is preferred to go with &lt;code&gt;.bind()&lt;/code&gt; or &lt;em&gt;public class fields syntax&lt;/em&gt; approach considering performance.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;15&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass a parameter to an event handler or callback?&lt;/h3&gt; &lt;p&gt;You can use an &lt;em&gt;arrow function&lt;/em&gt; to wrap around an &lt;em&gt;event handler&lt;/em&gt; and pass parameters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={() =&amp;gt; this.handleClick(id)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is an equivalent to calling &lt;code&gt;.bind&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick.bind(this, id)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Apart from these two approaches, you can also pass arguments to a function which is defined as arrow function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick(id)} /&amp;gt;
handleClick = (id) =&amp;gt; () =&amp;gt; {
    console.log(&quot;Hello, your ticket number is&quot;, id)
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;16&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are synthetic events in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;SyntheticEvent&lt;/code&gt; is a cross-browser wrapper around the browser‚Äôs native event. It‚Äôs API is same as the browser‚Äôs native event, including &lt;code&gt;stopPropagation()&lt;/code&gt; and &lt;code&gt;preventDefault()&lt;/code&gt;, except the events work identically across all browsers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;17&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are inline conditional expressions?&lt;/h3&gt; &lt;p&gt;You can use either &lt;em&gt;if statements&lt;/em&gt; or &lt;em&gt;ternary expressions&lt;/em&gt; which are available from JS to conditionally render expressions. Apart from these approaches, you can also embed any expressions in JSX by wrapping them in curly braces and then followed by JS logical operator &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;h1&amp;gt;Hello!&amp;lt;/h1&amp;gt;
{
    messages.length &amp;gt; 0 &amp;amp;&amp;amp; !isLogin?
      &amp;lt;h2&amp;gt;
          You have {messages.length} unread messages.
      &amp;lt;/h2&amp;gt;
      :
      &amp;lt;h2&amp;gt;
          You don&#39;t have unread messages.
      &amp;lt;/h2&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;18&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is ‚Äúkey‚Äù prop and what is the benefit of using it in arrays of elements?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;key&lt;/code&gt; is a special string attribute you &lt;strong&gt;should&lt;/strong&gt; include when creating arrays of elements. &lt;em&gt;Key&lt;/em&gt; prop helps React identify which items have changed, are added, or are removed.&lt;/p&gt; &lt;p&gt;Most often we use ID from our data as &lt;em&gt;key&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const todoItems = todos.map((todo) =&amp;gt;
  &amp;lt;li key={todo.id}&amp;gt;
    {todo.text}
  &amp;lt;/li&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When you don‚Äôt have stable IDs for rendered items, you may use the item &lt;em&gt;index&lt;/em&gt; as a &lt;em&gt;key&lt;/em&gt; as a last resort:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const todoItems = todos.map((todo, index) =&amp;gt;
  &amp;lt;li key={index}&amp;gt;
    {todo.text}
  &amp;lt;/li&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using &lt;em&gt;indexes&lt;/em&gt; for &lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;not recommended&lt;/strong&gt; if the order of items may change. This can negatively impact performance and may cause issues with component state.&lt;/li&gt; 
   &lt;li&gt;If you extract list item as separate component then apply &lt;em&gt;keys&lt;/em&gt; on list component instead of &lt;code&gt;li&lt;/code&gt; tag.&lt;/li&gt; 
   &lt;li&gt;There will be a warning message in the console if the &lt;code&gt;key&lt;/code&gt; prop is not present on list items.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;19&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of refs?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;ref&lt;/em&gt; is used to return a reference to the element. They &lt;em&gt;should be avoided&lt;/em&gt; in most cases, however, they can be useful when you need a direct access to the DOM element or an instance of a component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;20&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create refs?&lt;/h3&gt; &lt;p&gt;There are two approaches&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;This is a recently added approach. &lt;em&gt;Refs&lt;/em&gt; are created using &lt;code&gt;React.createRef()&lt;/code&gt; method and attached to React elements via the &lt;code&gt;ref&lt;/code&gt; attribute. In order to use &lt;em&gt;refs&lt;/em&gt; throughout the component, just assign the &lt;em&gt;ref&lt;/em&gt; to the instance property within constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.myRef = React.createRef()
  }
  render() {
    return &amp;lt;div ref={this.myRef} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use ref callbacks approach regardless of React version. For example, the search bar component‚Äôs input element accessed as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class SearchBar extends Component {
   constructor(props) {
      super(props);
      this.txtSearch = null;
      this.state = { term: &#39;&#39; };
      this.setInputSearchRef = e =&amp;gt; {
         this.txtSearch = e;
      }
   }
   onInputChange(event) {
      this.setState({ term: this.txtSearch.value });
   }
   render() {
      return (
         &amp;lt;input
            value={this.state.term}
            onChange={this.onInputChange.bind(this)}
            ref={this.setInputSearchRef} /&amp;gt;
      );
   }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;You can also use &lt;em&gt;refs&lt;/em&gt; in function components using &lt;strong&gt;closures&lt;/strong&gt;. &lt;strong&gt;Note&lt;/strong&gt;: You can also use inline ref callbacks even though it is not a recommended approach&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;21&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are forward refs?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Ref forwarding&lt;/em&gt; is a feature that lets some components take a &lt;em&gt;ref&lt;/em&gt; they receive, and pass it further down to a child.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ButtonElement = React.forwardRef((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;CustomButton&quot;&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));

// Create ref to the DOM button:
const ref = React.createRef();
&amp;lt;ButtonElement ref={ref}&amp;gt;{&#39;Forward Ref&#39;}&amp;lt;/ButtonElement&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;22&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/h3&gt; &lt;p&gt;It is preferred to use &lt;em&gt;callback refs&lt;/em&gt; over &lt;code&gt;findDOMNode()&lt;/code&gt; API. Because &lt;code&gt;findDOMNode()&lt;/code&gt; prevents certain improvements in React in the future.&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;legacy&lt;/strong&gt; approach of using &lt;code&gt;findDOMNode&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends Component {
  componentDidMount() {
    findDOMNode(this).scrollIntoView()
  }

  render() {
    return &amp;lt;div /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The recommended approach is:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends Component {
  constructor(props){
    super(props);
    this.node = createRef();
  }
  componentDidMount() {
    this.node.current.scrollIntoView();
  }

  render() {
    return &amp;lt;div ref={this.node} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;23&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are String Refs legacy?&lt;/h3&gt; &lt;p&gt;If you worked with React before, you might be familiar with an older API where the &lt;code&gt;ref&lt;/code&gt; attribute is a string, like &lt;code&gt;ref={&#39;textInput&#39;}&lt;/code&gt;, and the DOM node is accessed as &lt;code&gt;this.refs.textInput&lt;/code&gt;. We advise against it because &lt;em&gt;string refs have below issues&lt;/em&gt;, and are considered legacy. String refs were &lt;strong&gt;removed in React v16&lt;/strong&gt;.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;They &lt;em&gt;force React to keep track of currently executing component&lt;/em&gt;. This is problematic because it makes react module stateful, and thus causes weird errors when react module is duplicated in the bundle.&lt;/li&gt; 
   &lt;li&gt;They are &lt;em&gt;not composable&lt;/em&gt; ‚Äî if a library puts a ref on the passed child, the user can‚Äôt put another ref on it. Callback refs are perfectly composable.&lt;/li&gt; 
   &lt;li&gt;They &lt;em&gt;don‚Äôt work with static analysis&lt;/em&gt; like Flow. Flow can‚Äôt guess the magic that framework does to make the string ref appear on &lt;code&gt;this.refs&lt;/code&gt;, as well as its type (which could be different). Callback refs are friendlier to static analysis.&lt;/li&gt; 
   &lt;li&gt;It doesn‚Äôt work as most people would expect with the ‚Äúrender callback‚Äù pattern (e.g. 
    &lt;datagrid renderRow=&quot;{this.renderRow}&quot; /&gt;) &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends Component {
  renderRow = (index) =&amp;gt; {
    // This won&#39;t work. Ref will get attached to DataTable rather than MyComponent:
    return &amp;lt;input ref={&#39;input-&#39; + index} /&amp;gt;;

    // This would work though! Callback refs are awesome.
    return &amp;lt;input ref={input =&amp;gt; this[&#39;input-&#39; + index] = input} /&amp;gt;;
  }

  render() {
    return &amp;lt;DataTable data={this.props.data} renderRow={this.renderRow} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;24&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; (VDOM) is an in-memory representation of &lt;em&gt;Real DOM&lt;/em&gt;. The representation of a UI is kept in memory and synced with the ‚Äúreal‚Äù DOM. It‚Äôs a step that happens between the render function being called and the displaying of elements on the screen. This entire process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;25&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Virtual DOM works?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; works in three simple steps.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Whenever any underlying data changes, the entire UI is re-rendered in Virtual DOM representation.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom1.png&quot; alt=&quot;vdom&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Then the difference between the previous DOM representation and the new one is calculated.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom2.png&quot; alt=&quot;vdom2&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Once the calculations are done, the real DOM will be updated with only the things that have actually changed.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom3.png&quot; alt=&quot;vdom3&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;26&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Shadow DOM&lt;/em&gt; is a browser technology designed primarily for scoping variables and CSS in &lt;em&gt;web components&lt;/em&gt;. The &lt;em&gt;Virtual DOM&lt;/em&gt; is a concept implemented by libraries in JavaScript on top of browser APIs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;27&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Fiber?&lt;/h3&gt; &lt;p&gt;Fiber is the new &lt;em&gt;reconciliation&lt;/em&gt; engine or reimplementation of core algorithm in React v16. The goal of React Fiber is to increase its suitability for areas like animation, layout, gestures, ability to pause, abort, or reuse work and assign priority to different types of updates; and new concurrency primitives.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;28&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main goal of React Fiber?&lt;/h3&gt; &lt;p&gt;The goal of &lt;em&gt;React Fiber&lt;/em&gt; is to increase its suitability for areas like animation, layout, and gestures. Its headline feature is &lt;strong&gt;incremental rendering&lt;/strong&gt;: the ability to split rendering work into chunks and spread it out over multiple frames.&lt;/p&gt; &lt;p&gt;&lt;em&gt;from documentation&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Its main goals are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Ability to split interruptible work in chunks.&lt;/li&gt; 
   &lt;li&gt;Ability to prioritize, rebase and reuse work in progress.&lt;/li&gt; 
   &lt;li&gt;Ability to yield back and forth between parents and children to support layout in React.&lt;/li&gt; 
   &lt;li&gt;Ability to return multiple elements from render().&lt;/li&gt; 
   &lt;li&gt;Better support for error boundaries.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;29&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are controlled components?&lt;/h3&gt; &lt;p&gt;A component that controls the input elements within the forms on subsequent user input is called &lt;strong&gt;Controlled Component&lt;/strong&gt;, i.e, every state mutation will have an associated handler function.&lt;/p&gt; &lt;p&gt;For example, to write all the names in uppercase letters, we use handleChange as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;handleChange(event) {
  this.setState({value: event.target.value.toUpperCase()})
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;30&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are uncontrolled components?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;Uncontrolled Components&lt;/strong&gt; are the ones that store their own state internally, and you query the DOM using a ref to find its current value when you need it. This is a bit more like traditional HTML.&lt;/p&gt; &lt;p&gt;In the below UserProfile component, the &lt;code&gt;name&lt;/code&gt; input is accessed using ref.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserProfile extends React.Component {
  constructor(props) {
    super(props)
    this.handleSubmit = this.handleSubmit.bind(this)
    this.input = React.createRef()
  }

  handleSubmit(event) {
    alert(&#39;A name was submitted: &#39; + this.input.current.value)
    event.preventDefault()
  }

  render() {
    return (
      &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
        &amp;lt;label&amp;gt;
          {&#39;Name:&#39;}
          &amp;lt;input type=&quot;text&quot; ref={this.input} /&amp;gt;
        &amp;lt;/label&amp;gt;
        &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
      &amp;lt;/form&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In most cases, it‚Äôs recommend to use controlled components to implement forms.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;31&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between createElement and cloneElement?&lt;/h3&gt; &lt;p&gt;JSX elements will be transpiled to &lt;code&gt;React.createElement()&lt;/code&gt; functions to create React elements which are going to be used for the object representation of UI. Whereas &lt;code&gt;cloneElement&lt;/code&gt; is used to clone an element and pass it new props.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;32&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Lifting State Up in React?&lt;/h3&gt; &lt;p&gt;When several components need to share the same changing data then it is recommended to &lt;em&gt;lift the shared state up&lt;/em&gt; to their closest common ancestor. That means if two child components share the same data from its parent, then move the state to parent instead of maintaining local state in both of the child components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;33&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different phases of component lifecycle?&lt;/h3&gt; &lt;p&gt;The component lifecycle has three distinct lifecycle phases:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mounting:&lt;/strong&gt; The component is ready to mount in the browser DOM. This phase covers initialization from &lt;code&gt;constructor()&lt;/code&gt;, &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, and &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Updating:&lt;/strong&gt; In this phase, the component get updated in two ways, sending the new props and updating the state either from &lt;code&gt;setState()&lt;/code&gt; or &lt;code&gt;forceUpdate()&lt;/code&gt;. This phase covers &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;shouldComponentUpdate()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; and &lt;code&gt;componentDidUpdate()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unmounting:&lt;/strong&gt; In this last phase, the component is not needed and get unmounted from the browser DOM. This phase includes &lt;code&gt;componentWillUnmount()&lt;/code&gt; lifecycle method.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;It‚Äôs worth mentioning that React internally has a concept of phases when applying changes to the DOM. They are separated as follows&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Render&lt;/strong&gt; The component will render without any side-effects. This applies for Pure components and in this phase, React can pause, abort, or restart the render.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pre-commit&lt;/strong&gt; Before the component actually applies the changes to the DOM, there is a moment that allows React to read from the DOM through the &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commit&lt;/strong&gt; React works with the DOM and executes the final lifecycles respectively &lt;code&gt;componentDidMount()&lt;/code&gt; for mounting, &lt;code&gt;componentDidUpdate()&lt;/code&gt; for updating, and &lt;code&gt;componentWillUnmount()&lt;/code&gt; for unmounting.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;React 16.3+ Phases (or an &lt;a href=&quot;http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&quot;&gt;interactive version&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases16.3.jpg&quot; alt=&quot;phases 16.3+&quot;&gt;&lt;/p&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases.png&quot; alt=&quot;phases 16.2&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;34&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the lifecycle methods of React?&lt;/h3&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillMount:&lt;/strong&gt; Executed before rendering and is used for App level configuration in your root component.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and here all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillReceiveProps:&lt;/strong&gt; Executed when particular prop updates to trigger state transitions.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn‚Äôt need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUpdate:&lt;/strong&gt; Executed before re-rendering the component when there are props &amp;amp; state changes confirmed by &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; which returns true.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUnmount:&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;React 16.3+&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;getDerivedStateFromProps:&lt;/strong&gt; Invoked right before calling &lt;code&gt;render()&lt;/code&gt; and is invoked on &lt;em&gt;every&lt;/em&gt; render. This exists for rare use cases where you need derived state. Worth reading &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;if you need derived state&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and where all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn‚Äôt need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;getSnapshotBeforeUpdate:&lt;/strong&gt; Executed right before rendered output is committed to the DOM. Any value returned by this will be passed into &lt;code&gt;componentDidUpdate()&lt;/code&gt;. This is useful to capture information from the DOM i.e. scroll position.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes. This will not fire if &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUnmount&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;35&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Higher-Order Components?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;higher-order component&lt;/em&gt; (&lt;em&gt;HOC&lt;/em&gt;) is a function that takes a component and returns a new component. Basically, it‚Äôs a pattern that is derived from React‚Äôs compositional nature.&lt;/p&gt; &lt;p&gt;We call them &lt;strong&gt;pure components&lt;/strong&gt; because they can accept any dynamically provided child component but they won‚Äôt modify or copy any behavior from their input components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const EnhancedComponent = higherOrderComponent(WrappedComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;HOC can be used for many use cases:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Code reuse, logic and bootstrap abstraction.&lt;/li&gt; 
   &lt;li&gt;Render hijacking.&lt;/li&gt; 
   &lt;li&gt;State abstraction and manipulation.&lt;/li&gt; 
   &lt;li&gt;Props manipulation.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;36&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create props proxy for HOC component?&lt;/h3&gt; &lt;p&gt;You can add/edit props passed to the component using &lt;em&gt;props proxy&lt;/em&gt; pattern like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HOC(WrappedComponent) {
  return class Test extends Component {
    render() {
      const newProps = {
        title: &#39;New Header&#39;,
        footer: false,
        showFeatureX: false,
        showFeatureY: true
      }

      return &amp;lt;WrappedComponent {...this.props} {...newProps} /&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;37&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is context?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Context&lt;/em&gt; provides a way to pass data through the component tree without having to pass props down manually at every level.&lt;/p&gt; &lt;p&gt;For example, authenticated user, locale preference, UI theme need to be accessed in the application by many components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const {Provider, Consumer} = React.createContext(defaultValue)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;38&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is children prop?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Children&lt;/em&gt; is a prop (&lt;code&gt;this.props.children&lt;/code&gt;) that allow you to pass components as data to other components, just like any other prop you use. Component tree put between component‚Äôs opening and closing tag will be passed to that component as &lt;code&gt;children&lt;/code&gt; prop.&lt;/p&gt; &lt;p&gt;There are a number of methods available in the React API to work with this prop. These include &lt;code&gt;React.Children.map&lt;/code&gt;, &lt;code&gt;React.Children.forEach&lt;/code&gt;, &lt;code&gt;React.Children.count&lt;/code&gt;, &lt;code&gt;React.Children.only&lt;/code&gt;, &lt;code&gt;React.Children.toArray&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;A simple usage of children prop looks as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyDiv = React.createClass({
  render: function() {
    return &amp;lt;div&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;
  }
})

ReactDOM.render(
  &amp;lt;MyDiv&amp;gt;
    &amp;lt;span&amp;gt;{&#39;Hello&#39;}&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;{&#39;World&#39;}&amp;lt;/span&amp;gt;
  &amp;lt;/MyDiv&amp;gt;,
  node
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;39&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to write comments in React?&lt;/h3&gt; &lt;p&gt;The comments in React/JSX are similar to JavaScript Multiline comments but are wrapped in curly braces.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Single-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div&amp;gt;
  {/* Single-line comments(In vanilla JavaScript, the single-line comments are represented by double slash(//)) */}
  {`Welcome ${user}, let&#39;s play React`}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Multi-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div&amp;gt;
  {/* Multi-line comments for more than
   one line */}
  {`Welcome ${user}, let&#39;s play React`}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;40&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of using super constructor with props argument?&lt;/h3&gt; &lt;p&gt;A child class constructor cannot make use of &lt;code&gt;this&lt;/code&gt; reference until &lt;code&gt;super()&lt;/code&gt; method has been called. The same applies for ES6 sub-classes as well. The main reason of passing props parameter to &lt;code&gt;super()&lt;/code&gt; call is to access &lt;code&gt;this.props&lt;/code&gt; in your child constructors.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Not passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super()

    console.log(this.props) // prints undefined

    // but props parameter is still available
    console.log(props) // prints { name: &#39;John&#39;, age: 42 }
  }

  render() {
    // no difference outside constructor
    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code snippets reveals that &lt;code&gt;this.props&lt;/code&gt; is different only within the constructor. It would be the same outside the constructor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;41&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is reconciliation?&lt;/h3&gt; &lt;p&gt;When a component‚Äôs props or state change, React decides whether an actual DOM update is necessary by comparing the newly returned element with the previously rendered one. When they are not equal, React will update the DOM. This process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;42&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to set state with a dynamic key name?&lt;/h3&gt; &lt;p&gt;If you are using ES6 or the Babel transpiler to transform your JSX code then you can accomplish this with &lt;em&gt;computed property names&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;handleInputChange(event) {
  this.setState({ [event.target.id]: event.target.value })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;43&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What would be the common mistake of function being called every time the component renders?&lt;/h3&gt; &lt;p&gt;You need to make sure that function is not being called while passing the function as a parameter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  // Wrong: handleClick is called instead of passed as a reference!
  return &amp;lt;button onClick={this.handleClick()}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead, pass the function itself without parenthesis:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  // Correct: handleClick is passed as a reference!
  return &amp;lt;button onClick={this.handleClick}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;44&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is lazy function supports named exports?&lt;/h3&gt; No, currently &lt;code&gt;React.lazy&lt;/code&gt; function supports default exports only. If you would like to import modules which are named exports, you can create an intermediate module that reexports it as the default. It also ensures that tree shaking keeps working and don‚Äôt pull unused components. Let‚Äôs take a component file which exports multiple named components, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// MoreComponents.js
export const SomeComponent = /* ... */;
export const UnusedComponent = /* ... */;
&lt;/code&gt;&lt;/pre&gt; and reexport &lt;code&gt;MoreComponents.js&lt;/code&gt; components in an intermediate file &lt;code&gt;IntermediateComponent.js&lt;/code&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// IntermediateComponent.js
export { SomeComponent as default } from &quot;./MoreComponents.js&quot;;
&lt;/code&gt;&lt;/pre&gt; Now you can import the module using lazy function as below, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { lazy } from &#39;react&#39;;
const SomeComponent = lazy(() =&amp;gt; import(&quot;./IntermediateComponent.js&quot;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;45&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why React uses &lt;code&gt;className&lt;/code&gt; over &lt;code&gt;class&lt;/code&gt; attribute?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;class&lt;/code&gt; is a keyword in JavaScript, and JSX is an extension of JavaScript. That‚Äôs the principal reason why React uses &lt;code&gt;className&lt;/code&gt; instead of &lt;code&gt;class&lt;/code&gt;. Pass a string as the &lt;code&gt;className&lt;/code&gt; prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;span className={&#39;menu navigation-menu&#39;}&amp;gt;{&#39;Menu&#39;}&amp;lt;/span&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;46&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are fragments?&lt;/h3&gt; &lt;p&gt;It‚Äôs common pattern in React which is used for a component to return multiple elements. &lt;em&gt;Fragments&lt;/em&gt; let you group a list of children without adding extra nodes to the DOM.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return (
    &amp;lt;React.Fragment&amp;gt;
      &amp;lt;ChildA /&amp;gt;
      &amp;lt;ChildB /&amp;gt;
      &amp;lt;ChildC /&amp;gt;
    &amp;lt;/React.Fragment&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There is also a &lt;em&gt;shorter syntax&lt;/em&gt;, but it‚Äôs not supported in many tools:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;ChildA /&amp;gt;
      &amp;lt;ChildB /&amp;gt;
      &amp;lt;ChildC /&amp;gt;
    &amp;lt;/&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;47&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why fragments are better than container divs?&lt;/h3&gt; &lt;p&gt;Below are the list of reasons,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Fragments are a bit faster and use less memory by not creating an extra DOM node. This only has a real benefit on very large and deep trees.&lt;/li&gt; 
   &lt;li&gt;Some CSS mechanisms like &lt;em&gt;Flexbox&lt;/em&gt; and &lt;em&gt;CSS Grid&lt;/em&gt; have a special parent-child relationships, and adding divs in the middle makes it hard to keep the desired layout.&lt;/li&gt; 
   &lt;li&gt;The DOM Inspector is less cluttered.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;48&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are portals in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Portal&lt;/em&gt; is a recommended way to render children into a DOM node that exists outside the DOM hierarchy of the parent component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactDOM.createPortal(child, container)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The first argument is any render-able React child, such as an element, string, or fragment. The second argument is a DOM element.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;49&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are stateless components?&lt;/h3&gt; &lt;p&gt;If the behaviour is independent of its state then it can be a stateless component. You can use either a function or a class for creating stateless components. But unless you need to use a lifecycle hook in your components, you should go for function components. There are a lot of benefits if you decide to use function components here; they are easy to write, understand, and test, a little faster, and you can avoid the &lt;code&gt;this&lt;/code&gt; keyword altogether.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;50&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are stateful components?&lt;/h3&gt; &lt;p&gt;If the behaviour of a component is dependent on the &lt;em&gt;state&lt;/em&gt; of the component then it can be termed as stateful component. These &lt;em&gt;stateful components&lt;/em&gt; are always &lt;em&gt;class components&lt;/em&gt; and have a state that gets initialized in the &lt;code&gt;constructor&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends Component {
  constructor(props) {
    super(props)
    this.state = { count: 0 }
  }

  render() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;React 16.8 Update:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Hooks let you use state and other React features without writing classes.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; import React, {useState} from &#39;react&#39;;

 const App = (props) =&amp;gt; {
   const [count, setCount] = useState(0);

   return (
     // JSX
   )
 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;51&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to apply validation on props in React?&lt;/h3&gt; &lt;p&gt;When the application is running in &lt;em&gt;development mode&lt;/em&gt;, React will automatically check all props that we set on components to make sure they have &lt;em&gt;correct type&lt;/em&gt;. If the type is incorrect, React will generate warning messages in the console. It‚Äôs disabled in &lt;em&gt;production mode&lt;/em&gt; due to performance impact. The mandatory props are defined with &lt;code&gt;isRequired&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The set of predefined prop types:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.func&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.node&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.element&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.bool&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.any&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;We can define &lt;code&gt;propTypes&lt;/code&gt; for &lt;code&gt;User&lt;/code&gt; component as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import PropTypes from &#39;prop-types&#39;

class User extends React.Component {
  static propTypes = {
    name: PropTypes.string.isRequired,
    age: PropTypes.number.isRequired
  }

  render() {
    return (
      &amp;lt;&amp;gt;
        &amp;lt;h1&amp;gt;{`Welcome, ${this.props.name}`}&amp;lt;/h1&amp;gt;
        &amp;lt;h2&amp;gt;{`Age, ${this.props.age}`}&amp;lt;/h2&amp;gt;
      &amp;lt;/&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In React v15.5 &lt;em&gt;PropTypes&lt;/em&gt; were moved from &lt;code&gt;React.PropTypes&lt;/code&gt; to &lt;code&gt;prop-types&lt;/code&gt; library.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import PropTypes from &#39;prop-types&#39;

function User() {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;{`Welcome, ${this.props.name}`}&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;{`Age, ${this.props.age}`}&amp;lt;/h2&amp;gt;
    &amp;lt;/&amp;gt;
  )
}

User.propTypes = {
    name: PropTypes.string.isRequired,
    age: PropTypes.number.isRequired
  }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;52&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of React?&lt;/h3&gt; &lt;p&gt;Below are the list of main advantages of React,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Increases the application‚Äôs performance with &lt;em&gt;Virtual DOM&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;JSX makes code easy to read and write.&lt;/li&gt; 
   &lt;li&gt;It renders both on client and server side (&lt;em&gt;SSR&lt;/em&gt;).&lt;/li&gt; 
   &lt;li&gt;Easy to integrate with frameworks (Angular, Backbone) since it is only a view library.&lt;/li&gt; 
   &lt;li&gt;Easy to write unit and integration tests with tools such as Jest.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;53&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the limitations of React?&lt;/h3&gt; &lt;p&gt;Apart from the advantages, there are few limitations of React too,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React is just a view library, not a full framework.&lt;/li&gt; 
   &lt;li&gt;There is a learning curve for beginners who are new to web development.&lt;/li&gt; 
   &lt;li&gt;Integrating React into a traditional MVC framework requires some additional configuration.&lt;/li&gt; 
   &lt;li&gt;The code complexity increases with inline templating and JSX.&lt;/li&gt; 
   &lt;li&gt;Too many smaller components leading to over engineering or boilerplate.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;54&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are error boundaries in React v16?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Error boundaries&lt;/em&gt; are components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed.&lt;/p&gt; &lt;p&gt;A class component becomes an error boundary if it defines a new lifecycle method called &lt;code&gt;componentDidCatch(error, info)&lt;/code&gt; or &lt;code&gt;static getDerivedStateFromError() &lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props)
    this.state = { hasError: false }
  }

  componentDidCatch(error, info) {
    // You can also log the error to an error reporting service
    logErrorToMyService(error, info)
  }

  static getDerivedStateFromError(error) {
     // Update state so the next render will show the fallback UI.
     return { hasError: true };
   }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return &amp;lt;h1&amp;gt;{&#39;Something went wrong.&#39;}&amp;lt;/h1&amp;gt;
    }
    return this.props.children
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that use it as a regular component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;ErrorBoundary&amp;gt;
  &amp;lt;MyWidget /&amp;gt;
&amp;lt;/ErrorBoundary&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;55&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How error boundaries handled in React v15?&lt;/h3&gt; &lt;p&gt;React v15 provided very basic support for &lt;em&gt;error boundaries&lt;/em&gt; using &lt;code&gt;unstable_handleError&lt;/code&gt; method. It has been renamed to &lt;code&gt;componentDidCatch&lt;/code&gt; in React v16.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;56&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the recommended ways for static type checking?&lt;/h3&gt; &lt;p&gt;Normally we use &lt;em&gt;PropTypes library&lt;/em&gt; (&lt;code&gt;React.PropTypes&lt;/code&gt; moved to a &lt;code&gt;prop-types&lt;/code&gt; package since React v15.5) for &lt;em&gt;type checking&lt;/em&gt; in the React applications. For large code bases, it is recommended to use &lt;em&gt;static type checkers&lt;/em&gt; such as Flow or TypeScript, that perform type checking at compile time and provide auto-completion features.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;57&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of &lt;code&gt;react-dom&lt;/code&gt; package?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-dom&lt;/code&gt; package provides &lt;em&gt;DOM-specific methods&lt;/em&gt; that can be used at the top level of your app. Most of the components are not required to use this module. Some of the methods of this package are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;hydrate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;unmountComponentAtNode()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;findDOMNode()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;createPortal()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;58&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of render method of &lt;code&gt;react-dom&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;This method is used to render a React element into the DOM in the supplied container and return a reference to the component. If the React element was previously rendered into container, it will perform an update on it and only mutate the DOM as necessary to reflect the latest changes.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ReactDOM.render(element, container[, callback])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the optional callback is provided, it will be executed after the component is rendered or updated.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;59&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is ReactDOMServer?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;ReactDOMServer&lt;/code&gt; object enables you to render components to static markup (typically used on node server). This object is mainly used for &lt;em&gt;server-side rendering&lt;/em&gt; (SSR). The following methods can be used in both the server and browser environments:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;renderToString()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;renderToStaticMarkup()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, you generally run a Node-based web server like Express, Hapi, or Koa, and you call &lt;code&gt;renderToString&lt;/code&gt; to render your root component to a string, which you then send as response.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// using Express
import { renderToString } from &#39;react-dom/server&#39;
import MyPage from &#39;./MyPage&#39;

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
  res.write(&#39;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;My Page&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&#39;)
  res.write(&#39;&amp;lt;div id=&quot;content&quot;&amp;gt;&#39;)
  res.write(renderToString(&amp;lt;MyPage/&amp;gt;))
  res.write(&#39;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;)
  res.end()
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;60&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use innerHTML in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute is React‚Äôs replacement for using &lt;code&gt;innerHTML&lt;/code&gt; in the browser DOM. Just like &lt;code&gt;innerHTML&lt;/code&gt;, it is risky to use this attribute considering cross-site scripting (XSS) attacks. You just need to pass a &lt;code&gt;__html&lt;/code&gt; object as key and HTML text as value.&lt;/p&gt; &lt;p&gt;In this example MyComponent uses &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute for setting HTML markup:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function createMarkup() {
  return { __html: &#39;First &amp;amp;middot; Second&#39; }
}

function MyComponent() {
  return &amp;lt;div dangerouslySetInnerHTML={createMarkup()} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;61&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use styles in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;style&lt;/code&gt; attribute accepts a JavaScript object with camelCased properties rather than a CSS string. This is consistent with the DOM style JavaScript property, is more efficient, and prevents XSS security holes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const divStyle = {
  color: &#39;blue&#39;,
  backgroundImage: &#39;url(&#39; + imgUrl + &#39;)&#39;
};

function HelloWorldComponent() {
  return &amp;lt;div style={divStyle}&amp;gt;Hello World!&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Style keys are camelCased in order to be consistent with accessing the properties on DOM nodes in JavaScript (e.g. &lt;code&gt;node.style.backgroundImage&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;62&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How events are different in React?&lt;/h3&gt; &lt;p&gt;Handling events in React elements has some syntactic differences:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React event handlers are named using camelCase, rather than lowercase.&lt;/li&gt; 
   &lt;li&gt;With JSX you pass a function as the event handler, rather than a string.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;63&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What will happen if you use &lt;code&gt;setState()&lt;/code&gt; in constructor?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt;, then apart from assigning to the object state React also re-renders the component and all its children. You would get error like this: &lt;em&gt;Can only update a mounted or mounting component.&lt;/em&gt; So we need to use &lt;code&gt;this.state&lt;/code&gt; to initialize variables inside constructor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;64&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the impact of indexes as keys?&lt;/h3&gt; &lt;p&gt;Keys should be stable, predictable, and unique so that React can keep track of elements.&lt;/p&gt; &lt;p&gt;In the below code snippet each element‚Äôs key will be based on ordering, rather than tied to the data that is being represented. This limits the optimizations that React can do.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;{todos.map((todo, index) =&amp;gt;
  &amp;lt;Todo
    {...todo}
    key={index}
  /&amp;gt;
)}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you use element data for unique key, assuming todo.id is unique to this list and stable, React would be able to reorder elements without needing to reevaluate them as much.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;{todos.map((todo) =&amp;gt;
  &amp;lt;Todo {...todo}
    key={todo.id} /&amp;gt;
)}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;65&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it good to use &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillMount()&lt;/code&gt; method?&lt;/h3&gt; &lt;p&gt;Yes, it is safe to use &lt;code&gt;setState()&lt;/code&gt; inside &lt;code&gt;componentWillMount()&lt;/code&gt; method. But at the same it is recommended to avoid async initialization in &lt;code&gt;componentWillMount()&lt;/code&gt; lifecycle method. &lt;code&gt;componentWillMount()&lt;/code&gt; is invoked immediately before mounting occurs. It is called before &lt;code&gt;render()&lt;/code&gt;, therefore setting state in this method will not trigger a re-render. Avoid introducing any side-effects or subscriptions in this method. We need to make sure async calls for component initialization happened in &lt;code&gt;componentDidMount()&lt;/code&gt; instead of &lt;code&gt;componentWillMount()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;componentDidMount() {
  axios.get(`api/todos`)
    .then((result) =&amp;gt; {
      this.setState({
        messages: [...result.data]
      })
    })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;66&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What will happen if you use props in initial state?&lt;/h3&gt; &lt;p&gt;If the props on the component are changed without the component being refreshed, the new prop value will never be displayed because the constructor function will never update the current state of the component. The initialization of state from props only runs when the component is first created.&lt;/p&gt; &lt;p&gt;The below component won‚Äôt display the updated input value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      records: [],
      inputValue: this.props.inputValue
    };
  }

  render() {
    return &amp;lt;div&amp;gt;{this.state.inputValue}&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using props inside render method will update the value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      record: []
    }
  }

  render() {
    return &amp;lt;div&amp;gt;{this.props.inputValue}&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;67&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you conditionally render components?&lt;/h3&gt; &lt;p&gt;In some cases you want to render different components depending on some state. JSX does not render &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, so you can use conditional &lt;em&gt;short-circuiting&lt;/em&gt; to render a given part of your component only if a certain condition is true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = ({ name, address }) =&amp;gt; (
  &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;
    {address &amp;amp;&amp;amp;
      &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;
    }
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you need an &lt;code&gt;if-else&lt;/code&gt; condition then use &lt;em&gt;ternary operator&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = ({ name, address }) =&amp;gt; (
  &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;
    {address
      ? &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;
      : &amp;lt;p&amp;gt;{&#39;Address is not available&#39;}&amp;lt;/p&amp;gt;
    }
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;68&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why we need to be careful when spreading props on DOM elements?&lt;/h3&gt; &lt;p&gt;When we &lt;em&gt;spread props&lt;/em&gt; we run into the risk of adding unknown HTML attributes, which is a bad practice. Instead we can use prop destructuring with &lt;code&gt;...rest&lt;/code&gt; operator, so it will add only required props.&lt;/p&gt; &lt;p&gt;For example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ComponentA = () =&amp;gt;
  &amp;lt;ComponentB isDisplay={true} className={&#39;componentStyle&#39;} /&amp;gt;

const ComponentB = ({ isDisplay, ...domProps }) =&amp;gt;
  &amp;lt;div {...domProps}&amp;gt;{&#39;ComponentB&#39;}&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;69&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How you use decorators in React?&lt;/h3&gt; &lt;p&gt;You can &lt;em&gt;decorate&lt;/em&gt; your &lt;em&gt;class&lt;/em&gt; components, which is the same as passing the component into a function. &lt;strong&gt;Decorators&lt;/strong&gt; are flexible and readable way of modifying component functionality.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;@setTitle(&#39;Profile&#39;)
class Profile extends React.Component {
    //....
}

/*
  title is a string that will be set as a document title
  WrappedComponent is what our decorator will receive when
  put directly above a component class as seen in the example above
*/
const setTitle = (title) =&amp;gt; (WrappedComponent) =&amp;gt; {
  return class extends React.Component {
    componentDidMount() {
      document.title = title
    }

    render() {
      return &amp;lt;WrappedComponent {...this.props} /&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Decorators are a feature that didn‚Äôt make it into ES7, but are currently a &lt;em&gt;stage 2 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;70&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you memoize a component?&lt;/h3&gt; &lt;p&gt;There are memoize libraries available which can be used on function components.&lt;/p&gt; &lt;p&gt;For example &lt;code&gt;moize&lt;/code&gt; library can memoize the component in another component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import moize from &#39;moize&#39;
import Component from &#39;./components/Component&#39; // this module exports a non-memoized component

const MemoizedFoo = moize.react(Component)

const Consumer = () =&amp;gt; {
  &amp;lt;div&amp;gt;
    {&#39;I will memoize the following entry:&#39;}
    &amp;lt;MemoizedFoo/&amp;gt;
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Since React v16.6.0, we have a &lt;code&gt;React.memo&lt;/code&gt;. It provides a higher order component which memoizes component unless the props change. To use it, simply wrap the component using React.memo before you use it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  const MemoComponent = React.memo(function MemoComponent(props) {
    /* render using props */
  });
  OR
  export default React.memo(MyFunctionComponent);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;71&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How you implement Server Side Rendering or SSR?&lt;/h3&gt; &lt;p&gt;React is already equipped to handle rendering on Node servers. A special version of the DOM renderer is available, which follows the same pattern as on the client side.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ReactDOMServer from &#39;react-dom/server&#39;
import App from &#39;./App&#39;

ReactDOMServer.renderToString(&amp;lt;App /&amp;gt;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This method will output the regular HTML as a string, which can be then placed inside a page body as part of the server response. On the client side, React detects the pre-rendered content and seamlessly picks up where it left off.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;72&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to enable production mode in React?&lt;/h3&gt; &lt;p&gt;You should use Webpack‚Äôs &lt;code&gt;DefinePlugin&lt;/code&gt; method to set &lt;code&gt;NODE_ENV&lt;/code&gt; to &lt;code&gt;production&lt;/code&gt;, by which it strip out things like propType validation and extra warnings. Apart from this, if you minify the code, for example, Uglify‚Äôs dead-code elimination to strip out development only code and comments, it will drastically reduce the size of your bundle.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;73&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is CRA and its benefits?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;create-react-app&lt;/code&gt; CLI tool allows you to quickly create &amp;amp; run React applications with no configuration step.&lt;/p&gt; &lt;p&gt;Let‚Äôs create Todo App using &lt;em&gt;CRA&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;# Installation
$ npm install -g create-react-app

# Create new project
$ create-react-app todo-app
$ cd todo-app

# Build, test and run
$ npm run build
$ npm run test
$ npm start
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It includes everything we need to build a React app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React, JSX, ES6, and Flow syntax support.&lt;/li&gt; 
   &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; 
   &lt;li&gt;Autoprefixed CSS, so you don‚Äôt need -webkit- or other prefixes.&lt;/li&gt; 
   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; 
   &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; 
   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;74&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the lifecycle methods order in mounting?&lt;/h3&gt; &lt;p&gt;The lifecycle methods are called in the following order when an instance of a component is being created and inserted into the DOM.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;static getDerivedStateFromProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;75&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/h3&gt; &lt;p&gt;The following lifecycle methods going to be unsafe coding practices and will be more problematic with async rendering.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Starting with React v16.3 these methods are aliased with &lt;code&gt;UNSAFE_&lt;/code&gt; prefix, and the unprefixed version will be removed in React v17.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;76&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new static &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method is invoked after a component is instantiated as well as before it is re-rendered. It can return an object to update state, or &lt;code&gt;null&lt;/code&gt; to indicate that the new props do not require any state updates.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  static getDerivedStateFromProps(props, state) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillReceiveProps()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;77&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method is called right before DOM updates. The return value from this method will be passed as the third parameter to &lt;code&gt;componentDidUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  getSnapshotBeforeUpdate(prevProps, prevState) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;78&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do Hooks replace render props and higher order components?&lt;/h3&gt; &lt;p&gt;Both render props and higher-order components render only a single child but in most of the cases Hooks are a simpler way to serve this by reducing nesting in your tree.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;79&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended way for naming components?&lt;/h3&gt; &lt;p&gt;It is recommended to name the component by reference instead of using &lt;code&gt;displayName&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;displayName&lt;/code&gt; for naming component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export default React.createClass({
  displayName: &#39;TodoApp&#39;,
  // ...
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;strong&gt;recommended&lt;/strong&gt; approach:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export default class TodoApp extends React.Component {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;80&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended ordering of methods in component class?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Recommended&lt;/em&gt; ordering of methods from &lt;em&gt;mounting&lt;/em&gt; to &lt;em&gt;render stage&lt;/em&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;static&lt;/code&gt; methods&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;getChildContext()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;shouldComponentUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUnmount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;click handlers or event handlers like &lt;code&gt;onClickSubmit()&lt;/code&gt; or &lt;code&gt;onChangeDescription()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;getter methods for render like &lt;code&gt;getSelectReason()&lt;/code&gt; or &lt;code&gt;getFooterContent()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;optional render methods like &lt;code&gt;renderNavigation()&lt;/code&gt; or &lt;code&gt;renderProfilePicture()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;81&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is a switching component?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;switching component&lt;/em&gt; is a component that renders one of many components. We need to use object to map prop values to components.&lt;/p&gt; &lt;p&gt;For example, a switching component to display different pages based on &lt;code&gt;page&lt;/code&gt; prop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import HomePage from &#39;./HomePage&#39;
import AboutPage from &#39;./AboutPage&#39;
import ServicesPage from &#39;./ServicesPage&#39;
import ContactPage from &#39;./ContactPage&#39;

const PAGES = {
  home: HomePage,
  about: AboutPage,
  services: ServicesPage,
  contact: ContactPage
}

const Page = (props) =&amp;gt; {
  const Handler = PAGES[props.page] || ContactPage

  return &amp;lt;Handler {...props} /&amp;gt;
}

// The keys of the PAGES object can be used in the prop types to catch dev-time errors.
Page.propTypes = {
  page: PropTypes.oneOf(Object.keys(PAGES)).isRequired
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;82&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why we need to pass a function to setState()?&lt;/h3&gt; &lt;p&gt;The reason behind for this is that &lt;code&gt;setState()&lt;/code&gt; is an asynchronous operation. React batches state changes for performance reasons, so the state may not change immediately after &lt;code&gt;setState()&lt;/code&gt; is called. That means you should not rely on the current state when calling &lt;code&gt;setState()&lt;/code&gt;‚Ääsince you can‚Äôt be sure what that state will be. The solution is to pass a function to &lt;code&gt;setState()&lt;/code&gt;, with the previous state as an argument. By doing this you can avoid issues with the user getting the old state value on access due to the asynchronous nature of &lt;code&gt;setState()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Let‚Äôs say the initial count value is zero. After three consecutive increment operations, the value is going to be incremented only by one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// assuming this.state.count === 0
this.setState({ count: this.state.count + 1 })
this.setState({ count: this.state.count + 1 })
this.setState({ count: this.state.count + 1 })
// this.state.count === 0, not 3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we pass a function to &lt;code&gt;setState()&lt;/code&gt;, the count gets incremented correctly.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.setState((prevState, props) =&amp;gt; ({
  count: prevState.count + props.increment
}))
// this.state.count === 3 as expected
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;(OR)&lt;/strong&gt;&lt;/p&gt; &lt;h3&gt;Why function is preferred over object for &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;React may batch multiple &lt;code&gt;setState()&lt;/code&gt; calls into a single update for performance. Because &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; may be updated asynchronously, you should not rely on their values for calculating the next state.&lt;/p&gt; &lt;p&gt;This counter example will fail to update as expected:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Wrong
this.setState({
  counter: this.state.counter + this.props.increment,
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The preferred approach is to call &lt;code&gt;setState()&lt;/code&gt; with function rather than object. That function will receive the previous state as the first argument, and the props at the time the update is applied as the second argument.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Correct
this.setState((prevState, props) =&amp;gt; ({
  counter: prevState.counter + props.increment
}))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;83&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is strict mode in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; is a useful component for highlighting potential problems in an application. Just like &lt;code&gt;&amp;lt;Fragment&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;StrictMode&amp;gt;&lt;/code&gt; does not render any extra DOM elements. It activates additional checks and warnings for its descendants. These checks apply for &lt;em&gt;development mode&lt;/em&gt; only.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;

function ExampleApplication() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Header /&amp;gt;
      &amp;lt;React.StrictMode&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;ComponentOne /&amp;gt;
          &amp;lt;ComponentTwo /&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/React.StrictMode&amp;gt;
      &amp;lt;Header /&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the example above, the &lt;em&gt;strict mode&lt;/em&gt; checks apply to &lt;code&gt;&amp;lt;ComponentOne&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ComponentTwo&amp;gt;&lt;/code&gt; components only.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;84&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are React Mixins?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Mixins&lt;/em&gt; are a way to totally separate components to have a common functionality. Mixins &lt;strong&gt;should not be used&lt;/strong&gt; and can be replaced with &lt;em&gt;higher-order components&lt;/em&gt; or &lt;em&gt;decorators&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;One of the most commonly used mixins is &lt;code&gt;PureRenderMixin&lt;/code&gt;. You might be using it in some components to prevent unnecessary re-renders when the props and state are shallowly equal to the previous props and state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const PureRenderMixin = require(&#39;react-addons-pure-render-mixin&#39;)

const Button = React.createClass({
  mixins: [PureRenderMixin],
  // ...
})
&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- TODO: mixins are deprecated --&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;85&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is &lt;code&gt;isMounted()&lt;/code&gt; an anti-pattern and what is the proper solution?&lt;/h3&gt; &lt;p&gt;The primary use case for &lt;code&gt;isMounted()&lt;/code&gt; is to avoid calling &lt;code&gt;setState()&lt;/code&gt; after a component has been unmounted, because it will emit a warning.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (this.isMounted()) {
  this.setState({...})
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Checking &lt;code&gt;isMounted()&lt;/code&gt; before calling &lt;code&gt;setState()&lt;/code&gt; does eliminate the warning, but it also defeats the purpose of the warning. Using &lt;code&gt;isMounted()&lt;/code&gt; is a code smell because the only reason you would check is because you think you might be holding a reference after the component has unmounted.&lt;/p&gt; &lt;p&gt;An optimal solution would be to find places where &lt;code&gt;setState()&lt;/code&gt; might be called after a component has unmounted, and fix them. Such situations most commonly occur due to callbacks, when a component is waiting for some data and gets unmounted before the data arrives. Ideally, any callbacks should be canceled in &lt;code&gt;componentWillUnmount()&lt;/code&gt;, prior to unmounting.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;86&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the Pointer Events supported in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Pointer Events&lt;/em&gt; provide a unified way of handling all input events. In the old days we had a mouse and respective event listeners to handle them but nowadays we have many devices which don‚Äôt correlate to having a mouse, like phones with touch surface or pens. We need to remember that these events will only work in browsers that support the &lt;em&gt;Pointer Events&lt;/em&gt; specification.&lt;/p&gt; &lt;p&gt;The following event types are now available in &lt;em&gt;React DOM&lt;/em&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;onPointerDown&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerMove&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerUp&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerCancel&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onGotPointerCapture&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onLostPointerCapture&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerEnter&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerLeave&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerOver&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerOut&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;87&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should component names start with capital letter?&lt;/h3&gt; &lt;p&gt;If you are rendering your component using JSX, the name of that component has to begin with a capital letter otherwise React will throw an error as unrecognized tag. This convention is because only HTML elements and SVG tags can begin with a lowercase letter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class SomeComponent extends Component {
 // Code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can define component class which name starts with lowercase letter, but when it‚Äôs imported it should have capital letter. Here lowercase is fine:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class myComponent extends Component {
  render() {
    return &amp;lt;div /&amp;gt;
  }
}

export default myComponent
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While when imported in another file it should start with capital letter:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import MyComponent from &#39;./MyComponent&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;h4&gt;What are the exceptions on React component naming?&lt;/h4&gt; &lt;p&gt;The component names should start with a uppercase letter but there are few exceptions on this convention. The lowercase tag names with a dot (property accessors) are still considered as valid component names. For example the below tag can be compiled to a valid component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;     render() {
          return (
            &amp;lt;obj.component/&amp;gt; // `React.createElement(obj.component)`
          )
    }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;88&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Are custom DOM attributes supported in React v16?&lt;/h3&gt; &lt;p&gt;Yes. In the past, React used to ignore unknown DOM attributes. If you wrote JSX with an attribute that React doesn‚Äôt recognize, React would just skip it.&lt;/p&gt; &lt;p&gt;For example, let‚Äôs take a look at the below attribute:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div mycustomattribute={&#39;something&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Would render an empty div to the DOM with React v15:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In React v16 any unknown attributes will end up in the DOM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div mycustomattribute=&#39;something&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful for supplying browser-specific non-standard attributes, trying new DOM APIs, and integrating with opinionated third-party libraries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;89&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between constructor and getInitialState?&lt;/h3&gt; &lt;p&gt;You should initialize state in the constructor when using ES6 classes, and &lt;code&gt;getInitialState()&lt;/code&gt; method when using &lt;code&gt;React.createClass()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using ES6 classes:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.state = { /* initial state */ }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const MyComponent = React.createClass({
  getInitialState() {
    return { /* initial state */ }
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;React.createClass()&lt;/code&gt; is deprecated and removed in React v16. Use plain JavaScript classes instead.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;90&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you force a component to re-render without calling setState?&lt;/h3&gt; &lt;p&gt;By default, when your component‚Äôs state or props change, your component will re-render. If your &lt;code&gt;render()&lt;/code&gt; method depends on some other data, you can tell React that the component needs re-rendering by calling &lt;code&gt;forceUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;component.forceUpdate(callback)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is recommended to avoid all uses of &lt;code&gt;forceUpdate()&lt;/code&gt; and only read from &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; in &lt;code&gt;render()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;91&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;super()&lt;/code&gt; and &lt;code&gt;super(props)&lt;/code&gt; in React using ES6 classes?&lt;/h3&gt; &lt;p&gt;When you want to access &lt;code&gt;this.props&lt;/code&gt; in &lt;code&gt;constructor()&lt;/code&gt; then you should pass props to &lt;code&gt;super()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super(props)&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    console.log(this.props) // { name: &#39;John&#39;, ... }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super()
    console.log(this.props) // undefined
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Outside &lt;code&gt;constructor()&lt;/code&gt; both will display same value for &lt;code&gt;this.props&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;92&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to loop inside JSX?&lt;/h3&gt; &lt;p&gt;You can simply use &lt;code&gt;Array.prototype.map&lt;/code&gt; with ES6 &lt;em&gt;arrow function&lt;/em&gt; syntax.&lt;/p&gt; &lt;p&gt;For example, the &lt;code&gt;items&lt;/code&gt; array of objects is mapped into an array of components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;tbody&amp;gt;
  {items.map(item =&amp;gt; &amp;lt;SomeComponent key={item.id} name={item.name} /&amp;gt;)}
&amp;lt;/tbody&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can‚Äôt iterate using &lt;code&gt;for&lt;/code&gt; loop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;tbody&amp;gt;
  for (let i = 0; i &amp;lt; items.length; i++) {
    &amp;lt;SomeComponent key={items[i].id} name={items[i].name} /&amp;gt;
  }
&amp;lt;/tbody&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is because JSX tags are transpiled into &lt;em&gt;function calls&lt;/em&gt;, and you can‚Äôt use statements inside expressions. This may change thanks to &lt;code&gt;do&lt;/code&gt; expressions which are &lt;em&gt;stage 1 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;93&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access props in attribute quotes?&lt;/h3&gt; &lt;p&gt;React (or JSX) doesn‚Äôt support variable interpolation inside an attribute value. The below representation won‚Äôt work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src=&#39;images/{this.props.image}&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can put any JS expression inside curly braces as the entire attribute value. So the below expression works:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src={&#39;images/&#39; + this.props.image} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using &lt;em&gt;template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src={`images/${this.props.image}`} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;94&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React proptype array with shape?&lt;/h3&gt; &lt;p&gt;If you want to pass an array of objects to a component with a particular shape then use &lt;code&gt;React.PropTypes.shape()&lt;/code&gt; as an argument to &lt;code&gt;React.PropTypes.arrayOf()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactComponent.propTypes = {
  arrayWithShape: React.PropTypes.arrayOf(React.PropTypes.shape({
    color: React.PropTypes.string.isRequired,
    fontSize: React.PropTypes.number.isRequired
  })).isRequired
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;95&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to conditionally apply class attributes?&lt;/h3&gt; &lt;p&gt;You shouldn‚Äôt use curly braces inside quotes because it is going to be evaluated as a string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className=&quot;btn-panel {this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead you need to move curly braces outside (don‚Äôt forget to include spaces between class names):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className={&#39;btn-panel &#39; + (this.props.visible ? &#39;show&#39; : &#39;hidden&#39;)}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className={`btn-panel ${this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}`}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;96&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React and ReactDOM?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react&lt;/code&gt; package contains &lt;code&gt;React.createElement()&lt;/code&gt;, &lt;code&gt;React.Component&lt;/code&gt;, &lt;code&gt;React.Children&lt;/code&gt;, and other helpers related to elements and component classes. You can think of these as the isomorphic or universal helpers that you need to build components. The &lt;code&gt;react-dom&lt;/code&gt; package contains &lt;code&gt;ReactDOM.render()&lt;/code&gt;, and in &lt;code&gt;react-dom/server&lt;/code&gt; we have &lt;em&gt;server-side rendering&lt;/em&gt; support with &lt;code&gt;ReactDOMServer.renderToString()&lt;/code&gt; and &lt;code&gt;ReactDOMServer.renderToStaticMarkup()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;97&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why ReactDOM is separated from React?&lt;/h3&gt; &lt;p&gt;The React team worked on extracting all DOM-related features into a separate library called &lt;em&gt;ReactDOM&lt;/em&gt;. React v0.14 is the first release in which the libraries are split. By looking at some of the packages, &lt;code&gt;react-native&lt;/code&gt;, &lt;code&gt;react-art&lt;/code&gt;, &lt;code&gt;react-canvas&lt;/code&gt;, and &lt;code&gt;react-three&lt;/code&gt;, it has become clear that the beauty and essence of React has nothing to do with browsers or the DOM.&lt;/p&gt; &lt;p&gt;To build more environments that React can render to, React team planned to split the main React package into two: &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt;. This paves the way to writing components that can be shared between the web version of React and React Native.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;98&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use React label element?&lt;/h3&gt; &lt;p&gt;If you try to render a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element bound to a text input using the standard &lt;code&gt;for&lt;/code&gt; attribute, then it produces HTML missing that attribute and prints a warning to the console.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;label for={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;
&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since &lt;code&gt;for&lt;/code&gt; is a reserved keyword in JavaScript, use &lt;code&gt;htmlFor&lt;/code&gt; instead.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;label htmlFor={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;
&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;99&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to combine multiple inline style objects?&lt;/h3&gt; &lt;p&gt;You can use &lt;em&gt;spread operator&lt;/em&gt; in regular React:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt; &amp;lt;button style={{...styles.panel.button, ...styles.panel.submitButton}}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you‚Äôre using React Native then you can use the array notation:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button style={[styles.panel.button, styles.panel.submitButton]}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;100&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to re-render the view when the browser is resized?&lt;/h3&gt; &lt;p&gt;You can listen to the &lt;code&gt;resize&lt;/code&gt; event in &lt;code&gt;componentDidMount()&lt;/code&gt; and then update the dimensions (&lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;). You should remove the listener in &lt;code&gt;componentWillUnmount()&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class WindowDimensions extends React.Component {
  constructor(props){
    super(props);
    this.updateDimensions = this.updateDimensions.bind(this);
  }
   
  componentWillMount() {
    this.updateDimensions()
  }

  componentDidMount() {
    window.addEventListener(&#39;resize&#39;, this.updateDimensions)
  }

  componentWillUnmount() {
    window.removeEventListener(&#39;resize&#39;, this.updateDimensions)
  }

  updateDimensions() {
    this.setState({width: window.innerWidth, height: window.innerHeight})
  }

  render() {
    return &amp;lt;span&amp;gt;{this.state.width} x {this.state.height}&amp;lt;/span&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;101&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;setState()&lt;/code&gt; and &lt;code&gt;replaceState()&lt;/code&gt; methods?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt; the current and previous states are merged. &lt;code&gt;replaceState()&lt;/code&gt; throws out the current state, and replaces it with only what you provide. Usually &lt;code&gt;setState()&lt;/code&gt; is used unless you really need to remove all previous keys for some reason. You can also set state to &lt;code&gt;false&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt; in &lt;code&gt;setState()&lt;/code&gt; instead of using &lt;code&gt;replaceState()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;102&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to listen to state changes?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;componentDidUpdate&lt;/code&gt; lifecycle method will be called when state changes. You can compare provided state and props values with current state and props to determine if something meaningful changed.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;componentDidUpdate(object prevProps, object prevState)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The previous releases of ReactJS also uses &lt;code&gt;componentWillUpdate(object nextProps, object nextState)&lt;/code&gt; for state changes. It has been deprecated in latest releases.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;103&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended approach of removing an array element in React state?&lt;/h3&gt; &lt;p&gt;The better approach is to use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;For example, let‚Äôs create a &lt;code&gt;removeItem()&lt;/code&gt; method for updating the state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;removeItem(index) {
  this.setState({
    data: this.state.data.filter((item, i) =&amp;gt; i !== index)
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;104&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use React without rendering HTML?&lt;/h3&gt; &lt;p&gt;It is possible with latest version (&amp;gt;=16.2). Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return false
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return null
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return []
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;React.Fragment&amp;gt;&amp;lt;/React.Fragment&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;&amp;gt;&amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Returning &lt;code&gt;undefined&lt;/code&gt; won‚Äôt work.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;105&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pretty print JSON with React?&lt;/h3&gt; &lt;p&gt;We can use &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag so that the formatting of the &lt;code&gt;JSON.stringify()&lt;/code&gt; is retained:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const data = { name: &#39;John&#39;, age: 42 }

class User extends React.Component {
  render() {
    return (
      &amp;lt;pre&amp;gt;
        {JSON.stringify(data, null, 2)}
      &amp;lt;/pre&amp;gt;
    )
  }
}

React.render(&amp;lt;User /&amp;gt;, document.getElementById(&#39;container&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;106&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why you can‚Äôt update props in React?&lt;/h3&gt; &lt;p&gt;The React philosophy is that props should be &lt;em&gt;immutable&lt;/em&gt; and &lt;em&gt;top-down&lt;/em&gt;. This means that a parent can send any prop values to a child, but the child can‚Äôt modify received props.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;107&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to focus an input element on page load?&lt;/h3&gt; &lt;p&gt;You can do it by creating &lt;em&gt;ref&lt;/em&gt; for &lt;code&gt;input&lt;/code&gt; element and using it in &lt;code&gt;componentDidMount()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class App extends React.Component{
  componentDidMount() {
    this.nameInput.focus()
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input
          defaultValue={&#39;Won\&#39;t focus&#39;}
        /&amp;gt;
        &amp;lt;input
          ref={(input) =&amp;gt; this.nameInput = input}
          defaultValue={&#39;Will focus&#39;}
        /&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;app&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;108&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible ways of updating objects in state?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with an object to merge with state:&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;Using &lt;code&gt;Object.assign()&lt;/code&gt; to create a copy of the object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = Object.assign({}, this.state.user, { age: 42 })
this.setState({ user })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Using &lt;em&gt;spread operator&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { ...this.state.user, age: 42 }
this.setState({ user })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with a function:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.setState(prevState =&amp;gt; ({
  user: {
    ...prevState.user,
    age: 42
  }
}))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;110&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How can we find the version of React at runtime in the browser?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;React.version&lt;/code&gt; to get the version.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const REACT_VERSION = React.version

ReactDOM.render(
  &amp;lt;div&amp;gt;{`React version: ${REACT_VERSION}`}&amp;lt;/div&amp;gt;,
  document.getElementById(&#39;app&#39;)
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;111&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the approaches to include polyfills in your &lt;code&gt;create-react-app&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are approaches to include polyfills in create-react-app,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Manual import from &lt;code&gt;core-js&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create a file called (something like) &lt;code&gt;polyfills.js&lt;/code&gt; and import it into root &lt;code&gt;index.js&lt;/code&gt; file. Run &lt;code&gt;npm install core-js&lt;/code&gt; or &lt;code&gt;yarn add core-js&lt;/code&gt; and import your specific required features.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;core-js/fn/array/find&#39;
import &#39;core-js/fn/array/includes&#39;
import &#39;core-js/fn/number/is-nan&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Polyfill service:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use the polyfill.io CDN to retrieve custom, browser-specific polyfills by adding this line to &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&#39;https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.includes&#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above script we had to explicitly request the &lt;code&gt;Array.prototype.includes&lt;/code&gt; feature as it is not included in the default feature set.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;112&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use https instead of http in create-react-app?&lt;/h3&gt; &lt;p&gt;You just need to use &lt;code&gt;HTTPS=true&lt;/code&gt; configuration. You can edit your &lt;code&gt;package.json&lt;/code&gt; scripts section:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&quot;scripts&quot;: {
  &quot;start&quot;: &quot;set HTTPS=true &amp;amp;&amp;amp; react-scripts start&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or just run &lt;code&gt;set HTTPS=true &amp;amp;&amp;amp; npm start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;113&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to avoid using relative path imports in create-react-app?&lt;/h3&gt; &lt;p&gt;Create a file called &lt;code&gt;.env&lt;/code&gt; in the project root and write the import path:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;NODE_PATH=src/app
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that restart the development server. Now you should be able to import anything inside &lt;code&gt;src/app&lt;/code&gt; without relative paths.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;114&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add Google Analytics for React Router?&lt;/h3&gt; &lt;p&gt;Add a listener on the &lt;code&gt;history&lt;/code&gt; object to record each page view:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;history.listen(function (location) {
  window.ga(&#39;set&#39;, &#39;page&#39;, location.pathname + location.search)
  window.ga(&#39;send&#39;, &#39;pageview&#39;, location.pathname + location.search)
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;115&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to update a component every second?&lt;/h3&gt; &lt;p&gt;You need to use &lt;code&gt;setInterval()&lt;/code&gt; to trigger the change, but you also need to clear the timer when the component unmounts to prevent errors and memory leaks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;componentDidMount() {
  this.interval = setInterval(() =&amp;gt; this.setState({ time: Date.now() }), 1000)
}

componentWillUnmount() {
  clearInterval(this.interval)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;116&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you apply vendor prefixes to inline styles in React?&lt;/h3&gt; &lt;p&gt;React &lt;em&gt;does not&lt;/em&gt; apply &lt;em&gt;vendor prefixes&lt;/em&gt; automatically. You need to add vendor prefixes manually.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div style={{
  transform: &#39;rotate(90deg)&#39;,
  WebkitTransform: &#39;rotate(90deg)&#39;, // note the capital &#39;W&#39; here
  msTransform: &#39;rotate(90deg)&#39; // &#39;ms&#39; is the only lowercase vendor prefix
}} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;117&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to import and export components using React and ES6?&lt;/h3&gt; &lt;p&gt;You should use default for exporting the components&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import User from &#39;user&#39;

export default class MyProfile extends React.Component {
  render(){
    return (
      &amp;lt;User type=&quot;customer&quot;&amp;gt;
        //...
      &amp;lt;/User&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With the export specifier, the MyProfile is going to be the member and exported to this module and the same can be imported without mentioning the name in other components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;119&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is a component constructor called only once?&lt;/h3&gt; &lt;p&gt;React‚Äôs &lt;em&gt;reconciliation&lt;/em&gt; algorithm assumes that without any information to the contrary, if a custom component appears in the same place on subsequent renders, it‚Äôs the same component as before, so reuses the previous instance rather than creating a new one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;120&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to define constants in React?&lt;/h3&gt; &lt;p&gt;You can use ES7 &lt;code&gt;static&lt;/code&gt; field to define constant.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  static DEFAULT_PAGINATION = 10
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Static fields&lt;/em&gt; are part of the &lt;em&gt;Class Fields&lt;/em&gt; stage 3 proposal.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;121&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to programmatically trigger click event in React?&lt;/h3&gt; &lt;p&gt;You could use the ref prop to acquire a reference to the underlying &lt;code&gt;HTMLInputElement&lt;/code&gt; object through a callback, store the reference as a class property, then use that reference to later trigger a click from your event handlers using the &lt;code&gt;HTMLElement.click&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;This can be done in two steps:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create ref in render method:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;input ref={input =&amp;gt; this.inputElement = input} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Apply click event in your event handler:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.inputElement.click()
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;122&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use async/await in plain React?&lt;/h3&gt; &lt;p&gt;If you want to use &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; in React, you will need &lt;em&gt;Babel&lt;/em&gt; and &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot;&gt;transform-async-to-generator&lt;/a&gt; plugin. React Native ships with Babel and a set of transforms.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;123&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common folder structures for React?&lt;/h3&gt; &lt;p&gt;There are two common practices for React project file structure.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by features or routes:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;One common way to structure projects is locate CSS, JS, and tests together, grouped by feature or route.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;common/
‚îú‚îÄ Avatar.js
‚îú‚îÄ Avatar.css
‚îú‚îÄ APIUtils.js
‚îî‚îÄ APIUtils.test.js
feed/
‚îú‚îÄ index.js
‚îú‚îÄ Feed.js
‚îú‚îÄ Feed.css
‚îú‚îÄ FeedStory.js
‚îú‚îÄ FeedStory.test.js
‚îî‚îÄ FeedAPI.js
profile/
‚îú‚îÄ index.js
‚îú‚îÄ Profile.js
‚îú‚îÄ ProfileHeader.js
‚îú‚îÄ ProfileHeader.css
‚îî‚îÄ ProfileAPI.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by file type:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Another popular way to structure projects is to group similar files together.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;api/
‚îú‚îÄ APIUtils.js
‚îú‚îÄ APIUtils.test.js
‚îú‚îÄ ProfileAPI.js
‚îî‚îÄ UserAPI.js
components/
‚îú‚îÄ Avatar.js
‚îú‚îÄ Avatar.css
‚îú‚îÄ Feed.js
‚îú‚îÄ Feed.css
‚îú‚îÄ FeedStory.js
‚îú‚îÄ FeedStory.test.js
‚îú‚îÄ Profile.js
‚îú‚îÄ ProfileHeader.js
‚îî‚îÄ ProfileHeader.css
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;124&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the popular packages for animation?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Transition Group&lt;/em&gt; and &lt;em&gt;React Motion&lt;/em&gt; are popular animation packages in React ecosystem.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;125&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of styles modules?&lt;/h3&gt; &lt;p&gt;It is recommended to avoid hard coding style values in components. Any values that are likely to be used across different UI components should be extracted into their own modules.&lt;/p&gt; &lt;p&gt;For example, these styles could be extracted into a separate component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export const colors = {
  white,
  black,
  blue
}

export const space = [
  0,
  8,
  16,
  32,
  64
]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then imported individually in other components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { space, colors } from &#39;./styles&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;126&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the popular React-specific linters?&lt;/h3&gt; &lt;p&gt;ESLint is a popular JavaScript linter. There are plugins available that analyse specific code styles. One of the most common for React is an npm package called &lt;code&gt;eslint-plugin-react&lt;/code&gt;. By default, it will check a number of best practices, with rules checking things from keys in iterators to a complete set of prop types.&lt;/p&gt; &lt;p&gt;Another popular plugin is &lt;code&gt;eslint-plugin-jsx-a11y&lt;/code&gt;, which will help fix common issues with accessibility. As JSX offers slightly different syntax to regular HTML, issues with &lt;code&gt;alt&lt;/code&gt; text and &lt;code&gt;tabindex&lt;/code&gt;, for example, will not be picked up by regular plugins.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;127&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to make AJAX call and in which component lifecycle methods should I make an AJAX call?&lt;/h3&gt; &lt;p&gt;You can use AJAX libraries such as Axios, jQuery AJAX, and the browser built-in &lt;code&gt;fetch&lt;/code&gt;. You should fetch data in the &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle method. This is so you can use &lt;code&gt;setState()&lt;/code&gt; to update your component when the data is retrieved.&lt;/p&gt; &lt;p&gt;For example, the employees list fetched from API and set local state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      employees: [],
      error: null
    }
  }

  componentDidMount() {
    fetch(&#39;https://api.example.com/items&#39;)
      .then(res =&amp;gt; res.json())
      .then(
        (result) =&amp;gt; {
          this.setState({
            employees: result.employees
          })
        },
        (error) =&amp;gt; {
          this.setState({ error })
        }
      )
  }

  render() {
    const { error, employees } = this.state
    if (error) {
      return &amp;lt;div&amp;gt;Error: {error.message}&amp;lt;/div&amp;gt;;
    } else {
      return (
        &amp;lt;ul&amp;gt;
          {employees.map(employee =&amp;gt; (
            &amp;lt;li key={employee.name}&amp;gt;
              {employee.name}-{employee.experience}
            &amp;lt;/li&amp;gt;
          ))}
        &amp;lt;/ul&amp;gt;
      )
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;128&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are render props?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Render Props&lt;/strong&gt; is a simple technique for sharing code between components using a prop whose value is a function. The below component uses render prop which returns a React element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;DataProvider render={data =&amp;gt; (
  &amp;lt;h1&amp;gt;{`Hello ${data.target}`}&amp;lt;/h1&amp;gt;
)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Libraries such as React Router and DownShift are using this pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Router&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;129&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Router?&lt;/h3&gt; &lt;p&gt;React Router is a powerful routing library built on top of React that helps you add new screens and flows to your application incredibly quickly, all while keeping the URL in sync with what‚Äôs being displayed on the page.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;130&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How React Router is different from history library?&lt;/h3&gt; &lt;p&gt;React Router is a wrapper around the &lt;code&gt;history&lt;/code&gt; library which handles interaction with the browser‚Äôs &lt;code&gt;window.history&lt;/code&gt; with its browser and hash histories. It also provides memory history which is useful for environments that don‚Äôt have global history, such as mobile app development (React Native) and unit testing with Node.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;131&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components of React Router v4?&lt;/h3&gt; &lt;p&gt;React Router v4 provides below 3 &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;HashRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;MemoryRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The above components will create &lt;em&gt;browser&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, and &lt;em&gt;memory&lt;/em&gt; history instances. React Router v4 makes the properties and methods of the &lt;code&gt;history&lt;/code&gt; instance associated with your router available through the context in the &lt;code&gt;router&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;132&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods of &lt;code&gt;history&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;A history instance has two methods for navigation purpose.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;If you think of the history as an array of visited locations, &lt;code&gt;push()&lt;/code&gt; will add a new location to the array and &lt;code&gt;replace()&lt;/code&gt; will replace the current location in the array with the new one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;133&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you programmatically navigate using React Router v4?&lt;/h3&gt; &lt;p&gt;There are three different ways to achieve programmatic routing/navigation within components.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using the &lt;code&gt;withRouter()&lt;/code&gt; higher-order function:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;withRouter()&lt;/code&gt; higher-order function will inject the history object as a prop of the component. This object provides &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods to avoid the usage of context.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { withRouter } from &#39;react-router-dom&#39; // this also works with &#39;react-router-native&#39;

const Button = withRouter(({ history }) =&amp;gt; (
  &amp;lt;button
    type=&#39;button&#39;
    onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}
  &amp;gt;
    {&#39;Click Me!&#39;}
  &amp;lt;/button&amp;gt;
))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component and render props pattern:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component passes the same props as &lt;code&gt;withRouter()&lt;/code&gt;, so you will be able to access the history methods through the history prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { Route } from &#39;react-router-dom&#39;

const Button = () =&amp;gt; (
  &amp;lt;Route render={({ history }) =&amp;gt; (
    &amp;lt;button
      type=&#39;button&#39;
      onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}
    &amp;gt;
      {&#39;Click Me!&#39;}
    &amp;lt;/button&amp;gt;
  )} /&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using context:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This option is not recommended and treated as unstable API.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const Button = (props, context) =&amp;gt; (
  &amp;lt;button
    type=&#39;button&#39;
    onClick={() =&amp;gt; {
      context.history.push(&#39;/new-location&#39;)
    }}
  &amp;gt;
    {&#39;Click Me!&#39;}
  &amp;lt;/button&amp;gt;
)

Button.contextTypes = {
  history: React.PropTypes.shape({
    push: React.PropTypes.func.isRequired
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;134&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to get query parameters in React Router v4?&lt;/h3&gt; &lt;p&gt;The ability to parse query strings was taken out of React Router v4 because there have been user requests over the years to support different implementation. So the decision has been given to users to choose the implementation they like. The recommended approach is to use query strings library.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const queryString = require(&#39;query-string&#39;);
const parsed = queryString.parse(props.location.search);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use &lt;code&gt;URLSearchParams&lt;/code&gt; if you want something native:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const params = new URLSearchParams(props.location.search)
const foo = params.get(&#39;name&#39;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should use a &lt;em&gt;polyfill&lt;/em&gt; for IE11.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;135&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why you get ‚ÄúRouter may have only one child element‚Äù warning?&lt;/h3&gt; &lt;p&gt;You have to wrap your Route‚Äôs in a &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block because &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; is unique in that it renders a route exclusively.&lt;/p&gt; &lt;p&gt;At first you need to add &lt;code&gt;Switch&lt;/code&gt; to your imports:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { Switch, Router, Route } from &#39;react-router&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then define the routes within &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Router&amp;gt;
  &amp;lt;Switch&amp;gt;
    &amp;lt;Route {/* ... */} /&amp;gt;
    &amp;lt;Route {/* ... */} /&amp;gt;
  &amp;lt;/Switch&amp;gt;
&amp;lt;/Router&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;136&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass params to &lt;code&gt;history.push&lt;/code&gt; method in React Router v4?&lt;/h3&gt; &lt;p&gt;While navigating you can pass props to the &lt;code&gt;history&lt;/code&gt; object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.props.history.push({
  pathname: &#39;/template&#39;,
  search: &#39;?name=sudheer&#39;,
  state: { detail: response.data }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;search&lt;/code&gt; property is used to pass query params in &lt;code&gt;push()&lt;/code&gt; method.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;137&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to implement &lt;em&gt;default&lt;/em&gt; or &lt;em&gt;NotFound&lt;/em&gt; page?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; renders the first child &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; that matches. A &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; with no path always matches. So you just need to simply drop path attribute as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Switch&amp;gt;
  &amp;lt;Route exact path=&quot;/&quot; component={Home}/&amp;gt;
  &amp;lt;Route path=&quot;/user&quot; component={User}/&amp;gt;
  &amp;lt;Route component={NotFound} /&amp;gt;
&amp;lt;/Switch&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;138&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to get history on React Router v4?&lt;/h3&gt; &lt;p&gt;Below are the list of steps to get history object on React Router v4,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create a module that exports a &lt;code&gt;history&lt;/code&gt; object and import this module across the project.&lt;/p&gt; &lt;p&gt;For example, create &lt;code&gt;history.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createBrowserHistory } from &#39;history&#39;

export default createBrowserHistory({
  /* pass a configuration object here if needed */
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You should use the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; component instead of built-in routers. Imported the above &lt;code&gt;history.js&lt;/code&gt; inside &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { Router } from &#39;react-router-dom&#39;
import history from &#39;./history&#39;
import App from &#39;./App&#39;

ReactDOM.render((
  &amp;lt;Router history={history}&amp;gt;
    &amp;lt;App /&amp;gt;
  &amp;lt;/Router&amp;gt;
), holder)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use push method of &lt;code&gt;history&lt;/code&gt; object similar to built-in history object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// some-other-file.js
import history from &#39;./history&#39;

history.push(&#39;/go-here&#39;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;139&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to perform automatic redirect after login?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-router&lt;/code&gt; package provides &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; component in React Router. Rendering a &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; will navigate to a new location. Like server-side redirects, the new location will override the current location in the history stack.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;
import { Redirect } from &#39;react-router&#39;

export default class LoginComponent extends Component {
  render() {
    if (this.state.isLoggedIn === true) {
      return &amp;lt;Redirect to=&quot;/your/redirect/page&quot; /&amp;gt;
    } else {
      return &amp;lt;div&amp;gt;{&#39;Login Please&#39;}&amp;lt;/div&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Internationalization&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;140&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;React Intl&lt;/em&gt; library makes internalization in React straightforward, with off-the-shelf components and an API that can handle everything from formatting strings, dates, and numbers, to pluralization. React Intl is part of &lt;em&gt;FormatJS&lt;/em&gt; which provides bindings to React via its components and API.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;141&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of React Intl?&lt;/h3&gt; &lt;p&gt;Below are the main features of React Intl,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Display numbers with separators.&lt;/li&gt; 
   &lt;li&gt;Display dates and times correctly.&lt;/li&gt; 
   &lt;li&gt;Display dates relative to ‚Äúnow‚Äù.&lt;/li&gt; 
   &lt;li&gt;Pluralize labels in strings.&lt;/li&gt; 
   &lt;li&gt;Support for 150+ languages.&lt;/li&gt; 
   &lt;li&gt;Runs in the browser and Node.&lt;/li&gt; 
   &lt;li&gt;Built on standards.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;142&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the two ways of formatting in React Intl?&lt;/h3&gt; &lt;p&gt;The library provides two ways to format strings, numbers, and dates:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using react components:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;FormattedMessage
  id={&#39;account&#39;}
  defaultMessage={&#39;The amount is less than minimum balance.&#39;}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using an API:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const messages = defineMessages({
  accountMessage: {
    id: &#39;account&#39;,
    defaultMessage: &#39;The amount is less than minimum balance.&#39;,
  }
})

formatMessage(messages.accountMessage)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;143&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;&amp;lt;FormattedMessage&amp;gt;&lt;/code&gt; as placeholder using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Formatted... /&amp;gt;&lt;/code&gt; components from &lt;code&gt;react-intl&lt;/code&gt; return elements, not plain text, so they can‚Äôt be used for placeholders, alt text, etc. In that case, you should use lower level API &lt;code&gt;formatMessage()&lt;/code&gt;. You can inject the &lt;code&gt;intl&lt;/code&gt; object into your component using &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component and then format the message using &lt;code&gt;formatMessage()&lt;/code&gt; available on that object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import { injectIntl, intlShape } from &#39;react-intl&#39;

const MyComponent = ({ intl }) =&amp;gt; {
  const placeholder = intl.formatMessage({id: &#39;messageId&#39;})
  return &amp;lt;input placeholder={placeholder} /&amp;gt;
}

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;144&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to access current locale with React Intl?&lt;/h3&gt; &lt;p&gt;You can get the current locale in any component of your application using &lt;code&gt;injectIntl()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;

const MyComponent = ({ intl }) =&amp;gt; (
  &amp;lt;div&amp;gt;{`The current locale is ${intl.locale}`}&amp;lt;/div&amp;gt;
)

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;145&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to format date using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component will give you access to the &lt;code&gt;formatDate()&lt;/code&gt; method via the props in your component. The method is used internally by instances of &lt;code&gt;FormattedDate&lt;/code&gt; and it returns the string representation of the formatted date.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;

const stringDate = this.props.intl.formatDate(date, {
  year: &#39;numeric&#39;,
  month: &#39;numeric&#39;,
  day: &#39;numeric&#39;
})

const MyComponent = ({intl}) =&amp;gt; (
  &amp;lt;div&amp;gt;{`The formatted date is ${stringDate}`}&amp;lt;/div&amp;gt;
)

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;146&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Shallow Renderer in React testing?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Shallow rendering&lt;/em&gt; is useful for writing unit test cases in React. It lets you render a component &lt;em&gt;one level deep&lt;/em&gt; and assert facts about what its render method returns, without worrying about the behavior of child components, which are not instantiated or rendered.&lt;/p&gt; &lt;p&gt;For example, if you have the following component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;
      &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then you can assert as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ShallowRenderer from &#39;react-test-renderer/shallow&#39;

// in your test
const renderer = new ShallowRenderer()
renderer.render(&amp;lt;MyComponent /&amp;gt;)

const result = renderer.getRenderOutput()

expect(result.type).toBe(&#39;div&#39;)
expect(result.props.children).toEqual([
  &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;,
  &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;
])
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;147&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is &lt;code&gt;TestRenderer&lt;/code&gt; package in React?&lt;/h3&gt; &lt;p&gt;This package provides a renderer that can be used to render components to pure JavaScript objects, without depending on the DOM or a native mobile environment. This package makes it easy to grab a snapshot of the platform view hierarchy (similar to a DOM tree) rendered by a ReactDOM or React Native without using a browser or &lt;code&gt;jsdom&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import TestRenderer from &#39;react-test-renderer&#39;

const Link = ({page, children}) =&amp;gt; &amp;lt;a href={page}&amp;gt;{children}&amp;lt;/a&amp;gt;

const testRenderer = TestRenderer.create(
  &amp;lt;Link page={&#39;https://www.facebook.com/&#39;}&amp;gt;{&#39;Facebook&#39;}&amp;lt;/Link&amp;gt;
)

console.log(testRenderer.toJSON())
// {
//   type: &#39;a&#39;,
//   props: { href: &#39;https://www.facebook.com/&#39; },
//   children: [ &#39;Facebook&#39; ]
// }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;148&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of ReactTestUtils package?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;ReactTestUtils&lt;/em&gt; are provided in the &lt;code&gt;with-addons&lt;/code&gt; package and allow you to perform actions against a simulated DOM for the purpose of unit testing.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;149&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Jest?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Jest&lt;/em&gt; is a JavaScript unit testing framework created by Facebook based on Jasmine and provides automated mock creation and a &lt;code&gt;jsdom&lt;/code&gt; environment. It‚Äôs often used for testing components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;150&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of Jest over Jasmine?&lt;/h3&gt; &lt;p&gt;There are couple of advantages compared to Jasmine:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Automatically finds tests to execute in your source code.&lt;/li&gt; 
   &lt;li&gt;Automatically mocks dependencies when running your tests.&lt;/li&gt; 
   &lt;li&gt;Allows you to test asynchronous code synchronously.&lt;/li&gt; 
   &lt;li&gt;Runs your tests with a fake DOM implementation (via &lt;code&gt;jsdom&lt;/code&gt;) so that your tests can be run on the command line.&lt;/li&gt; 
   &lt;li&gt;Runs tests in parallel processes so that they finish sooner.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;151&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give a simple example of Jest test case&lt;/h3&gt; &lt;p&gt;Let‚Äôs write a test for a function that adds two numbers in &lt;code&gt;sum.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sum = (a, b) =&amp;gt; a + b

export default sum
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Create a file named &lt;code&gt;sum.test.js&lt;/code&gt; which contains actual test:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import sum from &#39;./sum&#39;

test(&#39;adds 1 + 2 to equal 3&#39;, () =&amp;gt; {
  expect(sum(1, 2)).toBe(3)
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then add the following section to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;scripts&quot;: {
    &quot;test&quot;: &quot;jest&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Finally, run &lt;code&gt;yarn test&lt;/code&gt; or &lt;code&gt;npm test&lt;/code&gt; and Jest will print a result:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ yarn test
PASS ./sum.test.js
‚úì adds 1 + 2 to equal 3 (2ms)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Redux&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;152&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is flux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flux&lt;/em&gt; is an &lt;em&gt;application design paradigm&lt;/em&gt; used as a replacement for the more traditional MVC pattern. It is not a framework or a library but a new kind of architecture that complements React and the concept of Unidirectional Data Flow. Facebook uses this pattern internally when working with React.&lt;/p&gt; &lt;p&gt;The workflow between dispatcher, stores and views components with distinct inputs and outputs as follows:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/flux.png&quot; alt=&quot;flux&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;153&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux&lt;/em&gt; is a predictable state container for JavaScript apps based on the &lt;em&gt;Flux design pattern&lt;/em&gt;. Redux can be used together with React, or with any other view library. It is tiny (about 2kB) and has no dependencies.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;154&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the core principles of Redux?&lt;/h3&gt; &lt;p&gt;Redux follows three fundamental principles:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Single source of truth:&lt;/strong&gt; The state of your whole application is stored in an object tree within a single store. The single state tree makes it easier to keep track of changes over time and debug or inspect the application.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;State is read-only:&lt;/strong&gt; The only way to change the state is to emit an action, an object describing what happened. This ensures that neither the views nor the network callbacks will ever write directly to the state.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Changes are made with pure functions:&lt;/strong&gt; To specify how the state tree is transformed by actions, you write reducers. Reducers are just pure functions that take the previous state and an action as parameters, and return the next state.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;155&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the downsides of Redux compared to Flux?&lt;/h3&gt; &lt;p&gt;Instead of saying downsides we can say that there are few compromises of using Redux over Flux. Those are as follows:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;You will need to learn to avoid mutations:&lt;/strong&gt; Flux is un-opinionated about mutating data, but Redux doesn‚Äôt like mutations and many packages complementary to Redux assume you never mutate the state. You can enforce this with dev-only packages like &lt;code&gt;redux-immutable-state-invariant&lt;/code&gt;, Immutable.js, or instructing your team to write non-mutating code.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;You‚Äôre going to have to carefully pick your packages:&lt;/strong&gt; While Flux explicitly doesn‚Äôt try to solve problems such as undo/redo, persistence, or forms, Redux has extension points such as middleware and store enhancers, and it has spawned a rich ecosystem.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;There is no nice Flow integration yet:&lt;/strong&gt; Flux currently lets you do very impressive static type checks which Redux doesn‚Äôt support yet.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;156&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;mapStateToProps()&lt;/code&gt; is a utility which helps your component get updated state (which is updated by some other components):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapStateToProps = (state) =&amp;gt; {
  return {
    todos: getVisibleTodos(state.todos, state.visibilityFilter)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;mapDispatchToProps()&lt;/code&gt; is a utility which will help your component to fire an action event (dispatching action which may cause change of application state):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; {
  return {
    onTodoClick: (id) =&amp;gt; {
      dispatch(toggleTodo(id))
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Recommend always using the ‚Äúobject shorthand‚Äù form for the &lt;code&gt;mapDispatchToProps&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Redux wrap it in another function that looks like (‚Ä¶args) =&amp;gt; dispatch(onTodoClick(‚Ä¶args)), and pass that wrapper function as a prop to your component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const mapDispatchToProps = ({
   onTodoClick
 })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;157&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I dispatch an action in reducer?&lt;/h3&gt; &lt;p&gt;Dispatching an action within a reducer is an &lt;strong&gt;anti-pattern&lt;/strong&gt;. Your reducer should be &lt;em&gt;without side effects&lt;/em&gt;, simply digesting the action payload and returning a new state object. Adding listeners and dispatching actions within the reducer can lead to chained actions and other side effects.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;158&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to access Redux store outside a component?&lt;/h3&gt; &lt;p&gt;You just need to export the store from the module where it created with &lt;code&gt;createStore()&lt;/code&gt;. Also, it shouldn‚Äôt pollute the global window object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;store = createStore(myReducer)

export default store
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;159&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the drawbacks of MVW pattern?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;DOM manipulation is very expensive which causes applications to behave slow and inefficient.&lt;/li&gt; 
   &lt;li&gt;Due to circular dependencies, a complicated model was created around models and views.&lt;/li&gt; 
   &lt;li&gt;Lot of data changes happens for collaborative applications(like Google Docs).&lt;/li&gt; 
   &lt;li&gt;No way to do undo (travel back in time) easily without adding so much extra code.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;160&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Are there any similarities between Redux and RxJS?&lt;/h3&gt; &lt;p&gt;These libraries are very different for very different purposes, but there are some vague similarities.&lt;/p&gt; &lt;p&gt;Redux is a tool for managing state throughout the application. It is usually used as an architecture for UIs. Think of it as an alternative to (half of) Angular. RxJS is a reactive programming library. It is usually used as a tool to accomplish asynchronous tasks in JavaScript. Think of it as an alternative to Promises. Redux uses the Reactive paradigm because the Store is reactive. The Store observes actions from a distance, and changes itself. RxJS also uses the Reactive paradigm, but instead of being an architecture, it gives you basic building blocks, Observables, to accomplish this pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;161&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to dispatch an action on load?&lt;/h3&gt; &lt;p&gt;You can dispatch an action in &lt;code&gt;componentDidMount()&lt;/code&gt; method and in &lt;code&gt;render()&lt;/code&gt; method you can verify the data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends Component {
  componentDidMount() {
    this.props.fetchData()
  }

  render() {
    return this.props.isLoaded
      ? &amp;lt;div&amp;gt;{&#39;Loaded&#39;}&amp;lt;/div&amp;gt;
      : &amp;lt;div&amp;gt;{&#39;Not Loaded&#39;}&amp;lt;/div&amp;gt;
  }
}

const mapStateToProps = (state) =&amp;gt; ({
  isLoaded: state.isLoaded
})

const mapDispatchToProps = { fetchData }

export default connect(mapStateToProps, mapDispatchToProps)(App)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;162&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;connect()&lt;/code&gt; from React Redux?&lt;/h3&gt; &lt;p&gt;You need to follow two steps to use your store in your container:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use &lt;code&gt;mapStateToProps()&lt;/code&gt;:&lt;/strong&gt; It maps the state variables from your store to the props that you specify.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect the above props to your container:&lt;/strong&gt; The object returned by the &lt;code&gt;mapStateToProps&lt;/code&gt; function is connected to the container. You can import &lt;code&gt;connect()&lt;/code&gt; from &lt;code&gt;react-redux&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import { connect } from &#39;react-redux&#39;

class App extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;{this.props.containerData}&amp;lt;/div&amp;gt;
  }
}

function mapStateToProps(state) {
  return { containerData: state.data }
}

export default connect(mapStateToProps)(App)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;163&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to reset state in Redux?&lt;/h3&gt; &lt;p&gt;You need to write a &lt;em&gt;root reducer&lt;/em&gt; in your application which delegate handling the action to the reducer generated by &lt;code&gt;combineReducers()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take &lt;code&gt;rootReducer()&lt;/code&gt; to return the initial state after &lt;code&gt;USER_LOGOUT&lt;/code&gt; action. As we know, reducers are supposed to return the initial state when they are called with &lt;code&gt;undefined&lt;/code&gt; as the first argument, no matter the action.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const appReducer = combineReducers({
  /* your app&#39;s top-level reducers */
})

const rootReducer = (state, action) =&amp;gt; {
  if (action.type === &#39;USER_LOGOUT&#39;) {
    state = undefined
  }

  return appReducer(state, action)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In case of using &lt;code&gt;redux-persist&lt;/code&gt;, you may also need to clean your storage. &lt;code&gt;redux-persist&lt;/code&gt; keeps a copy of your state in a storage engine. First, you need to import the appropriate storage engine and then, to parse the state before setting it to undefined and clean each storage state key.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const appReducer = combineReducers({
  /* your app&#39;s top-level reducers */
})

const rootReducer = (state, action) =&amp;gt; {
  if (action.type === &#39;USER_LOGOUT&#39;) {
    Object.keys(state).forEach(key =&amp;gt; {
      storage.removeItem(`persist:${key}`)
    })

    state = undefined
  }

  return appReducer(state, action)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;164&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Whats the purpose of &lt;code&gt;at&lt;/code&gt; symbol in the Redux connect decorator?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;@&lt;/strong&gt; symbol is in fact a JavaScript expression used to signify decorators. &lt;em&gt;Decorators&lt;/em&gt; make it possible to annotate and modify classes and properties at design time.&lt;/p&gt; &lt;p&gt;Let‚Äôs take an example setting up Redux without and with a decorator.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Without decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import * as actionCreators from &#39;./actionCreators&#39;
import { bindActionCreators } from &#39;redux&#39;
import { connect } from &#39;react-redux&#39;

function mapStateToProps(state) {
  return { todos: state.todos }
}

function mapDispatchToProps(dispatch) {
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

class MyApp extends React.Component {
  // ...define your main app here
}

export default connect(mapStateToProps, mapDispatchToProps)(MyApp)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;With decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import * as actionCreators from &#39;./actionCreators&#39;
import { bindActionCreators } from &#39;redux&#39;
import { connect } from &#39;react-redux&#39;

function mapStateToProps(state) {
  return { todos: state.todos }
}

function mapDispatchToProps(dispatch) {
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

@connect(mapStateToProps, mapDispatchToProps)
export default class MyApp extends React.Component {
  // ...define your main app here
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;The above examples are almost similar except the usage of decorator. The decorator syntax isn‚Äôt built into any JavaScript runtimes yet, and is still experimental and subject to change. You can use babel for the decorators support.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;165&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React context and React Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;strong&gt;Context&lt;/strong&gt; in your application directly and is going to be great for passing down data to deeply nested components which what it was designed for.&lt;/p&gt; &lt;p&gt;Whereas &lt;strong&gt;Redux&lt;/strong&gt; is much more powerful and provides a large number of features that the Context API doesn‚Äôt provide. Also, React Redux uses context internally but it doesn‚Äôt expose this fact in the public API.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;166&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are Redux state functions called reducers?&lt;/h3&gt; &lt;p&gt;Reducers always return the accumulation of the state (based on all previous and current actions). Therefore, they act as a reducer of state. Each time a Redux reducer is called, the state and action are passed as parameters. This state is then reduced (or accumulated) based on the action, and then the next state is returned. You could &lt;em&gt;reduce&lt;/em&gt; a collection of actions and an initial state (of the store) on which to perform these actions to get the resulting final state.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;167&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to make AJAX request in Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;redux-thunk&lt;/code&gt; middleware which allows you to define async actions.&lt;/p&gt; &lt;p&gt;Let‚Äôs take an example of fetching specific account as an AJAX call using &lt;em&gt;fetch API&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export function fetchAccount(id) {
  return dispatch =&amp;gt; {
    dispatch(setLoadingAccountState()) // Show a loading spinner
    fetch(`/account/${id}`, (response) =&amp;gt; {
      dispatch(doneFetchingAccount()) // Hide loading spinner
      if (response.status === 200) {
        dispatch(setAccount(response.json)) // Use a normal function to set the received state
      } else {
        dispatch(someError)
      }
    })
  }
}

function setAccount(data) {
 return { type: &#39;SET_Account&#39;, data: data }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;168&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Should I keep all component‚Äôs state in Redux store?&lt;/h3&gt; &lt;p&gt;Keep your data in the Redux store, and the UI related state internally in the component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;169&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the proper way to access Redux store?&lt;/h3&gt; &lt;p&gt;The best way to access your store in a component is to use the &lt;code&gt;connect()&lt;/code&gt; function, that creates a new component that wraps around your existing one. This pattern is called &lt;em&gt;Higher-Order Components&lt;/em&gt;, and is generally the preferred way of extending a component‚Äôs functionality in React. This allows you to map state and action creators to your component, and have them passed in automatically as your store updates.&lt;/p&gt; &lt;p&gt;Let‚Äôs take an example of &lt;code&gt;&amp;lt;FilterLink&amp;gt;&lt;/code&gt; component using connect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { connect } from &#39;react-redux&#39;
import { setVisibilityFilter } from &#39;../actions&#39;
import Link from &#39;../components/Link&#39;

const mapStateToProps = (state, ownProps) =&amp;gt; ({
  active: ownProps.filter === state.visibilityFilter
})

const mapDispatchToProps = (dispatch, ownProps) =&amp;gt; ({
  onClick: () =&amp;gt; dispatch(setVisibilityFilter(ownProps.filter))
})

const FilterLink = connect(
  mapStateToProps,
  mapDispatchToProps
)(Link)

export default FilterLink
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Due to it having quite a few performance optimizations and generally being less likely to cause bugs, the Redux developers almost always recommend using &lt;code&gt;connect()&lt;/code&gt; over accessing the store directly (using context API).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent {
  someMethod() {
    doSomethingWith(this.context.store)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;170&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between component and container in React Redux?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Component&lt;/strong&gt; is a class or function component that describes the presentational part of your application.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Container&lt;/strong&gt; is an informal term for a component that is connected to a Redux store. Containers &lt;em&gt;subscribe&lt;/em&gt; to Redux state updates and &lt;em&gt;dispatch&lt;/em&gt; actions, and they usually don‚Äôt render DOM elements; they delegate rendering to presentational child components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;171&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the constants in Redux?&lt;/h3&gt; &lt;p&gt;Constants allows you to easily find all usages of that specific functionality across the project when you use an IDE. It also prevents you from introducing silly bugs caused by typos ‚Äì in which case, you will get a &lt;code&gt;ReferenceError&lt;/code&gt; immediately.&lt;/p&gt; &lt;p&gt;Normally we will save them in a single file (&lt;code&gt;constants.js&lt;/code&gt; or &lt;code&gt;actionTypes.js&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export const ADD_TODO = &#39;ADD_TODO&#39;
export const DELETE_TODO = &#39;DELETE_TODO&#39;
export const EDIT_TODO = &#39;EDIT_TODO&#39;
export const COMPLETE_TODO = &#39;COMPLETE_TODO&#39;
export const COMPLETE_ALL = &#39;COMPLETE_ALL&#39;
export const CLEAR_COMPLETED = &#39;CLEAR_COMPLETED&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In Redux, you use them in two places:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;During action creation:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let‚Äôs take &lt;code&gt;actions.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;;

export function addTodo(text) {
  return { type: ADD_TODO, text }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;In reducers:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let‚Äôs create &lt;code&gt;reducer.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;

export default (state = [], action) =&amp;gt; {
  switch (action.type) {
    case ADD_TODO:
      return [
        ...state,
        {
          text: action.text,
          completed: false
        }
      ];
    default:
      return state
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;172&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to write &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are a few ways of binding &lt;em&gt;action creators&lt;/em&gt; to &lt;code&gt;dispatch()&lt;/code&gt; in &lt;code&gt;mapDispatchToProps()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({
 action: () =&amp;gt; dispatch(action())
})
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({
 action: bindActionCreators(action, dispatch)
})
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = { action }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The third option is just a shorthand for the first one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;173&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of the &lt;code&gt;ownProps&lt;/code&gt; parameter in &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;If the &lt;code&gt;ownProps&lt;/code&gt; parameter is specified, React Redux will pass the props that were passed to the component into your &lt;em&gt;connect&lt;/em&gt; functions. So, if you use a connected component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ConnectedComponent from &#39;./containers/ConnectedComponent&#39;;

&amp;lt;ConnectedComponent user={&#39;john&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;ownProps&lt;/code&gt; inside your &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt; functions will be an object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{ user: &#39;john&#39; }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can use this object to decide what to return from those functions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;174&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to structure Redux top level directories?&lt;/h3&gt; &lt;p&gt;Most of the applications has several top-level directories as below:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Components&lt;/strong&gt;: Used for &lt;em&gt;dumb&lt;/em&gt; components unaware of Redux.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt;: Used for &lt;em&gt;smart&lt;/em&gt; components connected to Redux.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt;: Used for all action creators, where file names correspond to part of the app.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Reducers&lt;/strong&gt;: Used for all reducers, where files name correspond to state key.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt;: Used for store initialization.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;This structure works well for small and medium size apps.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;175&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;redux-saga&lt;/code&gt; is a library that aims to make side effects (asynchronous things like data fetching and impure things like accessing the browser cache) in React/Redux applications easier and better.&lt;/p&gt; &lt;p&gt;It is available in NPM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install --save redux-saga
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;176&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the mental model of redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Saga&lt;/em&gt; is like a separate thread in your application, that‚Äôs solely responsible for side effects. &lt;code&gt;redux-saga&lt;/code&gt; is a redux &lt;em&gt;middleware&lt;/em&gt;, which means this thread can be started, paused and cancelled from the main application with normal Redux actions, it has access to the full Redux application state and it can dispatch Redux actions as well.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;177&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; in redux-saga?&lt;/h3&gt; &lt;p&gt;Both &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; are effect creator functions. &lt;code&gt;call()&lt;/code&gt; function is used to create effect description, which instructs middleware to call the promise. &lt;code&gt;put()&lt;/code&gt; function creates an effect, which instructs middleware to dispatch an action to the store.&lt;/p&gt; &lt;p&gt;Let‚Äôs take example of how these effects work for fetching particular user data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* fetchUserSaga(action) {
  // `call` function accepts rest arguments, which will be passed to `api.fetchUser` function.
  // Instructing middleware to call promise, it resolved value will be assigned to `userData` variable
  const userData = yield call(api.fetchUser, action.userId)

  // Instructing middleware to dispatch corresponding action.
  yield put({
    type: &#39;FETCH_USER_SUCCESS&#39;,
    userData
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;178&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux Thunk?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Thunk&lt;/em&gt; middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods &lt;code&gt;dispatch()&lt;/code&gt; and &lt;code&gt;getState()&lt;/code&gt; as parameters.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;179&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;redux-saga&lt;/code&gt; and &lt;code&gt;redux-thunk&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;Redux Thunk&lt;/em&gt; and &lt;em&gt;Redux Saga&lt;/em&gt; take care of dealing with side effects. In most of the scenarios, Thunk uses &lt;em&gt;Promises&lt;/em&gt; to deal with them, whereas Saga uses &lt;em&gt;Generators&lt;/em&gt;. Thunk is simple to use and Promises are familiar to many developers, Sagas/Generators are more powerful but you will need to learn them. But both middleware can coexist, so you can start with Thunks and introduce Sagas when/if you need them.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;180&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux DevTools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux DevTools&lt;/em&gt; is a live-editing time travel environment for Redux with hot reloading, action replay, and customizable UI. If you don‚Äôt want to bother with installing Redux DevTools and integrating it into your project, consider using Redux DevTools Extension for Chrome and Firefox.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;181&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the features of Redux DevTools?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux DevTools are below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Lets you inspect every state and action payload.&lt;/li&gt; 
   &lt;li&gt;Lets you go back in time by &lt;em&gt;cancelling&lt;/em&gt; actions.&lt;/li&gt; 
   &lt;li&gt;If you change the reducer code, each &lt;em&gt;staged&lt;/em&gt; action will be re-evaluated.&lt;/li&gt; 
   &lt;li&gt;If the reducers throw, you will see during which action this happened, and what the error was.&lt;/li&gt; 
   &lt;li&gt;With &lt;code&gt;persistState()&lt;/code&gt; store enhancer, you can persist debug sessions across page reloads.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;182&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Redux selectors and why to use them?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Selectors&lt;/em&gt; are functions that take Redux state as an argument and return some data to pass to the component.&lt;/p&gt; &lt;p&gt;For example, to get user details from the state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const getUserData = state =&amp;gt; state.user.data
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These selectors have two main benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The selector can compute derived data, allowing Redux to store the minimal possible state&lt;/li&gt; 
   &lt;li&gt;The selector is not recomputed unless one of its arguments changes&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;183&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux Form?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Form&lt;/em&gt; works with React and Redux to enable a form in React to use Redux to store all of its state. Redux Form can be used with raw HTML5 inputs, but it also works very well with common UI frameworks like Material UI, React Widgets and React Bootstrap.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;184&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of Redux Form?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux Form are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Field values persistence via Redux store.&lt;/li&gt; 
   &lt;li&gt;Validation (sync/async) and submission.&lt;/li&gt; 
   &lt;li&gt;Formatting, parsing and normalization of field values.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;185&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add multiple middlewares to Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;applyMiddleware()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, you can add &lt;code&gt;redux-thunk&lt;/code&gt; and &lt;code&gt;logger&lt;/code&gt; passing them as arguments to &lt;code&gt;applyMiddleware()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createStore, applyMiddleware } from &#39;redux&#39;
const createStoreWithMiddleware = applyMiddleware(ReduxThunk, logger)(createStore)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;186&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to set initial state in Redux?&lt;/h3&gt; &lt;p&gt;You need to pass initial state as second argument to createStore:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const rootReducer = combineReducers({
  todos: todos,
  visibilityFilter: visibilityFilter
})

const initialState = {
  todos: [{ id: 123, name: &#39;example&#39;, completed: false }]
}

const store = createStore(
  rootReducer,
  initialState
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;187&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Relay is different from Redux?&lt;/h3&gt; &lt;p&gt;Relay is similar to Redux in that they both use a single store. The main difference is that relay only manages state originated from the server, and all access to the state is used via &lt;em&gt;GraphQL&lt;/em&gt; queries (for reading data) and mutations (for changing data). Relay caches the data for you and optimizes data fetching for you, by fetching only changed data and nothing more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an action in Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Actions&lt;/em&gt; are plain JavaScript objects or payloads of information that send data from your application to your store. They are the only source of information for the store. Actions must have a type property that indicates the type of action being performed.&lt;/p&gt; &lt;p&gt;For example, let‚Äôs take an action which represents adding a new todo item:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{
  type: ADD_TODO,
  text: &#39;Add todo item&#39;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;React Native&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;188&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React Native and React?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; is a JavaScript library, supporting both front end web and being run on the server, for building user interfaces and web applications.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;React Native&lt;/strong&gt; is a mobile framework that compiles to native app components, allowing you to build native mobile applications (iOS, Android, and Windows) in JavaScript that allows you to use React to build your components, and implements React under the hood.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;189&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to test React Native apps?&lt;/h3&gt; &lt;p&gt;React Native can be tested only in mobile simulators like iOS and Android. You can run the app in your mobile using expo app (https://expo.io) Where it syncs using QR code, your mobile and computer should be in same wireless network.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;190&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to do logging in React Native?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;console.warn&lt;/code&gt;, etc. As of React Native v0.29 you can simply run the following to see logs in the console:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ react-native log-ios
$ react-native log-android
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;191&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to debug your React Native?&lt;/h3&gt; &lt;p&gt;Follow the below steps to debug React Native app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Run your application in the iOS simulator.&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Command + D&lt;/code&gt; and a webpage should open up at &lt;code&gt;http://localhost:8081/debugger-ui&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Enable &lt;em&gt;Pause On Caught Exceptions&lt;/em&gt; for a better debugging experience.&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Command + Option + I&lt;/code&gt; to open the Chrome Developer tools, or open it via &lt;code&gt;View&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer Tools&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;You should now be able to debug as you normally would.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React supported libraries &amp;amp; Integration&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;192&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is reselect and how it works?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Reselect&lt;/em&gt; is a &lt;strong&gt;selector library&lt;/strong&gt; (for Redux) which uses &lt;em&gt;memoization&lt;/em&gt; concept. It was originally written to compute derived data from Redux-like applications state, but it can‚Äôt be tied to any architecture or library.&lt;/p&gt; &lt;p&gt;Reselect keeps a copy of the last inputs/outputs of the last call, and recomputes the result only if one of the inputs changes. If the the same inputs are provided twice in a row, Reselect returns the cached output. It‚Äôs memoization and cache are fully customizable.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;193&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Flow?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flow&lt;/em&gt; is a &lt;em&gt;static type checker&lt;/em&gt; designed to find type errors in JavaScript. Flow types can express much more fine-grained distinctions than traditional type systems. For example, Flow helps you catch errors involving &lt;code&gt;null&lt;/code&gt;, unlike most type systems.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;194&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Flow and PropTypes?&lt;/h3&gt; &lt;p&gt;Flow is a &lt;em&gt;static analysis tool&lt;/em&gt; (static checker) which uses a superset of the language, allowing you to add type annotations to all of your code and catch an entire class of bugs at compile time.&lt;/p&gt; &lt;p&gt;PropTypes is a &lt;em&gt;basic type checker&lt;/em&gt; (runtime checker) which has been patched onto React. It can‚Äôt check anything other than the types of the props being passed to a given component. If you want more flexible typechecking for your entire project Flow/TypeScript are appropriate choices.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;195&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use Font Awesome icons in React?&lt;/h3&gt; &lt;p&gt;The below steps followed to include Font Awesome in React:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Install &lt;code&gt;font-awesome&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install --save font-awesome
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Import &lt;code&gt;font-awesome&lt;/code&gt; in your &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;font-awesome/css/font-awesome.min.css&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Add Font Awesome classes in &lt;code&gt;className&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  return &amp;lt;div&amp;gt;&amp;lt;i className={&#39;fa fa-spinner&#39;} /&amp;gt;&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;196&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Dev Tools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Developer Tools&lt;/em&gt; let you inspect the component hierarchy, including component props and state. It exists both as a browser extension (for Chrome and Firefox), and as a standalone app (works with other environments including Safari, IE, and React Native).&lt;/p&gt; &lt;p&gt;The official extensions available for different browsers or environments.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Chrome extension&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Firefox extension&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Standalone app&lt;/strong&gt; (Safari, React Native, etc)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;197&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is DevTools not loading in Chrome for local files?&lt;/h3&gt; &lt;p&gt;If you opened a local HTML file in your browser (&lt;code&gt;file://...&lt;/code&gt;) then you must first open &lt;em&gt;Chrome Extensions&lt;/em&gt; and check &lt;code&gt;Allow access to file URLs&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;198&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use Polymer in React?&lt;/h3&gt; &lt;p&gt;You need to follow below steps to use Polymer in React,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create a Polymer element:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;../../bower_components/polymer/polymer.html&#39; /&amp;gt;
Polymer({
  is: &#39;calender-element&#39;,
  ready: function() {
    this.textContent = &#39;I am a calender&#39;
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Create the Polymer component HTML tag by importing it in a HTML document, e.g. import it in the &lt;code&gt;index.html&lt;/code&gt; of your React application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;./src/polymer-components/calender-element.html&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Use that element in the JSX file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;

class MyComponent extends React.Component {
  render() {
    return (
      &amp;lt;calender-element /&amp;gt;
    )
  }
}

export default MyComponent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;199&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of React over Vue.js?&lt;/h3&gt; &lt;p&gt;React has the following advantages over Vue.js:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Gives more flexibility in large apps developing.&lt;/li&gt; 
   &lt;li&gt;Easier to test.&lt;/li&gt; 
   &lt;li&gt;Suitable for mobile apps creating.&lt;/li&gt; 
   &lt;li&gt;More information and solutions available.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of advantages are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;200&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React and Angular?&lt;/h3&gt; &lt;p&gt;Let‚Äôs see the difference between React and Angular in a table format.&lt;/p&gt; &lt;p&gt;| React | Angular | | ‚Äî‚Äì | ‚Äî‚Äì‚Äì | | React is a library and has only the View layer | Angular is a framework and has complete MVC functionality | | React handles rendering on the server side | AngularJS renders only on the client side but Angular 2 and above renders on the server side | | React uses JSX that looks like HTML in JS which can be confusing | Angular follows the template approach for HTML, which makes code shorter and easy to understand | | React Native, which is a React type to build mobile applications are faster and more stable | Ionic, Angular‚Äôs mobile native app is relatively less stable and slower | | In React, data flows only in one way and hence debugging is easy | In Angular, data flows both way i.e it has two-way data binding between children and parent and hence debugging is often difficult |&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of differences are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;201&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why React tab is not showing up in DevTools?&lt;/h3&gt; &lt;p&gt;When the page loads, &lt;em&gt;React DevTools&lt;/em&gt; sets a global named &lt;code&gt;__REACT_DEVTOOLS_GLOBAL_HOOK__&lt;/code&gt;, then React communicates with that hook during initialization. If the website is not using React or if React fails to communicate with DevTools then it won‚Äôt show up the tab.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;202&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Styled Components?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;styled-components&lt;/code&gt; is a JavaScript library for styling React applications. It removes the mapping between styles and components, and lets you write actual CSS augmented with JavaScript.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;203&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example of Styled Components?&lt;/h3&gt; &lt;p&gt;Lets create &lt;code&gt;&amp;lt;Title&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Wrapper&amp;gt;&lt;/code&gt; components with specific styles for each.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import styled from &#39;styled-components&#39;

// Create a &amp;lt;Title&amp;gt; component that renders an &amp;lt;h1&amp;gt; which is centered, red and sized at 1.5em
const Title = styled.h1`
  font-size: 1.5em;
  text-align: center;
  color: palevioletred;
`

// Create a &amp;lt;Wrapper&amp;gt; component that renders a &amp;lt;section&amp;gt; with some padding and a papayawhip background
const Wrapper = styled.section`
  padding: 4em;
  background: papayawhip;
`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These two variables, &lt;code&gt;Title&lt;/code&gt; and &lt;code&gt;Wrapper&lt;/code&gt;, are now components that you can render just like any other react component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Wrapper&amp;gt;
  &amp;lt;Title&amp;gt;{&#39;Lets start first styled component!&#39;}&amp;lt;/Title&amp;gt;
&amp;lt;/Wrapper&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;204&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Relay?&lt;/h3&gt; &lt;p&gt;Relay is a JavaScript framework for providing a data layer and client-server communication to web applications using the React view layer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;205&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use TypeScript in &lt;code&gt;create-react-app&lt;/code&gt; application?&lt;/h3&gt; &lt;p&gt;Starting from react-scripts@2.1.0 or higher, there is a built-in support for typescript. i.e, &lt;code&gt;create-react-app&lt;/code&gt; now supports typescript natively. You can just pass &lt;code&gt;--typescript&lt;/code&gt; option as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-react-app my-app --typescript

# or

yarn create react-app my-app --typescript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But for lower versions of react scripts, just supply &lt;code&gt;--scripts-version&lt;/code&gt; option as &lt;code&gt;react-scripts-ts&lt;/code&gt; while you create a new project. &lt;code&gt;react-scripts-ts&lt;/code&gt; is a set of adjustments to take the standard &lt;code&gt;create-react-app&lt;/code&gt; project pipeline and bring TypeScript into the mix.&lt;/p&gt; &lt;p&gt;Now the project layout should look like the following:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;my-app/
‚îú‚îÄ .gitignore
‚îú‚îÄ images.d.ts
‚îú‚îÄ node_modules/
‚îú‚îÄ public/
‚îú‚îÄ src/
‚îÇ  ‚îî‚îÄ ...
‚îú‚îÄ package.json
‚îú‚îÄ tsconfig.json
‚îú‚îÄ tsconfig.prod.json
‚îú‚îÄ tsconfig.test.json
‚îî‚îÄ tslint.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Miscellaneous&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;206&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of Reselect library?&lt;/h3&gt; &lt;p&gt;Let‚Äôs see the main features of Reselect library,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Selectors can compute derived data, allowing Redux to store the minimal possible state.&lt;/li&gt; 
   &lt;li&gt;Selectors are efficient. A selector is not recomputed unless one of its arguments changes.&lt;/li&gt; 
   &lt;li&gt;Selectors are composable. They can be used as input to other selectors.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h4&gt;Give an example of Reselect usage?&lt;/h4&gt; &lt;p&gt;Let‚Äôs take calculations and different amounts of a shipment order with the simplified usage of Reselect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createSelector } from &#39;reselect&#39;

const shopItemsSelector = state =&amp;gt; state.shop.items
const taxPercentSelector = state =&amp;gt; state.shop.taxPercent

const subtotalSelector = createSelector(
  shopItemsSelector,
  items =&amp;gt; items.reduce((acc, item) =&amp;gt; acc + item.value, 0)
)

const taxSelector = createSelector(
  subtotalSelector,
  taxPercentSelector,
  (subtotal, taxPercent) =&amp;gt; subtotal * (taxPercent / 100)
)

export const totalSelector = createSelector(
  subtotalSelector,
  taxSelector,
  (subtotal, tax) =&amp;gt; ({ total: subtotal + tax })
)

let exampleState = {
  shop: {
    taxPercent: 8,
    items: [
      { name: &#39;apple&#39;, value: 1.20 },
      { name: &#39;orange&#39;, value: 0.95 },
    ]
  }
}

console.log(subtotalSelector(exampleState)) // 2.15
console.log(taxSelector(exampleState))      // 0.172
console.log(totalSelector(exampleState))    // { total: 2.322 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;209&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Does the statics object work with ES6 classes in React?&lt;/h3&gt; &lt;p&gt;No, &lt;code&gt;statics&lt;/code&gt; only works with &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;someComponent= React.createClass({
  statics: {
    someMethod: function() {
      // ..
    }
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can write statics inside ES6+ classes as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
  static propTypes = {
    // ...
  }

  static someMethod() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or writing them outside class as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
   ....
}

Component.propTypes = {...}
Component.someMethod = function(){....}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;210&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can Redux only be used with React?&lt;/h3&gt; &lt;p&gt;Redux can be used as a data store for any UI layer. The most common usage is with React and React Native, but there are bindings available for Angular, Angular 2, Vue, Mithril, and more. Redux simply provides a subscription mechanism which can be used by any other code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;211&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do you need to have a particular build tool to use Redux?&lt;/h3&gt; &lt;p&gt;Redux is originally written in ES6 and transpiled for production into ES5 with Webpack and Babel. You should be able to use it regardless of your JavaScript build process. Redux also offers a UMD build that can be used directly without any build process at all.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;212&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Redux Form &lt;code&gt;initialValues&lt;/code&gt; get updated from state?&lt;/h3&gt; &lt;p&gt;You need to add &lt;code&gt;enableReinitialize : true&lt;/code&gt; setting.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const InitializeFromStateForm = reduxForm({
  form: &#39;initializeFromState&#39;,
  enableReinitialize : true
})(UserEdit)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your &lt;code&gt;initialValues&lt;/code&gt; prop gets updated, your form will update too.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;213&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How React PropTypes allow different types for one prop?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;oneOfType()&lt;/code&gt; method of &lt;code&gt;PropTypes&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, the height property can be defined with either &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; type as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Component.PropTypes = {
  size: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number
  ])
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;214&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I import an SVG file as react component?&lt;/h3&gt; &lt;p&gt;You can import SVG directly as component instead of loading it as a file. This feature is available with &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { ReactComponent as Logo } from &#39;./logo.svg&#39;

const App = () =&amp;gt; (
  &amp;lt;div&amp;gt;
    {/* Logo is an actual react component */}
    &amp;lt;Logo /&amp;gt;
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Don‚Äôt forget about the curly braces in the import.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;215&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are inline ref callbacks or functions not recommended?&lt;/h3&gt; &lt;p&gt;If the ref callback is defined as an inline function, it will get called twice during updates, first with null and then again with the DOM element. This is because a new instance of the function is created with each render, so React needs to clear the old ref and set up the new one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserForm extends Component {
  handleSubmit = () =&amp;gt; {
    console.log(&quot;Input Value is: &quot;, this.input.value)
  }


  render () {
   return (
     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
       &amp;lt;input
         type=&#39;text&#39;
         ref={(input) =&amp;gt; this.input = input} /&amp;gt; // Access DOM input in handle submit
       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;
     &amp;lt;/form&amp;gt;
   )
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But our expectation is for the ref callback to get called once, when the component mounts. One quick fix is to use the ES7 class property syntax to define the function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserForm extends Component {
 handleSubmit = () =&amp;gt; {
   console.log(&quot;Input Value is: &quot;, this.input.value)
 }

 setSearchInput = (input) =&amp;gt; {
   this.input = input
 }

 render () {
   return (
     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
       &amp;lt;input
         type=&#39;text&#39;
         ref={this.setSearchInput} /&amp;gt; // Access DOM input in handle submit
       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;
     &amp;lt;/form&amp;gt;
   )
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;**Note:** In React v16.3,
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;216&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is render hijacking in react?&lt;/h3&gt; &lt;p&gt;The concept of render hijacking is the ability to control what a component will output from another component. It actually means that you decorate your component by wrapping it into a Higher-Order component. By wrapping you can inject additional props or make other changes, which can cause changing logic of rendering. It does not actually enables hijacking, but by using HOC you make your component behave in different way.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;217&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are HOC factory implementations?&lt;/h3&gt; &lt;p&gt;There are two main ways of implementing HOCs in React.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Props Proxy (PP) and&lt;/li&gt; 
   &lt;li&gt;Inheritance Inversion (II).&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;But they follow different approaches for manipulating the &lt;em&gt;WrappedComponent&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Props Proxy&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the render method of the HOC returns a React Element of the type of the WrappedComponent. We also pass through the props that the HOC receives, hence the name &lt;strong&gt;Props Proxy&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;
function ppHOC(WrappedComponent) {
 return class PP extends React.Component {
   render() {
     return &amp;lt;WrappedComponent {...this.props}/&amp;gt;
   }
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Inheritance Inversion&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the returned HOC class (Enhancer) extends the WrappedComponent. It is called Inheritance Inversion because instead of the WrappedComponent extending some Enhancer class, it is passively extended by the Enhancer. In this way the relationship between them seems &lt;strong&gt;inverse&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function iiHOC(WrappedComponent) {
 return class Enhancer extends WrappedComponent {
   render() {
     return super.render()
   }
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;218&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass numbers to React component?&lt;/h3&gt; &lt;p&gt;You should be passing the numbers via curly braces({}) where as strings in quotes&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;   React.render(&amp;lt;User age={30} department={&quot;IT&quot;} /&amp;gt;, document.getElementById(&#39;container&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;219&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/h3&gt; &lt;p&gt;It is up to developer decision. i.e, It is developer job to determine what kinds of state make up your application, and where each piece of state should live. Some users prefer to keep every single piece of data in Redux, to maintain a fully serializable and controlled version of their application at all times. Others prefer to keep non-critical or UI state, such as ‚Äúis this dropdown currently open‚Äù, inside a component‚Äôs internal state.&lt;/p&gt; &lt;p&gt;Below are the thumb rules to determine what kind of data should be put into Redux&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Do other parts of the application care about this data?&lt;/li&gt; 
   &lt;li&gt;Do you need to be able to create further derived data based on this original data?&lt;/li&gt; 
   &lt;li&gt;Is the same data being used to drive multiple components?&lt;/li&gt; 
   &lt;li&gt;Is there value to you in being able to restore this state to a given point in time (ie, time travel debugging)?&lt;/li&gt; 
   &lt;li&gt;Do you want to cache the data (i.e, use what‚Äôs in state if it‚Äôs already there instead of re-requesting it)?&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;220&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of registerServiceWorker in React?&lt;/h3&gt; &lt;p&gt;React creates a service worker for you without any configuration by default. The service worker is a web API that helps you cache your assets and other files so that when the user is offline or on slow network, he/she can still see results on the screen, as such, it helps you build a better user experience, that‚Äôs what you should know about service worker‚Äôs for now. It‚Äôs all about adding offline capabilities to your site.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;   import React from &#39;react&#39;;
   import ReactDOM from &#39;react-dom&#39;;
   import App from &#39;./App&#39;;
   import registerServiceWorker from &#39;./registerServiceWorker&#39;;

   ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;root&#39;));
   registerServiceWorker();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;221&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React memo function?&lt;/h3&gt; &lt;p&gt;Class components can be restricted from rendering when their input props are the same using &lt;strong&gt;PureComponent or shouldComponentUpdate&lt;/strong&gt;. Now you can do the same with function components by wrapping them in &lt;strong&gt;React.memo&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = React.memo(function MyComponent(props) {
 /* only rerenders if props change */
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;222&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React lazy function?&lt;/h3&gt; The &lt;code&gt;React.lazy&lt;/code&gt; function lets you render an dynamic import as a regular component. It will automatically load the bundle containing the OtherComponent when the component gets rendered. This must return a Promise which resolves to a module with a default export containing a React component. &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));

function MyComponent() {
 return (
   &amp;lt;div&amp;gt;
     &amp;lt;OtherComponent /&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; React.lazy and Suspense is not yet available for server-side rendering. If you want to do code-splitting in a server rendered app, we still recommend React Loadable.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;223&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent unnecessary updates using setState?&lt;/h3&gt; &lt;p&gt;You can compare current value of the state with an existing state value and decide whether to rerender the page or not. If the values are same then you need to return &lt;strong&gt;null&lt;/strong&gt; to stop re-rendering otherwise return the latest state value.&lt;/p&gt; &lt;p&gt;For example, the user profile information is conditionally rendered as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;getUserProfile = user =&amp;gt; {
  const latestAddress = user.address;
  this.setState(state =&amp;gt; {
    if (state.address === latestAddress) {
      return null;
    } else {
      return { title: latestAddress };
    }
  });
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;224&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Arrays&lt;/strong&gt;: Unlike older releases, you don‚Äôt need to make sure &lt;strong&gt;render&lt;/strong&gt; method return a single element in React16. You are able to return multiple sibling elements without a wrapping element by returning an array.&lt;/p&gt; &lt;p&gt;For example, let us take the below list of developers,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ReactJSDevs = () =&amp;gt; {
  return [
    &amp;lt;li key=&quot;1&quot;&amp;gt;John&amp;lt;/li&amp;gt;,
    &amp;lt;li key=&quot;2&quot;&amp;gt;Jackie&amp;lt;/li&amp;gt;,
    &amp;lt;li key=&quot;3&quot;&amp;gt;Jordan&amp;lt;/li&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also merge this array of items in another array component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const JSDevs = () =&amp;gt; {
  return (
    &amp;lt;ul&amp;gt;
      &amp;lt;li&amp;gt;Brad&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;Brodge&amp;lt;/li&amp;gt;
      &amp;lt;ReactJSDevs/&amp;gt;
      &amp;lt;li&amp;gt;Brandon&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Strings and Numbers:&lt;/strong&gt; You can also return string and number type from the render method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
 return &#39;Welcome to ReactJS questions&#39;;
}
// Number
render() {
 return 2018;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;225&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use class field declarations syntax in React classes?&lt;/h3&gt; &lt;p&gt;React Class Components can be made much more concise using the class field declarations. You can initialize local state without using the constructor and declare class methods by using arrow functions without the extra need to bind them.&lt;/p&gt; &lt;p&gt;Let‚Äôs take a counter example to demonstrate class field declarations for state without using constructor and methods without binding,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Counter extends Component {
  state = { value: 0 };

  handleIncrement = () =&amp;gt; {
    this.setState(prevState =&amp;gt; ({
      value: prevState.value + 1
    }));
  };

  handleDecrement = () =&amp;gt; {
    this.setState(prevState =&amp;gt; ({
      value: prevState.value - 1
    }));
  };

  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.state.value}

        &amp;lt;button onClick={this.handleIncrement}&amp;gt;+&amp;lt;/button&amp;gt;
        &amp;lt;button onClick={this.handleDecrement}&amp;gt;-&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;226&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are hooks?&lt;/h3&gt; &lt;p&gt;Hooks is a new feature(React 16.8) that lets you use state and other React features without writing a class.&lt;/p&gt; &lt;p&gt;Let‚Äôs see an example of useState hook example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { useState } from &#39;react&#39;;

function Example() {
  // Declare a new state variable, which we&#39;ll call &quot;count&quot;
  const [count, setCount] = useState(0);

  return (
    &amp;lt;div&amp;gt;
      &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;
        Click me
      &amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;227&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the rules needs to follow for hooks?&lt;/h3&gt; &lt;p&gt;You need to follow two rules in order to use hooks,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Call Hooks only at the top level of your react functions. i.e, You shouldn‚Äôt call Hooks inside loops, conditions, or nested functions. This will ensure that Hooks are called in the same order each time a component renders and it preserves the state of Hooks between multiple useState and useEffect calls.&lt;/li&gt; 
   &lt;li&gt;Call Hooks from React Functions only. i.e, You shouldn‚Äôt call Hooks from regular JavaScript functions.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;228&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to ensure hooks followed the rules in your project?&lt;/h3&gt; React team released an ESLint plugin called &lt;strong&gt;eslint-plugin-react-hooks&lt;/strong&gt; that enforces these two rules. You can add this plugin to your project using the below command, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install eslint-plugin-react-hooks@next
&lt;/code&gt;&lt;/pre&gt; And apply the below config in your ESLint config file, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Your ESLint configuration
{
  &quot;plugins&quot;: [
    // ...
    &quot;react-hooks&quot;
  ],
  &quot;rules&quot;: {
    // ...
    &quot;react-hooks/rules-of-hooks&quot;: &quot;error&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; This plugin is intended to use in Create React App by default.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;229&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Flux and Redux?&lt;/h3&gt; &lt;p&gt;Below are the major differences between Flux and Redux&lt;/p&gt; &lt;p&gt;| Flux | Redux | | ‚Äî‚Äì | ‚Äî‚Äì‚Äì | | State is mutable | State is immutable | | The Store contains both state and change logic | The Store and change logic are separate | | There are multiple stores exist | There is only one store exist | | All the stores are disconnected and flat | Single store with hierarchical reducers| | It has a singleton dispatcher | There is no concept of dispatcher | | React components subscribe to the store | Container components uses connect function|&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;230&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of React Router V4?&lt;/h3&gt; &lt;p&gt;Below are the main benefits of React Router V4 module,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;In React Router v4(version 4), the API is completely about components. A router can be visualized as a single component(&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;) which wraps specific child router components(&lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;You don‚Äôt need to manually set history. The router module will take care history by wrapping routes with &lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt; component.&lt;/li&gt; 
   &lt;li&gt;The application size is reduced by adding only the specific router module(Web, core, or native)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;231&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycle method is invoked after an error has been thrown by a descendant component. The method receives two parameters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;error: - The error object which was thrown&lt;/li&gt; 
   &lt;li&gt;info: - An object with a componentStack key contains the information about which component threw the error.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The method structure would be as follows&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;componentDidCatch(error, info)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;232&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;In which scenarios error boundaries do not catch errors?&lt;/h3&gt; &lt;p&gt;Below are the cases in which error boundaries doesn‚Äôt work,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Inside Event handlers&lt;/li&gt; 
   &lt;li&gt;Asynchronous code using &lt;strong&gt;setTimeout or requestAnimationFrame&lt;/strong&gt; callbacks&lt;/li&gt; 
   &lt;li&gt;During Server side rendering&lt;/li&gt; 
   &lt;li&gt;When errors thrown in the error boundary code itself&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;233&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you not need error boundaries for event handlers?&lt;/h3&gt; &lt;p&gt;Error boundaries do not catch errors inside event handlers.&lt;/p&gt; &lt;p&gt;React doesn‚Äôt need error boundaries to recover from errors in event handlers. Unlike the render method and lifecycle methods, the event handlers don‚Äôt happen during rendering. So if they throw, React still knows what to display on the screen.&lt;/p&gt; &lt;p&gt;If you need to catch an error inside an event handler, use the regular JavaScript try / catch statement:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props);
    this.state = { error: null };
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick() {
    try {
      // Do something that could throw
    } catch (error) {
      this.setState({ error });
    }
  }

  render() {
    if (this.state.error) {
      return &amp;lt;h1&amp;gt;Caught an error.&amp;lt;/h1&amp;gt;
    }
    return &amp;lt;button onClick={this.handleClick}&amp;gt;Click Me&amp;lt;/button&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note that the above example is demonstrating regular JavaScript behavior and doesn‚Äôt use error boundaries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;234&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between try catch block and error boundaries?&lt;/h3&gt; &lt;p&gt;Try catch block works with imperative code whereas error boundaries are meant for declarative code to render on the screen.&lt;/p&gt; &lt;p&gt;For example, the try catch block used for below imperative code&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  showButton();
} catch (error) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas error boundaries wrap declarative code as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ErrorBoundary&amp;gt;
  &amp;lt;MyComponent /&amp;gt;
&amp;lt;/ErrorBoundary&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;So if an error occurs in a &lt;strong&gt;componentDidUpdate&lt;/strong&gt; method caused by a &lt;strong&gt;setState&lt;/strong&gt; somewhere deep in the tree, it will still correctly propagate to the closest error boundary.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;235&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the behavior of uncaught errors in react 16?&lt;/h3&gt; In React 16, errors that were not caught by any error boundary will result in unmounting of the whole React component tree. The reason behind this decision is that it is worse to leave corrupted UI in place than to completely remove it. For example, it is worse for a payments app to display a wrong amount than to render nothing.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;236&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the proper placement for error boundaries?&lt;/h3&gt; The granularity of error boundaries usage is up to the developer based on project needs. You can follow either of these approaches, 
  &lt;ol&gt; 
   &lt;li&gt;You can wrap top-level route components to display a generic error message for the entire application.&lt;/li&gt; 
   &lt;li&gt;You can also wrap individual components in an error boundary to protect them from crashing the rest of the application.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;237&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of component stack trace from error boundary?&lt;/h3&gt; &lt;p&gt;Apart from error messages and javascript stack, React16 will display the component stack trace with file names and line numbers using error boundary concept.&lt;/p&gt; &lt;p&gt;For example, BuggyCounter component displays the component stack trace as below,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/error_boundary.png&quot; alt=&quot;stacktrace&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;238&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the required method to be defined for a class component?&lt;/h3&gt; The &lt;code&gt;render()&lt;/code&gt; method is the only required method in a class component. i.e, All methods other than render method are optional for a class component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;239&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible return types of render method?&lt;/h3&gt; &lt;p&gt;Below are the list of following types used and return from render method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;React elements:&lt;/strong&gt; Elements that instruct React to render a DOM node. It includes html elements such as &lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt; and user defined elements.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Arrays and fragments:&lt;/strong&gt; Return multiple elements to render as Arrays and Fragments to wrap multiple elements&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Portals:&lt;/strong&gt; Render children into a different DOM subtree.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;String and numbers:&lt;/strong&gt; Render both Strings and Numbers as text nodes in the DOM&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans or null:&lt;/strong&gt; Doesn‚Äôt render anything but these types are used to conditionally render content.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;240&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main purpose of constructor?&lt;/h3&gt; &lt;p&gt;The constructor is mainly used for two purposes,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;To initialize local state by assigning object to this.state&lt;/li&gt; 
   &lt;li&gt;For binding event handler methods to the instance For example, the below code covers both the above cases,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;constructor(props) {
  super(props);
  // Don&#39;t call this.setState() here!
  this.state = { counter: 0 };
  this.handleClick = this.handleClick.bind(this);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;241&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it mandatory to define constructor for React component?&lt;/h3&gt; No, it is not mandatory. i.e, If you don‚Äôt initialize state and you don‚Äôt bind methods, you don‚Äôt need to implement a constructor for your React component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;242&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are default props?&lt;/h3&gt; &lt;p&gt;The defaultProps are defined as a property on the component class to set the default props for the class. This is used for undefined props, but not for null props.&lt;/p&gt; &lt;p&gt;For example, let us create color default prop for the button component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyButton extends React.Component {
  // ...
}

MyButton.defaultProps = {
  color: &#39;red&#39;
};

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If props.color is not provided then it will set the default value to ‚Äòred‚Äô. i.e, Whenever you try to access the color prop it uses default value&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
   return &amp;lt;MyButton /&amp;gt; ; // props.color will be set to red
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you provide null value then it remains null value.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;243&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should not call setState in componentWillUnmount?&lt;/h3&gt; You should not call &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillUnmount()&lt;/code&gt; because once a component instance is unmounted, it will never be mounted again.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;244&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of getDerivedStateFromError?&lt;/h3&gt; &lt;p&gt;This lifecycle method is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.&lt;/p&gt; &lt;p&gt;The signature of the lifecycle method is as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;static getDerivedStateFromError(error)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let us take error boundary use case with the above lifecycle method for demonistration purpose,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error) {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return &amp;lt;h1&amp;gt;Something went wrong.&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;245&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the methods order when component re-rendered?&lt;/h3&gt; &lt;p&gt;An update can be caused by changes to props or state. The below methods are called in the following order when a component is being re-rendered.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;static getDerivedStateFromProps()&lt;/li&gt; 
   &lt;li&gt;shouldComponentUpdate()&lt;/li&gt; 
   &lt;li&gt;render()&lt;/li&gt; 
   &lt;li&gt;getSnapshotBeforeUpdate()&lt;/li&gt; 
   &lt;li&gt;componentDidUpdate()&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;246&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the methods invoked during error handling?&lt;/h3&gt; &lt;p&gt;Below methods are called when there is an error during rendering, in a lifecycle method, or in the constructor of any child component.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;static getDerivedStateFromError()&lt;/li&gt; 
   &lt;li&gt;componentDidCatch()&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;247&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of displayName class property?&lt;/h3&gt; &lt;p&gt;The displayName string is used in debugging messages. Usually, you don‚Äôt need to set it explicitly because it‚Äôs inferred from the name of the function or class that defines the component. You might want to set it explicitly if you want to display a different name for debugging purposes or when you create a higher-order component.&lt;/p&gt; &lt;p&gt;For example, To ease debugging, choose a display name that communicates that it‚Äôs the result of a withSubscription HOC.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function withSubscription(WrappedComponent) {
  class WithSubscription extends React.Component {/* ... */}
  WithSubscription.displayName = `WithSubscription(${getDisplayName(WrappedComponent)})`;
  return WithSubscription;
}
function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || &#39;Component&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;248&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the browser support for react applications?&lt;/h3&gt; React supports all popular browsers, including Internet Explorer 9 and above, although some polyfills are required for older browsers such as IE 9 and IE 10. If you use &lt;strong&gt;es5-shim and es5-sham&lt;/strong&gt; polyfill then it even support old browsers that doesn‚Äôt support ES5 methods.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;249&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of unmountComponentAtNode method?&lt;/h3&gt; &lt;p&gt;This method is available from react-dom package and it removes a mounted React component from the DOM and clean up its event handlers and state. If no component was mounted in the container, calling this function does nothing. Returns true if a component was unmounted and false if there was no component to unmount.&lt;/p&gt; &lt;p&gt;The method signature would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactDOM.unmountComponentAtNode(container)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;250&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is code-splitting?&lt;/h3&gt; &lt;p&gt;Code-Splitting is a feature supported by bundlers like Webpack and Browserify which can create multiple bundles that can be dynamically loaded at runtime. The react project supports code splitting via dynamic import() feature.&lt;/p&gt; &lt;p&gt;For example, in the below code snippets, it will make moduleA.js and all its unique dependencies as a separate chunk that only loads after the user clicks the ‚ÄòLoad‚Äô button. &lt;strong&gt;moduleA.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const moduleA = &#39;Hello&#39;;

export { moduleA };
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;;

class App extends Component {
  handleClick = () =&amp;gt; {
    import(&#39;./moduleA&#39;)
      .then(({ moduleA }) =&amp;gt; {
        // Use moduleA
      })
      .catch(err =&amp;gt; {
        // Handle failure
      });
  };

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;button onClick={this.handleClick}&amp;gt;Load&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

export default App;

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;251&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of strict mode?&lt;/h3&gt; &lt;p&gt;The 
   &lt;strictmode&gt;
     will be helpful in the below cases
   &lt;/strictmode&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Identifying components with &lt;strong&gt;unsafe lifecycle methods&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Warning about &lt;strong&gt;legacy string ref&lt;/strong&gt; API usage.&lt;/li&gt; 
   &lt;li&gt;Detecting unexpected &lt;strong&gt;side effects&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Detecting &lt;strong&gt;legacy context&lt;/strong&gt; API.&lt;/li&gt; 
   &lt;li&gt;Warning about deprecated findDOMNode usage&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;252&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Keyed Fragments?&lt;/h3&gt; &lt;p&gt;The Fragments declared with the explicit &amp;lt;React.Fragment&amp;gt; syntax may have keys. The general use case is mapping a collection to an array of fragments as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Glossary(props) {
  return (
    &amp;lt;dl&amp;gt;
      {props.items.map(item =&amp;gt; (
        // Without the `key`, React will fire a key warning
        &amp;lt;React.Fragment key={item.id}&amp;gt;
          &amp;lt;dt&amp;gt;{item.term}&amp;lt;/dt&amp;gt;
          &amp;lt;dd&amp;gt;{item.description}&amp;lt;/dd&amp;gt;
        &amp;lt;/React.Fragment&amp;gt;
      ))}
    &amp;lt;/dl&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; key is the only attribute that can be passed to Fragment. In the future, there might be a support for additional attributes, such as event handlers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;253&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Does React support all HTML attributes?&lt;/h3&gt; &lt;p&gt;As of React 16, both standard or custom DOM attributes are fully supported. Since React components often take both custom and DOM-related props, React uses the camelCase convention just like the DOM APIs.&lt;/p&gt; &lt;p&gt;Let us take few props with respect to standard HTML attributes,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div tabIndex=&quot;-1&quot; /&amp;gt;      // Just like node.tabIndex DOM API
&amp;lt;div className=&quot;Button&quot; /&amp;gt; // Just like node.className DOM API
&amp;lt;input readOnly={true} /&amp;gt;  // Just like node.readOnly DOM API
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These props work similarly to the corresponding HTML attributes, with the exception of the special cases. It also support all SVG attributes.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;254&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the limitations with HOCs?&lt;/h3&gt; &lt;p&gt;Higher-order components come with a few caveats apart from its benefits. Below are the few listed in an order,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Don‚Äôt use HOCs inside the render method:&lt;/strong&gt; It is not recommended to apply a HOC to a component within the render method of a component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  // A new version of EnhancedComponent is created on every render
  // EnhancedComponent1 !== EnhancedComponent2
  const EnhancedComponent = enhance(MyComponent);
  // That causes the entire subtree to unmount/remount each time!
  return &amp;lt;EnhancedComponent /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code impact performance by remounting a component that causes the state of that component and all of its children to be lost. Instead, apply HOCs outside the component definition so that the resulting component is created only once.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static methods must be copied over:&lt;/strong&gt; When you apply a HOC to a component the new component does not have any of the static methods of the original component&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Define a static method
WrappedComponent.staticMethod = function() {/*...*/}
// Now apply a HOC
const EnhancedComponent = enhance(WrappedComponent);

// The enhanced component has no static method
typeof EnhancedComponent.staticMethod === &#39;undefined&#39; // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can overcome this by copying the methods onto the container before returning it,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function enhance(WrappedComponent) {
  class Enhance extends React.Component {/*...*/}
  // Must know exactly which method(s) to copy :(
  Enhance.staticMethod = WrappedComponent.staticMethod;
  return Enhance;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Refs aren‚Äôt passed through:&lt;/strong&gt; For HOCs you need to pass through all props to the wrapped component but this does not work for refs. This is because ref is not really a prop similar to key. In this case you need to use the React.forwardRef API&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;255&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to debug forwardRefs in DevTools?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React.forwardRef&lt;/strong&gt; accepts a render function as parameter and DevTools uses this function to determine what to display for the ref forwarding component.&lt;/p&gt; &lt;p&gt;For example, If you don‚Äôt name the render function or not using displayName property then it will appear as ‚ÄùForwardRef‚Äù in the DevTools,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const WrappedComponent = React.forwardRef((props, ref) =&amp;gt; {
  return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But If you name the render function then it will appear as &lt;strong&gt;‚ÄùForwardRef(myFunction)‚Äù&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const WrappedComponent = React.forwardRef(
  function myFunction(props, ref) {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  }
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As an alternative, You can also set displayName property for forwardRef function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function logProps(Component) {
  class LogProps extends React.Component {
    // ...
  }

  function forwardRef(props, ref) {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  }

  // Give this component a more helpful display name in DevTools.
  // e.g. &quot;ForwardRef(logProps(MyComponent))&quot;
  const name = Component.displayName || Component.name;
  forwardRef.displayName = `logProps(${name})`;

  return React.forwardRef(forwardRef);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;256&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;When component props defaults to true?&lt;/h3&gt; &lt;p&gt;If you pass no value for a prop, it defaults to true. This behavior is available so that it matches the behavior of HTML.&lt;/p&gt; &lt;p&gt;For example, below expressions are equivalent,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;MyInput autocomplete /&amp;gt;

&amp;lt;MyInput autocomplete={true} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is not recommended to use this approach because it can be confused with the ES6 object shorthand (example, &lt;code&gt;{name}&lt;/code&gt; which is short for &lt;code&gt;{name: name}&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;257&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is NextJS and major features of it?&lt;/h3&gt; &lt;p&gt;Next.js is a popular and lightweight framework for static and server‚Äërendered applications built with React. It also provides styling and routing solutions. Below are the major features provided by NextJS,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Server-rendered by default&lt;/li&gt; 
   &lt;li&gt;Automatic code splitting for faster page loads&lt;/li&gt; 
   &lt;li&gt;Simple client-side routing (page based)&lt;/li&gt; 
   &lt;li&gt;Webpack-based dev environment which supports (HMR)&lt;/li&gt; 
   &lt;li&gt;Able to implement with Express or any other Node.js HTTP server&lt;/li&gt; 
   &lt;li&gt;Customizable with your own Babel and Webpack configurations&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;258&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you pass an event handler to a component?&lt;/h3&gt; &lt;p&gt;You can pass event handlers and other functions as props to child components. It can be used in child component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;259&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it good to use arrow functions in render methods?&lt;/h3&gt; &lt;p&gt;Yes, You can use. It is often the easiest way to pass parameters to callback functions. But you need to optimize the performance while using it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Foo extends Component {
  handleClick() {
    console.log(&#39;Click happened&#39;);
  }
  render() {
    return &amp;lt;button onClick={() =&amp;gt; this.handleClick()}&amp;gt;Click Me&amp;lt;/button&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using an arrow function in render method creates a new function each time the component renders, which may have performance implications&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;260&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent a function from being called multiple times?&lt;/h3&gt; &lt;p&gt;If you use an event handler such as &lt;strong&gt;onClick or onScroll&lt;/strong&gt; and want to prevent the callback from being fired too quickly, then you can limit the rate at which callback is executed. This can be achieved in the below possible ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Throttling:&lt;/strong&gt; Changes based on a time based frequency. For example, it can be used using _.throttle lodash function&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Debouncing:&lt;/strong&gt; Publish changes after a period of inactivity. For example, it can be used using _.debounce lodash function&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;RequestAnimationFrame throttling:&lt;/strong&gt; Changes based on requestAnimationFrame. For example, it can be used using raf-schd lodash function&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;261&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How JSX prevents Injection Attacks?&lt;/h3&gt; &lt;p&gt;React DOM escapes any values embedded in JSX before rendering them. Thus it ensures that you can never inject anything that‚Äôs not explicitly written in your application. Everything is converted to a string before being rendered.&lt;/p&gt; &lt;p&gt;For example, you can embed user input as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const name = response.potentiallyMaliciousInput;
const element = &amp;lt;h1&amp;gt;{name}&amp;lt;/h1&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way you can prevent XSS(Cross-site-scripting) attacks in the application.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;262&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you update rendered elements?&lt;/h3&gt; &lt;p&gt;You can update UI(represented by rendered element) by passing the newly created element to ReactDOM‚Äôs render method.&lt;/p&gt; &lt;p&gt;For example, lets take a ticking clock example, where it updates the time by calling render method multiple times,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function tick() {
  const element = (
    &amp;lt;div&amp;gt;
      &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;It is {new Date().toLocaleTimeString()}.&amp;lt;/h2&amp;gt;
    &amp;lt;/div&amp;gt;
  );
  ReactDOM.render(element, document.getElementById(&#39;root&#39;));
}

setInterval(tick, 1000);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;263&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you say that props are read only?&lt;/h3&gt; &lt;p&gt;When you declare a component as a function or a class, it must never modify its own props.&lt;/p&gt; &lt;p&gt;Let us take a below capital function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function capital(amount, interest) {
   return amount + interest;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above function is called ‚Äúpure‚Äù because it does not attempt to change their inputs, and always return the same result for the same inputs. Hence, React has a single rule saying ‚ÄúAll React components must act like pure functions with respect to their props.‚Äù&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;264&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you say that state updates are merged?&lt;/h3&gt; &lt;p&gt;When you call setState() in the component, React merges the object you provide into the current state.&lt;/p&gt; &lt;p&gt;For example, let us take a facebook user with posts and comments details as state variables,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  constructor(props) {
    super(props);
    this.state = {
      posts: [],
      comments: []
    };
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now you can update them independently with separate &lt;code&gt;setState()&lt;/code&gt; calls as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; componentDidMount() {
    fetchPosts().then(response =&amp;gt; {
      this.setState({
        posts: response.posts
      });
    });

    fetchComments().then(response =&amp;gt; {
      this.setState({
        comments: response.comments
      });
    });
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code snippets, &lt;code&gt;this.setState({comments})&lt;/code&gt; updates only comments variable without modifying or replacing posts variable.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;265&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you pass arguments to an event handler?&lt;/h3&gt; &lt;p&gt;During iterations or loops, it is common to pass an extra parameter to an event handler. This can be achieved through arrow functions or bind method.&lt;/p&gt; &lt;p&gt;Let us take an example of user details updated in a grid,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;button onClick={(e) =&amp;gt; this.updateUser(userId, e)}&amp;gt;Update User details&amp;lt;/button&amp;gt;
&amp;lt;button onClick={this.updateUser.bind(this, userId)}&amp;gt;Update User details&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In both the approaches, the synthetic argument e is passed as a second argument. You need to pass it explicitly for arrow functions and it forwarded automatically for bind method.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;266&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent component from rendering?&lt;/h3&gt; &lt;p&gt;You can prevent component from rendering by returning null based on specific condition. This way it can conditionally render component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Greeting(props) {
  if (!props.loggedIn) {
    return null;
  }

  return (
    &amp;lt;div className=&quot;greeting&quot;&amp;gt;
      welcome, {props.name}
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class User extends React.Component {
  constructor(props) {
    super(props);
    this.state = {loggedIn: false, name: &#39;John&#39;};
  }

  render() {
   return (
       &amp;lt;div&amp;gt;
         //Prevent component render if it is not loggedIn
         &amp;lt;Greeting loggedIn={this.state.loggedIn} /&amp;gt;
         &amp;lt;UserDetails name={this.state.name}&amp;gt;
       &amp;lt;/div&amp;gt;
   );
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above example, the greeting component skips its rendering section by applying condition and returning null value.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;267&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the conditions to safely use the index as a key?&lt;/h3&gt; &lt;p&gt;There are three conditions to make sure, it is safe use the index as a key.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The list and items are static‚Äì they are not computed and do not change&lt;/li&gt; 
   &lt;li&gt;The items in the list have no ids&lt;/li&gt; 
   &lt;li&gt;The list is never reordered or filtered.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;268&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it keys should be globally unique?&lt;/h3&gt; &lt;p&gt;Keys used within arrays should be unique among their siblings but they don‚Äôt need to be globally unique. i.e, You can use the same keys with two different arrays.&lt;/p&gt; &lt;p&gt;For example, the below book component uses two arrays with different arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Book(props) {
  const index = (
    &amp;lt;ul&amp;gt;
      {props.pages.map((page) =&amp;gt;
        &amp;lt;li key={page.id}&amp;gt;
          {page.title}
        &amp;lt;/li&amp;gt;
      )}
    &amp;lt;/ul&amp;gt;
  );
  const content = props.pages.map((page) =&amp;gt;
    &amp;lt;div key={page.id}&amp;gt;
      &amp;lt;h3&amp;gt;{page.title}&amp;lt;/h3&amp;gt;
      &amp;lt;p&amp;gt;{page.content}&amp;lt;/p&amp;gt;
      &amp;lt;p&amp;gt;{page.pageNumber}&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  );
  return (
    &amp;lt;div&amp;gt;
      {index}
      &amp;lt;hr /&amp;gt;
      {content}
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;269&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the popular choice for form handling?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;Formik&lt;/code&gt; is a form library for react which provides solutions such as validation, keeping track of the visited fields, and handling form submission.&lt;/p&gt; &lt;p&gt;In detail, You can categorize them as follows,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; 
   &lt;li&gt;Validation and error messages&lt;/li&gt; 
   &lt;li&gt;Handling form submission&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;It is used to create a scalable, performant, form helper with a minimal API to solve annoying stuff.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;270&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of formik over redux form library?&lt;/h3&gt; &lt;p&gt;Below are the main reasons to recommend formik over redux form library,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The form state is inherently short-term and local, so tracking it in Redux (or any kind of Flux library) is unnecessary.&lt;/li&gt; 
   &lt;li&gt;Redux-Form calls your entire top-level Redux reducer multiple times ON EVERY SINGLE KEYSTROKE. This way it increases input latency for large apps.&lt;/li&gt; 
   &lt;li&gt;Redux-Form is 22.5 kB minified gzipped whereas Formik is 12.7 kB&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;271&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you not required to use inheritance?&lt;/h3&gt; In React, it is recommend using composition instead of inheritance to reuse code between components. Both Props and composition give you all the flexibility you need to customize a component‚Äôs look and behavior in an explicit and safe way. Whereas, If you want to reuse non-UI functionality between components, it is suggested to extracting it into a separate JavaScript module. Later components import it and use that function, object, or a class, without extending it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;272&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use web components in react application?&lt;/h3&gt; &lt;p&gt;Yes, you can use web components in a react application. Even though many developers won‚Äôt use this combination, it may require especially if you are using third-party UI components that are written using Web Components.&lt;/p&gt; &lt;p&gt;For example, let us use &lt;code&gt;Vaadin&lt;/code&gt; date picker web component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;;
import &#39;./App.css&#39;;
import &#39;@vaadin/vaadin-date-picker&#39;;
class App extends Component {
  render() {
    return (
      &amp;lt;div className=&quot;App&quot;&amp;gt;
        &amp;lt;vaadin-date-picker label=&quot;When were you born?&quot;&amp;gt;&amp;lt;/vaadin-date-picker&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
export default App;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;273&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is dynamic import?&lt;/h3&gt; &lt;p&gt;The dynamic import() syntax is a ECMAScript proposal not currently part of the language standard. It is expected to be accepted in the near future. You can achieve code-splitting into your app using dynamic import.&lt;/p&gt; &lt;p&gt;Let‚Äôs take an example of addition,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Normal Import&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { add } from &#39;./math&#39;;
console.log(add(10, 20));
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;&lt;strong&gt;Dynamic Import&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(&quot;./math&quot;).then(math =&amp;gt; {
  console.log(math.add(10, 20));
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;274&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are loadable components?&lt;/h3&gt; &lt;p&gt;If you want to do code-splitting in a server rendered app, it is recommend to use Loadable Components because React.lazy and Suspense is not yet available for server-side rendering. Loadable lets you render a dynamic import as a regular component.&lt;/p&gt; &lt;p&gt;Lets take an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import loadable from &#39;@loadable/component&#39;

const OtherComponent = loadable(() =&amp;gt; import(&#39;./OtherComponent&#39;))

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;OtherComponent /&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now OtherComponent will be loaded in a separated bundle&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;275&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is suspense component?&lt;/h3&gt; &lt;p&gt;If the module containing the dynamic import is not yet loaded by the time parent component renders, you must show some fallback content while you‚Äôre waiting for it to load using a loading indicator. This can be done using &lt;strong&gt;Suspense&lt;/strong&gt; component.&lt;/p&gt; &lt;p&gt;For example, the below code uses suspense component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;
        &amp;lt;OtherComponent /&amp;gt;
      &amp;lt;/Suspense&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code, Suspense is wrapped above the lazy component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;276&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is route based code splitting?&lt;/h3&gt; &lt;p&gt;One of the best place to do code splitting is with routes. The entire page is going to re-render at once so users are unlikely to interact with other elements in the page at the same time. Due to this, the user experience won‚Äôt be disturbed.&lt;/p&gt; &lt;p&gt;Let us take an example of route based website using libraries like React Router with React.lazy,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { BrowserRouter as Router, Route, Switch } from &#39;react-router-dom&#39;;
import React, { Suspense, lazy } from &#39;react&#39;;

const Home = lazy(() =&amp;gt; import(&#39;./routes/Home&#39;));
const About = lazy(() =&amp;gt; import(&#39;./routes/About&#39;));

const App = () =&amp;gt; (
  &amp;lt;Router&amp;gt;
    &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;
      &amp;lt;Switch&amp;gt;
        &amp;lt;Route exact path=&quot;/&quot; component={Home}/&amp;gt;
        &amp;lt;Route path=&quot;/about&quot; component={About}/&amp;gt;
      &amp;lt;/Switch&amp;gt;
    &amp;lt;/Suspense&amp;gt;
  &amp;lt;/Router&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, the code splitting will happen at each route level.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;277&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example on How to use context?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt; is designed to share data that can be considered &lt;strong&gt;global&lt;/strong&gt; for a tree of React components.&lt;/p&gt; &lt;p&gt;For example, in the code below lets manually thread through a ‚Äútheme‚Äù prop in order to style the Button component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Lets create a context with a default theme value &quot;luna&quot;
const ThemeContext = React.createContext(&#39;luna&#39;);
// Create App component where it uses provider to pass theme value in the tree
class App extends React.Component {
  render() {
    return (
      &amp;lt;ThemeContext.Provider value=&quot;nova&quot;&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/ThemeContext.Provider&amp;gt;
    );
  }
}
// A middle component where you don&#39;t need to pass theme prop anymore
function Toolbar(props) {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;ThemedButton /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
// Lets read theme value in the button component to use
class ThemedButton extends React.Component {
  static contextType = ThemeContext;
  render() {
    return &amp;lt;Button theme={this.context} /&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;278&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of default value in context?&lt;/h3&gt; &lt;p&gt;The defaultValue argument is only used when a component does not have a matching Provider above it in the tree. This can be helpful for testing components in isolation without wrapping them.&lt;/p&gt; &lt;p&gt;Below code snippet provides default theme value as Luna.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const MyContext = React.createContext(defaultValue);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;279&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you use contextType?&lt;/h3&gt; &lt;p&gt;ContextType is used to consume the context object. The contextType property can be used in two ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;contextType as property of class:&lt;/strong&gt; The contextType property on a class can be assigned a Context object created by React.createContext(). After that, you can consume the nearest current value of that Context type using this.context in any of the lifecycle methods and render function.&lt;/p&gt; &lt;p&gt;Lets assign contextType property on MyClass as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyClass extends React.Component {
  componentDidMount() {
    let value = this.context;
    /* perform a side-effect at mount using the value of MyContext */
  }
  componentDidUpdate() {
    let value = this.context;
    /* ... */
  }
  componentWillUnmount() {
    let value = this.context;
    /* ... */
  }
  render() {
    let value = this.context;
    /* render something based on the value of MyContext */
  }
}
MyClass.contextType = MyContext;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static field&lt;/strong&gt; You can use a static class field to initialize your contextType using public class field syntax.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyClass extends React.Component {
  static contextType = MyContext;
  render() {
    let value = this.context;
    /* render something based on the value */
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;280&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is a consumer?&lt;/h3&gt; &lt;p&gt;A Consumer is a React component that subscribes to context changes. It requires a function as a child which receives current context value as argument and returns a react node. The value argument passed to the function will be equal to the value prop of the closest Provider for this context above in the tree.&lt;/p&gt; &lt;p&gt;Lets take a simple example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;MyContext.Consumer&amp;gt;
  {value =&amp;gt; /* render something based on the context value */}
&amp;lt;/MyContext.Consumer&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;281&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you solve performance corner cases while using context?&lt;/h3&gt; &lt;p&gt;The context uses reference identity to determine when to re-render, there are some gotchas that could trigger unintentional renders in consumers when a provider‚Äôs parent re-renders.&lt;/p&gt; &lt;p&gt;For example, the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends React.Component {
  render() {
    return (
      &amp;lt;Provider value={{something: &#39;something&#39;}}&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/Provider&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This can be solved by lifting up the value to parent state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: {something: &#39;something&#39;},
    };
  }

  render() {
    return (
      &amp;lt;Provider value={this.state.value}&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/Provider&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;282&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of forward ref in HOCs?&lt;/h3&gt; &lt;p&gt;Refs will not get passed through because ref is not a prop. It handled differently by React just like &lt;strong&gt;key&lt;/strong&gt;. If you add a ref to a HOC, the ref will refer to the outermost container component, not the wrapped component. In this case, you can use Forward Ref API. For example, we can explicitly forward refs to the inner FancyButton component using the React.forwardRef API.&lt;/p&gt; &lt;p&gt;The below HOC logs all props,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    function logProps(Component) {
      class LogProps extends React.Component {
        componentDidUpdate(prevProps) {
          console.log(&#39;old props:&#39;, prevProps);
          console.log(&#39;new props:&#39;, this.props);
        }

        render() {
          const {forwardedRef, ...rest} = this.props;

          // Assign the custom prop &quot;forwardedRef&quot; as a ref
          return &amp;lt;Component ref={forwardedRef} {...rest} /&amp;gt;;
        }
      }

      return React.forwardRef((props, ref) =&amp;gt; {
        return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
      });
    }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let‚Äôs use this HOC to log all props that get passed to our ‚Äúfancy button‚Äù component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    class FancyButton extends React.Component {
      focus() {
        // ...
      }

      // ...
    }
    export default logProps(FancyButton);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now lets create a ref and pass it to FancyButton component. In this case, you can set focus to button element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    import FancyButton from &#39;./FancyButton&#39;;

    const ref = React.createRef();
    ref.current.focus();
    &amp;lt;FancyButton
      label=&quot;Click Me&quot;
      handleClick={handleClick}
      ref={ref}
    /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;283&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it ref argument available for all functions or class components?&lt;/h3&gt; Regular function or class components don‚Äôt receive the ref argument, and ref is not available in props either. The second ref argument only exists when you define a component with React.forwardRef call.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;284&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need additional care for component libraries while using forward refs?&lt;/h3&gt; When you start using forwardRef in a component library, you should treat it as a breaking change and release a new major version of your library. This is because your library likely has a different behavior such as what refs get assigned to, and what types are exported. These changes can break apps and other libraries that depend on the old behavior.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;285&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create react class components without ES6?&lt;/h3&gt; &lt;p&gt;If you don‚Äôt use ES6 then you may need to use the create-react-class module instead. For default props, you need to define getDefaultProps() as a function on the passed object. Whereas for initial state, you have to provide a separate getInitialState method that returns the initial state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var Greeting = createReactClass({
  getDefaultProps: function() {
      return {
        name: &#39;Jhohn&#39;
      };
    },
  getInitialState: function() {
      return {message: this.props.message};
    },
  handleClick: function() {
     console.log(this.state.message);
  },
  render: function() {
    return &amp;lt;h1&amp;gt;Hello, {this.props.name}&amp;lt;/h1&amp;gt;;
  }
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you use createReactClass then auto binding is available for all methods. i.e, You don‚Äôt need to use &lt;code&gt;.bind(this)&lt;/code&gt; with in constructor for event handlers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;286&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use react without JSX?&lt;/h3&gt; &lt;p&gt;Yes, JSX is not mandatory for using React. Actually it is convenient when you don‚Äôt want to set up compilation in your build environment. Each JSX element is just syntactic sugar for calling &lt;code&gt;React.createElement(component, props, ...children)&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take a greeting example with JSX,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Greeting extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;Hello {this.props.message}&amp;lt;/div&amp;gt;;
  }
}

ReactDOM.render(
  &amp;lt;Greeting message=&quot;World&quot; /&amp;gt;,
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can write the same code without JSX as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Greeting extends React.Component {
  render() {
    return React.createElement(&#39;div&#39;, null, `Hello ${this.props.message}`);
  }
}

ReactDOM.render(
  React.createElement(Greeting, {message: &#39;World&#39;}, null),
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;287&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is diffing algorithm?&lt;/h3&gt; &lt;p&gt;React needs to use algorithms to find out how to efficiently update the UI to match the most recent tree. The diffing algorithms is generating the minimum number of operations to transform one tree into another. However, the algorithms have a complexity in the order of O(n3) where n is the number of elements in the tree.&lt;/p&gt; &lt;p&gt;In this case, for displaying 1000 elements would require in the order of one billion comparisons. This is far too expensive. Instead, React implements a heuristic O(n) algorithm based on two assumptions:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Two elements of different types will produce different trees.&lt;/li&gt; 
   &lt;li&gt;The developer can hint at which child elements may be stable across different renders with a key prop.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;288&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the rules covered by diffing algorithm?&lt;/h3&gt; &lt;p&gt;When diffing two trees, React first compares the two root elements. The behavior is different depending on the types of the root elements. It covers the below rules during reconciliation algorithm,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Elements Of Different Types:&lt;/strong&gt; Whenever the root elements have different types, React will tear down the old tree and build the new tree from scratch. For example, elements &lt;a&gt; to &lt;img&gt;, or from 
     &lt;article&gt;
       to 
      &lt;comment&gt;
        of different types lead a full rebuild.
      &lt;/comment&gt;
     &lt;/article&gt;&lt;/a&gt;&lt;/li&gt;
   &lt;a&gt; &lt;li&gt;&lt;strong&gt;DOM Elements Of The Same Type:&lt;/strong&gt; When comparing two React DOM elements of the same type, React looks at the attributes of both, keeps the same underlying DOM node, and only updates the changed attributes. Lets take an example with same DOM elements except className attribute, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div className=&quot;show&quot; title=&quot;ReactJS&quot; /&amp;gt;

&amp;lt;div className=&quot;hide&quot; title=&quot;ReactJS&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Component Elements Of The Same Type:&lt;/strong&gt; When a component updates, the instance stays the same, so that state is maintained across renders. React updates the props of the underlying component instance to match the new element, and calls componentWillReceiveProps() and componentWillUpdate() on the underlying instance. After that, the render() method is called and the diff algorithm recurses on the previous result and the new result.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Recursing On Children:&lt;/strong&gt; when recursing on the children of a DOM node, React just iterates over both lists of children at the same time and generates a mutation whenever there‚Äôs a difference. For example, when adding an element at the end of the children, converting between these two trees works well. &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;third&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Handling keys:&lt;/strong&gt; React supports a key attribute. When children have keys, React uses the key to match children in the original tree with children in the subsequent tree. For example, adding a key can make the tree conversion efficient,&lt;/li&gt; &lt;/a&gt;
  &lt;/ol&gt;&lt;a&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li key=&quot;2015&quot;&amp;gt;Duke&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2016&quot;&amp;gt;Villanova&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul&amp;gt;
  &amp;lt;li key=&quot;2014&quot;&amp;gt;Connecticut&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2015&quot;&amp;gt;Duke&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2016&quot;&amp;gt;Villanova&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&lt;/li&gt;
 &lt;a&gt; &lt;/a&gt;
&lt;/ol&gt;
&lt;a&gt; &lt;/a&gt;
&lt;p&gt;&lt;a&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;289&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;When do you need to use refs?&lt;/h3&gt; &lt;p&gt;There are few use cases to go for refs,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Managing focus, text selection, or media playback.&lt;/li&gt; 
   &lt;li&gt;Triggering imperative animations.&lt;/li&gt; 
   &lt;li&gt;Integrating with third-party DOM libraries.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;290&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it prop must be named as render for render props?&lt;/h3&gt; &lt;p&gt;Even though the pattern named render props, you don‚Äôt have to use a prop named render to use this pattern. i.e, Any prop that is a function that a component uses to know what to render is technically a ‚Äúrender prop‚Äù. Lets take an example with the children prop for render props,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;Mouse children={mouse =&amp;gt; (
  &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;
)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Actually children prop doesn‚Äôt need to be named in the list of ‚Äúattributes‚Äù in JSX element. Instead, you can keep it directly inside element,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;Mouse&amp;gt;
  {mouse =&amp;gt; (
    &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;
  )}
&amp;lt;/Mouse&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While using this above technique(without any name), explicitly state that children should be a function in your propTypes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Mouse.propTypes = {
  children: PropTypes.func.isRequired
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;291&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems of using render props with pure components?&lt;/h3&gt; If you create a function inside a render method, it negates the purpose of pure component. Because the shallow prop comparison will always return false for new props, and each render in this case will generate a new value for the render prop. You can solve this issue by defining the render function as instance method.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;292&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create HOC using render props?&lt;/h3&gt; &lt;p&gt;You can implement most higher-order components (HOC) using a regular component with a render prop. For example, if you would prefer to have a withMouse HOC instead of a 
   &lt;mouse&gt;
     component, you could easily create one using a regular 
    &lt;mouse&gt;
      with a render prop.
    &lt;/mouse&gt;
   &lt;/mouse&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function withMouse(Component) {
  return class extends React.Component {
    render() {
      return (
        &amp;lt;Mouse render={mouse =&amp;gt; (
          &amp;lt;Component {...this.props} mouse={mouse} /&amp;gt;
        )}/&amp;gt;
      );
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way render props gives the flexibility of using either pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;293&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is windowing technique?&lt;/h3&gt; Windowing is a technique that only renders a small subset of your rows at any given time, and can dramatically reduce the time it takes to re-render the components as well as the number of DOM nodes created. If your application renders long lists of data then this technique is recommended. Both react-window and react-virtualized are popular windowing libraries which provides several reusable components for displaying lists, grids, and tabular data.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;294&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print falsy values in JSX?&lt;/h3&gt; &lt;p&gt;The falsy values such as false, null, undefined, and true are valid children but they don‚Äôt render anything. If you still want to display them then you need to convert it to string. Let‚Äôs take an example on how to convert to a string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div&amp;gt;
  My JavaScript variable is {String(myVariable)}.
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;295&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the typical use case of portals?&lt;/h3&gt; &lt;p&gt;React portals are very useful when a parent component has overflow: hidden or has properties that affect the stacking context(z-index,position,opacity etc styles) and you need to visually ‚Äúbreak out‚Äù of its container.&lt;/p&gt; &lt;p&gt;For example, dialogs, global message notifications, hovercards, and tooltips.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;296&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you set default value for uncontrolled component?&lt;/h3&gt; &lt;p&gt;In React, the value attribute on form elements will override the value in the DOM. With an uncontrolled component, you might want React to specify the initial value, but leave subsequent updates uncontrolled. To handle this case, you can specify a &lt;strong&gt;defaultValue&lt;/strong&gt; attribute instead of &lt;strong&gt;value&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  return (
    &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
      &amp;lt;label&amp;gt;
        User Name:
        &amp;lt;input
          defaultValue=&quot;John&quot;
          type=&quot;text&quot;
          ref={this.input} /&amp;gt;
      &amp;lt;/label&amp;gt;
      &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
    &amp;lt;/form&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The same applies for &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;textArea&lt;/code&gt; inputs. But you need to use &lt;strong&gt;defaultChecked&lt;/strong&gt; for &lt;code&gt;checkbox&lt;/code&gt; and &lt;code&gt;radio&lt;/code&gt; inputs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;297&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is your favorite React stack?&lt;/h3&gt; Even though the tech stack varies from developer to developer, the most popular stack is used in react boilerplate project code. It mainly uses Redux and redux-saga for state management and asynchronous side-effects, react-router for routing purpose, styled-components for styling react components, axios for invoking REST api, and other supported stack such as webpack, reselect, ESNext, Babel. You can clone the project https://github.com/react-boilerplate/react-boilerplate and start working on any new react project.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;298&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Real DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Real DOM and Virtual DOM,&lt;/p&gt; &lt;p&gt;| Real DOM | Virtual DOM | | ‚Äî‚Äì | ‚Äî‚Äì‚Äì | | Updates are slow | Updates are fast | | DOM manipulation is very expensive. | DOM manipulation is very easy | | You can update HTML directly. | You Can‚Äôt directly update HTML | | It causes too much of memory wastage | There is no memory wastage| | Creates a new DOM if element updates | It updates the JSX if element update|&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;299&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add Bootstrap to a react application?&lt;/h3&gt; &lt;p&gt;Bootstrap can be added to your React app in a three possible ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using the Bootstrap CDN: This is the easiest way to add bootstrap. Add both bootstrap CSS and JS resources in a head tag.&lt;/li&gt; 
   &lt;li&gt;Bootstrap as Dependency: If you are using a build tool or a module bundler such as Webpack, then this is the preferred option for adding Bootstrap to your React application &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install bootstrap
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;React Bootstrap Package: In this case, you can add Bootstrap to our React app is by using a package that has rebuilt Bootstrap components to work particularly as React components. Below packages are popular in this category, 
    &lt;ol&gt; 
     &lt;li&gt;react-bootstrap&lt;/li&gt; 
     &lt;li&gt;reactstrap&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;300&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you list down top websites or applications using react as front end framework?&lt;/h3&gt; &lt;p&gt;Below are the &lt;code&gt;top 10 websites&lt;/code&gt; using React as their front-end framework,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Facebook&lt;/li&gt; 
   &lt;li&gt;Uber&lt;/li&gt; 
   &lt;li&gt;Instagram&lt;/li&gt; 
   &lt;li&gt;WhatsApp&lt;/li&gt; 
   &lt;li&gt;Khan Academy&lt;/li&gt; 
   &lt;li&gt;Airbnb&lt;/li&gt; 
   &lt;li&gt;Dropbox&lt;/li&gt; 
   &lt;li&gt;Flipboard&lt;/li&gt; 
   &lt;li&gt;Netflix&lt;/li&gt; 
   &lt;li&gt;PayPal&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;301&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it recommended to use CSS In JS technique in React?&lt;/h3&gt; React does not have any opinion about how styles are defined but if you are a beginner then good starting point is to define your styles in a separate *.css file as usual and refer to them using className. This functionality is not part of React but came from third-party libraries. But If you want to try a different approach(CSS-In-JS) then styled-components library is a good option.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;302&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do I need to rewrite all my class components with hooks?&lt;/h3&gt; No. But you can try Hooks in a few components(or new components) without rewriting any existing code. Because there are no plans to remove classes in ReactJS.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;303&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to fetch data with React Hooks?&lt;/h3&gt; &lt;p&gt;The effect hook called &lt;code&gt;useEffect&lt;/code&gt; is used to fetch the data with axios from the API and to set the data in the local state of the component with the state hook‚Äôs update function.&lt;/p&gt; &lt;p&gt;Let‚Äôs take an example in which it fetches list of react articles from the API&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useState, useEffect } from &#39;react&#39;;
import axios from &#39;axios&#39;;

function App() {
  const [data, setData] = useState({ hits: [] });

  useEffect(async () =&amp;gt; {
    const result = await axios(
      &#39;http://hn.algolia.com/api/v1/search?query=react&#39;,
    );

    setData(result.data);
  }, []);

  return (
    &amp;lt;ul&amp;gt;
      {data.hits.map(item =&amp;gt; (
        &amp;lt;li key={item.objectID}&amp;gt;
          &amp;lt;a href={item.url}&amp;gt;{item.title}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
      ))}
    &amp;lt;/ul&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember we provided an empty array as second argument to the effect hook to avoid activating it on component updates but only for the mounting of the component. i.e, It fetches only for component mount.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;304&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is Hooks cover all use cases for classes?&lt;/h3&gt; Hooks doesn‚Äôt cover all use cases of classes but there is a plan to add them soon. Currently there are no Hook equivalents to the uncommon &lt;strong&gt;getSnapshotBeforeUpdate&lt;/strong&gt; and &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycles yet.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;305&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the stable release for hooks support?&lt;/h3&gt; &lt;p&gt;React includes a stable implementation of React Hooks in 16.8 release for below packages&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React DOM&lt;/li&gt; 
   &lt;li&gt;React DOM Server&lt;/li&gt; 
   &lt;li&gt;React Test Renderer&lt;/li&gt; 
   &lt;li&gt;React Shallow Renderer&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;306&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we use array destructuring (square brackets notation) in &lt;code&gt;useState&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;When we declare a state variable with &lt;code&gt;useState&lt;/code&gt;, it returns a pair ‚Äî an array with two items. The first item is the current value, and the second is a function that updates the value. Using [0] and [1] to access them is a bit confusing because they have a specific meaning. This is why we use array destructuring instead.&lt;/p&gt; &lt;p&gt;For example, the array index access would look as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var userStateVariable = useState(&#39;userProfile&#39;); // Returns an array pair
 var user = userStateVariable[0]; // Access first item
 var setUser = userStateVariable[1]; // Access second item
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas with array destructuring the variables can be accessed as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const [user, setUser] = useState(&#39;userProfile&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the sources used for introducing hooks?&lt;/h3&gt; &lt;p&gt;Hooks got the ideas from several different sources. Below are some of them,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Previous experiments with functional APIs in the react-future repository&lt;/li&gt; 
   &lt;li&gt;Community experiments with render prop APIs such as Reactions Component&lt;/li&gt; 
   &lt;li&gt;State variables and state cells in DisplayScript.&lt;/li&gt; 
   &lt;li&gt;Subscriptions in Rx.&lt;/li&gt; 
   &lt;li&gt;Reducer components in ReasonReact.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;308&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access imperative API of web components?&lt;/h3&gt; Web Components often expose an imperative API to implement its functions. You will need to use a &lt;strong&gt;ref&lt;/strong&gt; to interact with the DOM node directly if you want to access imperative API of a web component. But if you are using third-party Web Components, the best solution is to write a React component that behaves as a &lt;strong&gt;wrapper&lt;/strong&gt; for your Web Component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;309&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is formik?&lt;/h3&gt; &lt;p&gt;Formik is a small react form library that helps you with the three major problems,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; 
   &lt;li&gt;Validation and error messages&lt;/li&gt; 
   &lt;li&gt;Handling form submission&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;310&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/h3&gt; Some of the popular middleware choices for handling asynchronous calls in Redux eco system are &lt;code&gt;Redux Thunk, Redux Promise, Redux Saga&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;311&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do browsers understand JSX code?&lt;/h3&gt; No, browsers can‚Äôt understand JSX code. You need a transpiler to convert your JSX to regular Javascript that browsers can understand. The most widely used transpiler right now is Babel.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;312&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Describe about data flow in react?&lt;/h3&gt; React implements one-way reactive data flow using props which reduce boilerplate and is easier to understand than traditional two-way data binding.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;313&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is react scripts?&lt;/h3&gt; The &lt;code&gt;react-scripts&lt;/code&gt; package is a set of scripts from the create-react-app starter pack which helps you kick off projects without configuring. The &lt;code&gt;react-scripts start&lt;/code&gt; command sets up the development environment and starts a server, as well as hot module reloading.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;314&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the features of create react app?&lt;/h3&gt; &lt;p&gt;Below are the list of some of the features provided by create react app.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React, JSX, ES6, Typescript and Flow syntax support.&lt;/li&gt; 
   &lt;li&gt;Autoprefixed CSS&lt;/li&gt; 
   &lt;li&gt;CSS Reset/Normalize&lt;/li&gt; 
   &lt;li&gt;A live development server&lt;/li&gt; 
   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting&lt;/li&gt; 
   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps&lt;/li&gt; 
   &lt;li&gt;An offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;315&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of renderToNodeStream method?&lt;/h3&gt; The &lt;code&gt;ReactDOMServer#renderToNodeStream&lt;/code&gt; method is used to generate HTML on the server and send the markup down on the initial request for faster page loads. It also helps search engines to crawl your pages easily for SEO purposes. &lt;strong&gt;Note:&lt;/strong&gt; Remember this method is not available in the browser but only server.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;316&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is MobX?&lt;/h3&gt; MobX is a simple, scalable and battle tested state management solution for applying functional reactive programming (TFRP). For reactJs application, you need to install below packages, &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install mobx --save
npm install mobx-react --save
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;317&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Redux and MobX?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Redux and MobX,&lt;/p&gt; &lt;p&gt;| Topic | Redux | MobX | | ‚Äî‚Äì | ‚Äî‚Äì‚Äì | ‚Äî‚Äì‚Äì | Definition| It is a javascript library for managing the application state | It is a library for reactively managing the state of your applications | | Programming | It is mainly written in ES6 | It is written in JavaScript(ES5) | | Data Store | There is only one large store exist for data storage | There is more than one store for storage | | Usage | Mainly used for large and complex applications | Used for simple applications | | Performance | Need to be improved | Provides better performance | | How it stores | Uses JS Object to store | Uses observable to store the data |&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;318&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Should I learn ES6 before learning ReactJS?&lt;/h3&gt; &lt;p&gt;No, you don‚Äôt have to learn es2015/es6 to learn react. But you may find many resources or React ecosystem uses ES6 extensively. Let‚Äôs see some of the frequently used ES6 features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Destructuring:&lt;/strong&gt; To get props and use them in a component &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// in es 5
 var someData = this.props.someData
 var dispatch = this.props.dispatch

// in es6
const { someData, dispatch } = this.props
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Spread operator: Helps in passing props down into a component &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// in es 5
&amp;lt;SomeComponent someData={this.props.someData} dispatch={this.props.dispatch} /&amp;gt;

// in es6
&amp;lt;SomeComponent {...this.props} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Arrow functions: Makes compact syntax &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// es 5
var users = usersList.map(function (user) {
 return &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;
})
// es 6
const users = usersList.map(user =&amp;gt; &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;319&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Concurrent Rendering?&lt;/h3&gt; &lt;p&gt;The Concurrent rendering makes React apps to be more responsive by rendering component trees without blocking the main UI thread. It allows React to interrupt a long-running render to handle a high-priority event. i.e, When you enabled concurrent Mode, React will keep an eye on other tasks that need to be done, and if there‚Äôs something with a higher priority it will pause what it is currently rendering and let the other task finish first. You can enable this in two ways,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// 1. Part of an app by wrapping with ConcurrentMode
&amp;lt;React.unstable_ConcurrentMode&amp;gt;
  &amp;lt;Something /&amp;gt;
&amp;lt;/React.unstable_ConcurrentMode&amp;gt;

// 2. Whole app using createRoot
ReactDOM.unstable_createRoot(domNode).render(&amp;lt;App /&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;320&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between async mode and concurrent mode?&lt;/h3&gt; Both refers the same thing. Previously concurrent Mode being referred to as ‚ÄúAsync Mode‚Äù by React team. The name has been changed to highlight React‚Äôs ability to perform work on different priority levels. So it avoids the confusion from other approaches to Async Rendering.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;321&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use javascript urls in react16.9?&lt;/h3&gt; &lt;p&gt;Yes, you can use javascript: URLs but it will log a warning in the console. Because URLs starting with javascript: are dangerous by including unsanitized output in a tag like &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; and create a security hole.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const companyProfile = {
  website: &quot;javascript: alert(&#39;Your website is hacked&#39;)&quot;,
};
// It will log a warning
&amp;lt;a href={companyProfile.website}&amp;gt;More details&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember that the future versions will throw an error for javascript URLs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;322&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of eslint plugin for hooks?&lt;/h3&gt; &lt;p&gt;The ESLint plugin enforces rules of Hooks to avoid bugs. It assumes that any function starting with ‚Äùuse‚Äù and a capital letter right after it is a Hook. In particular, the rule enforces that,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Calls to Hooks are either inside a PascalCase function (assumed to be a component) or another useSomething function (assumed to be a custom Hook).&lt;/li&gt; 
   &lt;li&gt;Hooks are called in the same order on every render.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;323&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Imperative and Declarative in React?&lt;/h3&gt; &lt;p&gt;Imagine a simple UI component, such as a ‚ÄúLike‚Äù button. When you tap it, it turns blue if it was previously grey, and grey if it was previously blue.&lt;/p&gt; &lt;p&gt;The imperative way of doing this would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if( user.likes() ) {
    if( hasBlue() ) {
        removeBlue();
        addGrey();
    } else {
        removeGrey();
        addBlue();
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Basically, you have to check what is currently on the screen and handle all the changes necessary to redraw it with the current state, including undoing the changes from the previous state. You can imagine how complex this could be in a real-world scenario.&lt;/p&gt; &lt;p&gt;In contrast, the declarative approach would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if( this.state.liked ) {
    return &amp;lt;blueLike /&amp;gt;;
} else {
    return &amp;lt;greyLike /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Because the declarative approach separates concerns, this part of it only needs to handle how the UI should look in a sepecific state, and is therefore much simpler to understand.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;324&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of using typescript with reactjs?&lt;/h3&gt; &lt;p&gt;Below are some of the benefits of using typescript with Reactjs,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is possible to use latest JavaScript features&lt;/li&gt; 
   &lt;li&gt;Use of interfaces for complex type definitions&lt;/li&gt; 
   &lt;li&gt;IDEs such as VS Code was made for TypeScript&lt;/li&gt; 
   &lt;li&gt;Avoid bugs with the ease of readability and Validation&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/h3&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When a user logs in and reload, to persist the state generally we add the load user action in the useEffect hooks in the main App.js. While using Redux, loadUser action can be easily accessed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {loadUser}  from &#39;../actions/auth&#39;;
store.dispatch(loadUser());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;But while using &lt;strong&gt;Context API&lt;/strong&gt;, to access context in App.js, wrap the AuthState in index.js so that App.js can access the auth context. Now whenever the page reloads, no matter what route you are on, the user will be authenticated as &lt;strong&gt;loadUser&lt;/strong&gt; action will be triggered on each re-render.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;index.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import App from &#39;./App&#39;;
import AuthState from &#39;./context/auth/AuthState&#39;

ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;AuthState&amp;gt;
      &amp;lt;App /&amp;gt;
    &amp;lt;/AuthState&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  const authContext = useContext(AuthContext);

  const { loadUser } = authContext;

  useEffect(() =&amp;gt; {
    loadUser();
  },[])
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;loadUser&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;    const loadUser = async () =&amp;gt; {
        const token = sessionStorage.getItem(&#39;token&#39;);

        if(!token){
            dispatch({
                type: ERROR
            })
        }
        setAuthToken(token);

        try {
            const res = await axios(&#39;/api/auth&#39;); 

            dispatch({
                type: USER_LOADED,
                payload: res.data.data
            })
            
        } catch (err) {
           console.error(err); 
        }
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;326&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of new JSX transform?&lt;/h3&gt; &lt;p&gt;There are three major benefits of new JSX transform,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is possible to use JSX without importing React packages&lt;/li&gt; 
   &lt;li&gt;The compiled output might improve the bundle size in a small amount&lt;/li&gt; 
   &lt;li&gt;The future improvements provides the flexibility to reduce the number of concepts to learn React.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How does new JSX transform different from old transform?&lt;/h3&gt; &lt;p&gt;The new JSX transform doesn‚Äôt require React to be in scope. i.e, You don‚Äôt need to import React package for simple scenarios.&lt;/p&gt; &lt;p&gt;Let‚Äôs take an example to look at the main differences between the old and the new transform,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Old Transform:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;

function App() {
  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now JSX transform convert the above code into regular JavaScript as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;

function App() {
  return React.createElement(&#39;h1&#39;, null, &#39;Good morning!!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;New Transform:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The new JSX transform doesn‚Äôt require any React imports&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function App() {
  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Under the hood JSX transform compiles to below code&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {jsx as _jsx} from &#39;react/jsx-runtime&#39;;

function App() {
  return _jsx(&#39;h1&#39;, { children: &#39;Good morning!!&#39; });
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You still need to import React to use Hooks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get redux scaffolding using create-react-app?&lt;/h3&gt; &lt;p&gt;Redux team has provided official redux+js or redux+typescript templates for create-react-app project. The generated project setup includes,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Redux Toolkit and React-Redux dependencies&lt;/li&gt; 
   &lt;li&gt;Create and configure Redux store&lt;/li&gt; 
   &lt;li&gt;React-Redux &lt;code&gt;&amp;lt;Provider&amp;gt;&lt;/code&gt; passing the store to React components&lt;/li&gt; 
   &lt;li&gt;Small ‚Äúcounter‚Äù example to demo how to add redux logic and React-Redux hooks API to interact with the store from components&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The below commands need to be executed along with template option as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Javascript template:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npx create-react-app my-app --template redux
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;&lt;strong&gt;Typescript template:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npx create-react-app my-app --template redux-typescript
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are React Server components?&lt;/h3&gt; &lt;p&gt;React Server Component is a way to write React component that gets rendered in the server-side with the purpose of improving React app performance. These components allow us to load components from the backend.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; React Server Components is still under development and not recommended for production yet.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is prop drilling?&lt;/h3&gt; &lt;p&gt;Prop Drilling is the process by which you pass data from one component of the React Component tree to another by going through other components that do not need the data but only help in passing it around.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to prevent state mutation?&lt;/h3&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>laxyapahuja/bunken</title>
      <link>https://github.com/laxyapahuja/bunken</link>
      <description>&lt;p&gt;A chrome extension to download ebooks directly from Goodreads.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bunken (ÊñáÁåÆ)&lt;/h1&gt; 
&lt;p&gt;A chrome extension to download ebooks directly from Goodreads. Fetches ebooks from &lt;a href=&quot;http://libgen.is&quot;&gt;LibGen&lt;/a&gt;, &lt;a href=&quot;http://libgen.is/fiction&quot;&gt;LibGen Fiction&lt;/a&gt;, &lt;a href=&quot;http://library.memoryoftheworld.org&quot;&gt;Memory Of The World&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://openlibrary.org&quot;&gt;OpenLibrary&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://media.discordapp.net/attachments/706928005313855620/847449469381509130/unknown.png?width=970&amp;amp;height=701&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;How to install&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repository.&lt;/li&gt; 
 &lt;li&gt;Open chrome extensions panel by visiting &lt;code&gt;chrome://extensions&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Turn developer mode on.&lt;/li&gt; 
 &lt;li&gt;Click on Load Unpacked.&lt;/li&gt; 
 &lt;li&gt;Select the folder containing the repository with the root directory.&lt;/li&gt; 
 &lt;li&gt;Visit any books‚Äô page on Goodreads. The ebooks should load under Related Books section.&lt;/li&gt; 
 &lt;li&gt;Choose different sources according to your needs.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;Help contribute by using it, finding bugs and opening issues. Pull requests are also appreciated!&lt;/p&gt; 
&lt;p&gt;API repository available at &lt;a href=&quot;https://github.com/laxyapahuja/bunken-api&quot;&gt;laxyapahuja/bunken-api&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chartjs/Chart.js</title>
      <link>https://github.com/chartjs/Chart.js</link>
      <description>&lt;p&gt;Simple HTML5 Charts using the &lt;canvas&gt; tag&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://www.chartjs.org/media/logo-title.svg?sanitize=true&quot;&gt;&lt;br&gt; Simple yet flexible JavaScript charting for designers &amp;amp; developers &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.chartjs.org/docs/latest/getting-started/installation.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/chartjs/Chart.js.svg?style=flat-square&amp;amp;maxAge=600&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chartjs/Chart.js/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img alt=&quot;GitHub Workflow Status&quot; src=&quot;https://img.shields.io/github/workflow/status/chartjs/Chart.js/CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/chartjs/Chart.js?branch=master&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/chartjs/Chart.js.svg?style=flat-square&amp;amp;maxAge=600&quot; alt=&quot;Coverage&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chartjs/awesome&quot;&gt;&lt;img src=&quot;https://awesome.re/badge-flat2.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://chartjs-slack.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-chartjs-blue.svg?style=flat-square&amp;amp;maxAge=3600&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All the links point to the new version 3 of the lib.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/getting-started/index&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/general/data-structures&quot;&gt;General&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/configuration/index&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/charts/line&quot;&gt;Charts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/axes/index&quot;&gt;Axes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/docs/latest/developers/index&quot;&gt;Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chartjs/awesome&quot;&gt;Popular Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chartjs.org/samples/&quot;&gt;Samples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In case you are looking for the docs of version 2, you will have to specify the specific version in the url like this: &lt;a href=&quot;https://www.chartjs.org/docs/2.9.4/&quot;&gt;https://www.chartjs.org/docs/2.9.4/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Instructions on building and testing Chart.js can be found in &lt;a href=&quot;https://www.chartjs.org/docs/master/developers/contributing.html#building-and-testing&quot;&gt;the documentation&lt;/a&gt;. Before submitting an issue or a pull request, please take a moment to look over the &lt;a href=&quot;https://www.chartjs.org/docs/master/developers/contributing&quot;&gt;contributing guidelines&lt;/a&gt; first. For support, please post questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/chartjs&quot;&gt;Stack Overflow&lt;/a&gt; with the &lt;code&gt;chartjs&lt;/code&gt; tag.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Chart.js is available under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iamadamdev/bypass-paywalls-chrome</title>
      <link>https://github.com/iamadamdev/bypass-paywalls-chrome</link>
      <description>&lt;p&gt;Bypass Paywalls web browser extension for Chrome and Firefox.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/raw/master/src/icons/bypass.png&quot; width=&quot;75&quot; height=&quot;75&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Bypass Paywalls&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Bypass Paywalls is a web browser extension to help bypass paywalls for selected sites.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Google Chrome / Microsoft Edge&lt;/strong&gt; (Custom sites supported)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download this repo as a &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/archive/master.zip&quot;&gt;ZIP file from GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Unzip the file and you should have a folder named &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In Chrome/Edge go to the extensions page (&lt;code&gt;chrome://extensions&lt;/code&gt; or &lt;code&gt;edge://extensions&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Enable Developer Mode.&lt;/li&gt; 
 &lt;li&gt;Drag the &lt;code&gt;bypass-paywalls-chrome-master&lt;/code&gt; folder anywhere on the page to import it (do not delete the folder afterwards).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Mozilla Firefox&lt;/strong&gt; (Custom sites not supported)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/bypass-paywalls-firefox/&quot;&gt;Download the latest version from the Firefox add-ons store&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every time you open Chrome it may warn you about running extensions in developer mode, just click ‚úï to keep the extension enabled.&lt;/li&gt; 
 &lt;li&gt;You will be logged out for any site you have checked.&lt;/li&gt; 
 &lt;li&gt;This extension works best alongside the adblocker uBlock Origin.&lt;/li&gt; 
 &lt;li&gt;The Firefox version supports automatic updates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bypass the following sites‚Äô paywalls with this extension:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.adweek.com&quot;&gt;Adweek&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ad.nl&quot;&gt;Algemeen Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.americanbanker.com&quot;&gt;American Banker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ambito.com/&quot;&gt;√Åmbito&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.baltimoresun.com&quot;&gt;Baltimore Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.barrons.com&quot;&gt;Barron‚Äôs&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloombergquint.com&quot;&gt;Bloomberg Quint&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bloomberg.com&quot;&gt;Bloomberg&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bndestem.nl&quot;&gt;BN De Stem&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bd.nl&quot;&gt;Brabants Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.brisbanetimes.com.au&quot;&gt;Brisbane Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.businessinsider.com&quot;&gt;Business Insider&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.caixinglobal.com&quot;&gt;Caixin&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.centralwesterndaily.com.au&quot;&gt;Central Western Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://cen.acs.org&quot;&gt;Chemical &amp;amp; Engineering News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagotribune.com&quot;&gt;Chicago Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.corriere.it&quot;&gt;Corriere Della Sera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.chicagobusiness.com&quot;&gt;Crain‚Äôs Chicago Business&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailypress.com&quot;&gt;Daily Press&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.gelderlander.nl&quot;&gt;De Gelderlander&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.groene.nl&quot;&gt;De Groene Amsterdammer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.destentor.nl&quot;&gt;De Stentor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://speld.nl&quot;&gt;De Speld&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tijd.be&quot;&gt;De Tijd&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.volkskrant.nl&quot;&gt;De Volkskrant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.demorgen.be&quot;&gt;DeMorgen&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.denverpost.com&quot;&gt;Denver Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.df.cl&quot;&gt;Diario Financiero&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.editorialedomani.it/&quot;&gt;Domani&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dynamed.com&quot;&gt;Dynamed Plus&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ed.nl&quot;&gt;Eindhovens Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elmercurio.com&quot;&gt;El Mercurio&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elpais.com/&quot;&gt;El Pais&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elperiodico.com/&quot;&gt;El Periodico&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.elu24.ee&quot;&gt;Elu24&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.britannica.com&quot;&gt;Encyclopedia Britannica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.estadao.com.br&quot;&gt;Estad√£o&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.examiner.com.au&quot;&gt;Examiner&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.expansion.com&quot;&gt;Expansi√≥n&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fnlondon.com&quot;&gt;Financial News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.financialpost.com&quot;&gt;Financial Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ft.com&quot;&gt;Financial Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.firstthings.com&quot;&gt;First Things&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.foreignpolicy.com&quot;&gt;Foreign Policy&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.fortune.com&quot;&gt;Fortune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.genomeweb.com&quot;&gt;Genomeweb&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.glassdoor.com&quot;&gt;Glassdoor&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.globes.co.il&quot;&gt;Globes&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.grubstreet.com&quot;&gt;Grubstreet&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.co.il&quot;&gt;Haaretz.co.il&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.haaretz.com&quot;&gt;Haaretz.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.handelsblatt.com&quot;&gt;Handelsblatt&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://harpers.org&quot;&gt;Harper‚Äôs Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.courant.com&quot;&gt;Hartford Courant&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.hbr.org&quot;&gt;Harvard Business Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.heraldsun.com.au&quot;&gt;Herald Sun&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://fd.nl&quot;&gt;Het Financieel Dagblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.historyextra.com&quot;&gt;History Extra&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.humo.be&quot;&gt;Humo&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ilmanifesto.it&quot;&gt;Il Manifesto&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inc.com&quot;&gt;Inc.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.interest.co.nz&quot;&gt;Interest.co.nz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.investorschronicle.co.uk&quot;&gt;Investors Chronicle&lt;/a&gt; &lt;a href=&quot;https://www.lecho.be&quot;&gt;L‚Äô√âcho&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://labusinessjournal.com&quot;&gt;L.A. Business Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lanacion.com.ar&quot;&gt;La Naci√≥n&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.repubblica.it&quot;&gt;La Repubblica&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lastampa.it&quot;&gt;La Stampa&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latercera.com&quot;&gt;La Tercera&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lavoixdunord.fr/&quot;&gt;La Voix du Nord&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ledevoir.com&quot;&gt;Le Devoir&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.leparisien.fr&quot;&gt;Le Parisien&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lesechos.fr&quot;&gt;Les √âchos&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.loebclassics.com&quot;&gt;Loeb Classical Library&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.lrb.co.uk&quot;&gt;London Review of Books&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.latimes.com&quot;&gt;Los Angeles Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sloanreview.mit.edu&quot;&gt;MIT Sloan Management Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.technologyreview.com&quot;&gt;MIT Technology Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medium.com&quot;&gt;Medium&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.medscape.com&quot;&gt;Medscape&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://mexiconewsdaily.com&quot;&gt;Mexicon News Daily&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mv-voice.com&quot;&gt;Mountain View Voice&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nydailynews.com/&quot;&gt;New York Daily News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nrc.nl&quot;&gt;NRC Handelsblad&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ntnews.com.au&quot;&gt;NT News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nationalpost.com&quot;&gt;National Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzz.ch&quot;&gt;Neue Z√ºrcher Zeitung&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nymag.com&quot;&gt;New York Magazine&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nzherald.co.nz&quot;&gt;New Zealand Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://asia.nikkei.com&quot;&gt;Nikkei Asian Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.ocregister.com&quot;&gt;Orange County Register&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.orlandosentinel.com&quot;&gt;Orlando Sentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.pzc.nl&quot;&gt;PZC&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.paloaltoonline.com&quot;&gt;Palo Alto Online&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.parool.nl&quot;&gt;Parool&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.postimees.ee&quot;&gt;Postimees&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://qz.com&quot;&gt;Quartz&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.quora.com&quot;&gt;Quora&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://quotidiani.gelocal.it&quot;&gt;Quotidiani Gelocal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://republic.ru&quot;&gt;Republic.ru&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.reuters.com&quot;&gt;Reuters&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sandiegouniontribune.com&quot;&gt;San Diego Union Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sfchronicle.com&quot;&gt;San Francisco Chronicle&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.scientificamerican.com&quot;&gt;Scientific American&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://seekingalpha.com&quot;&gt;Seeking Alpha&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://slate.com&quot;&gt;Slate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://sofrep.com&quot;&gt;SOFREP&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.statista.com&quot;&gt;Statista&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.startribune.com&quot;&gt;Star Tribune&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.stuff.co.nz&quot;&gt;Stuff&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.sun-sentinel.com&quot;&gt;SunSentinel&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.techinasia.com&quot;&gt;Tech in Asia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraaf.nl&quot;&gt;Telegraaf&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.adelaidenow.com.au&quot;&gt;The Advertiser&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theadvocate.com.au&quot;&gt;The Advocate&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theage.com.au&quot;&gt;The Age&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-american-interest.com&quot;&gt;The American Interest&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theatlantic.com&quot;&gt;The Atlantic&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.afr.com&quot;&gt;The Australian Financial Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theaustralian.com.au&quot;&gt;The Australian&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.bizjournals.com&quot;&gt;The Business Journals&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.canberratimes.com.au&quot;&gt;The Canberra Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecourier.com.au&quot;&gt;The Courier&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.couriermail.com.au&quot;&gt;The Courier Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thecut.com&quot;&gt;The Cut&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.dailytelegraph.com.au&quot;&gt;The Daily Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thediplomat.com&quot;&gt;The Diplomat&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.economist.com&quot;&gt;The Economist&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theglobeandmail.com&quot;&gt;The Globe and Mail&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.theherald.com.au&quot;&gt;The Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thehindu.com&quot;&gt;The Hindu&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.irishtimes.com&quot;&gt;The Irish Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.japantimes.co.jp&quot;&gt;The Japan Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.kansascity.com&quot;&gt;The Kansas City Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mercurynews.com&quot;&gt;The Mercury News&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themercury.com.au&quot;&gt;The Mercury Tasmania&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.mcall.com&quot;&gt;The Morning Call&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenation.com&quot;&gt;The Nation&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thenational.scot&quot;&gt;The National&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newstatesman.com&quot;&gt;The New Statesman&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.nytimes.com&quot;&gt;The New York Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.newyorker.com&quot;&gt;The New Yorker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.news-gazette.com&quot;&gt;The News-Gazette&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.inquirer.com&quot;&gt;The Philadelphia Inquirer&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thesaturdaypaper.com.au&quot;&gt;The Saturday Paper&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.seattletimes.com&quot;&gt;The Seattle Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.com.au&quot;&gt;The Spectator Australia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.spectator.co.uk&quot;&gt;The Spectator&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.smh.com.au&quot;&gt;The Sydney Morning Herald&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.telegraph.co.uk&quot;&gt;The Telegraph&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thetimes.co.uk&quot;&gt;The Times&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thestar.com&quot;&gt;The Toronto Star&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wsj.com&quot;&gt;The Wall Street Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.washingtonpost.com&quot;&gt;The Washington Post&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.thewrap.com&quot;&gt;The Wrap&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.themarker.com&quot;&gt;TheMarker&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.the-tls.co.uk&quot;&gt;Times Literary Supplement&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.towardsdatascience.com&quot;&gt;Towards Data Science&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.trouw.nl&quot;&gt;Trouw&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.tubantia.nl&quot;&gt;Tubantia&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vanityfair.com&quot;&gt;Vanity Fair&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vn.nl&quot;&gt;Vrij Nederland&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.vulture.com/&quot;&gt;Vulture&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://journalnow.com&quot;&gt;Winston-Salem Journal&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.wired.com&quot;&gt;Wired&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.worldpoliticsreview.com&quot;&gt;World Politics Review&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.zeit.de&quot;&gt;Zeit Online&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sites with limited number of free articles&lt;/h3&gt; 
&lt;p&gt;The free article limit can normally be bypassed by removing cookies for the site.*&lt;/p&gt; 
&lt;p&gt;Install the Cookie Remover extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;for Mozilla Firefox&lt;/a&gt;. Please rate it 5 stars if you find it useful.&lt;/p&gt; 
&lt;p&gt;When coming across a paywall click the cookie icon to remove the cookies then refresh the page.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;*May not always succeed&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;New site requests&lt;/h3&gt; 
&lt;p&gt;Only large or major sites will be considered. Usually premium articles cannot be bypassed as they are behind a hard paywall.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the uBlock Origin extension if it hasn‚Äôt been installed already. See if you are still getting a paywall.&lt;/li&gt; 
 &lt;li&gt;Check if using Cookie Remover (&lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;Google Chrome version&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cookie-remover/&quot;&gt;Mozilla Firefox version&lt;/a&gt;) can bypass the paywall. If not, continue to the next step.&lt;/li&gt; 
 &lt;li&gt;First search &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues&quot;&gt;Issues&lt;/a&gt; to see if the site has been requested already.&lt;/li&gt; 
 &lt;li&gt;Visit an article on the site you want to bypass the paywall for and copy the article title.&lt;/li&gt; 
 &lt;li&gt;Open up a new incognito window (Ctrl+Shift+N on Chrome) or Private window (Ctrl+Shift+P on Firefox), and paste the article title into Google.&lt;/li&gt; 
 &lt;li&gt;Click on the same article from the Google search results page.&lt;/li&gt; 
 &lt;li&gt;If it loads without a paywall you can &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;submit a request&lt;/a&gt; and replace the entire template text with the word ‚ÄúConfirmed‚Äù. Otherwise please do not submit an issue as this extension cannot bypass it either.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This extension works best alongside uBlock Origin &lt;a href=&quot;https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm&quot;&gt;for Google Chrome&lt;/a&gt; or &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/&quot;&gt;for Mozilla Firefox&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If a site doesn‚Äôt work, try turning off uBlock and refreshing.&lt;/li&gt; 
 &lt;li&gt;Try clearing &lt;a href=&quot;https://chrome.google.com/webstore/detail/cookie-remover/kcgpggonjhmeaejebeoeomdlohicfhce&quot;&gt;cookies&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Make sure you‚Äôre running the latest version of Bypass Paywalls.&lt;/li&gt; 
 &lt;li&gt;If a site is having problems try unchecking ‚Äú*General Paywall Bypass*‚Äù in Options.&lt;/li&gt; 
 &lt;li&gt;If none of these work, you can submit an issue &lt;a href=&quot;https://github.com/iamadamdev/bypass-paywalls-chrome/issues/new/choose&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing - Pull Requests&lt;/h3&gt; 
&lt;p&gt;PRs are welcome.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If making a PR to add a new site, confirm your changes actually bypass the paywall.&lt;/li&gt; 
 &lt;li&gt;At a minimum these files need to be updated: &lt;code&gt;README.md&lt;/code&gt;, &lt;code&gt;manifest-ff.json&lt;/code&gt;, &lt;code&gt;src/js/sites.js&lt;/code&gt;, and possibly &lt;code&gt;src/js/background.js&lt;/code&gt;, and/or &lt;code&gt;src/js/contentScript.js&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Follow existing code-style and use camelCase.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://github.com/standard/semistandard&quot;&gt;JavaScript Semi-Standard Style linter&lt;/a&gt;. Don‚Äôt need to follow it exactly. There will be some errors (e.g., do not use it on &lt;code&gt;sites.js&lt;/code&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Show your support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow me on Twitter &lt;a href=&quot;https://twitter.com/iamadamdev&quot;&gt;@iamadamdev&lt;/a&gt; for updates.&lt;/li&gt; 
 &lt;li&gt;I do not ask for donations, all I ask is that you star this repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Disclaimer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;This software is provided for educational purposes only and is provided ‚ÄúAS IS‚Äù, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>goldbergyoni/javascript-testing-best-practices</title>
      <link>https://github.com/goldbergyoni/javascript-testing-best-practices</link>
      <description>&lt;p&gt;üìóüåê üö¢ Comprehensive and exhaustive JavaScript &amp; Node.js testing best practices (June 2021)&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/jtbp-header-blue.png&quot; width=&quot;1920px&quot;&gt; 
&lt;br&gt; 
&lt;h1&gt;üëá Why this guide can take your testing skills to the next level&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;üìó 46+ best practices: Super-comprehensive and exhaustive&lt;/h2&gt; 
&lt;p&gt;This is a guide for JavaScript &amp;amp; Node.js reliability from A-Z. It summarizes and curates for you dozens of the best blog posts, books and tools the market has to offer&lt;/p&gt; 
&lt;h2&gt;üö¢ Advanced: Goes 10,000 miles beyond the basics&lt;/h2&gt; 
&lt;p&gt;Hop into a journey that travels way beyond the basics into advanced topics like testing in production, mutation testing, property-based testing and many other strategic &amp;amp; professional tools. Should you read every word in this guide your testing skills are likely to go way above the average&lt;/p&gt; 
&lt;h2&gt;üåê Full-stack: front, backend, CI, anything&lt;/h2&gt; 
&lt;p&gt;Start by understanding the ubiquitous testing practices that are the foundation for any application tier. Then, delve into your area of choice: frontend/UI, backend, CI or maybe all of them?&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Written By Yoni Goldberg&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript &amp;amp; Node.js consultant&lt;/li&gt; 
 &lt;li&gt;üìó &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt; - My comprehensive online course with more than &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;10 hours of video&lt;/a&gt;, 14 test types and more than 40 best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goldbergyoni/&quot;&gt;Follow me on Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h3&gt;Translations - read in your own language&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üá®üá≥&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-zh-CN.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/yvesyao&quot;&gt;Yves yao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üá∞üá∑&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme.kr.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/ragubyun&quot;&gt;Rain Byun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üáµüá±&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-pl.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üá™üá∏&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-es.md&quot;&gt;Spanish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/sanguino&quot;&gt;Miguel G. Sanguino&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üáßüá∑&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-pt-br.md&quot;&gt;Portuguese-BR&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/iagocavalcante&quot;&gt;Iago Angelim Costa Cavalcante&lt;/a&gt; , &lt;a href=&quot;https://github.com/DouglasMV&quot;&gt;Douglas Mariano Valero&lt;/a&gt; and &lt;a href=&quot;https://github.com/koooge&quot;&gt;koooge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Want to translate to your own language? please open an issue üíú&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;Table of Contents&lt;/code&gt;&lt;/h2&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-0%EF%B8%8F%E2%83%A3-the-golden-rule&quot;&gt;&lt;code&gt;Section 0: The Golden Rule&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;A single advice that inspires all the others (1 special bullet)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-1-the-test-anatomy-1&quot;&gt;&lt;code&gt;Section 1: The Test Anatomy&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;The foundation - structuring clean tests (12 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-2%EF%B8%8F%E2%83%A3-backend-testing&quot;&gt;&lt;code&gt;Section 2: Backend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Writing backend and Microservices tests efficiently (8 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-3%EF%B8%8F%E2%83%A3-frontend-testing&quot;&gt;&lt;code&gt;Section 3: Frontend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Writing tests for web UI including component and E2E tests (11 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-4%EF%B8%8F%E2%83%A3-measuring-test-effectiveness&quot;&gt;&lt;code&gt;Section 4: Measuring Tests Effectiveness&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Watching the watchman - measuring test quality (4 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-5%EF%B8%8F%E2%83%A3-ci-and-other-quality-measures&quot;&gt;&lt;code&gt;Section 5: Continuous Integration&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Guidelines for CI in the JS world (9 bullets)&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 0Ô∏è‚É£: The Golden Rule&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™Ô∏è 0 The Golden Rule: Design for lean testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Testing code is not like production-code - design it to be dead-simple, short, abstraction-free, flat, delightful to work with, lean. One should look at a test and get the intent instantly.&lt;/p&gt; 
&lt;p&gt;Our minds are full with the main production code, we don‚Äôt have ‚Äòheadspace‚Äô for additional complexity. Should we try to squeeze yet another challenging code into our poor brain it will slow the team down which works against the reason we do testing. Practically this is where many teams just abandon testing.&lt;/p&gt; 
&lt;p&gt;The tests are an opportunity for something else - a friendly and smiley assistant, one that it‚Äôs delightful to work with and delivers great value for such a small investment. Science tells us that we have two brain systems: system 1 is used for effortless activities like driving a car on an empty road and system 2 which is meant for complex and conscious operations like solving a math equation. Design your test for system 1, when looking at test code it should &lt;em&gt;feel&lt;/em&gt; as easy as modifying an HTML document and not like solving 2X(17 √ó 24).&lt;/p&gt; 
&lt;p&gt;This can be achieved by selectively cherry-picking techniques, tools and test targets that are cost-effective and provide great ROI. Test only as much as needed, strive to keep it nimble, sometimes it‚Äôs even worth dropping some tests and trade reliability for agility and simplicity.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/headspace.png&quot; alt=&quot;alt text&quot; title=&quot;We have no head room for additional complexity&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Most of the advice below are derivatives of this principle.&lt;/p&gt; 
&lt;h3&gt;Ready to start?&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 1: The Test Anatomy&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.1 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; A test report should tell whether the current application revision satisfies the requirements for the people who are not necessarily familiar with the code: the tester, the DevOps engineer who is deploying and the future you two years from now. This can be achieved best if the tests speak at the requirements level and include 3 parts:&lt;/p&gt; 
&lt;p&gt;(1) What is being tested? For example, the ProductsService.addNewProduct method&lt;/p&gt; 
&lt;p&gt;(2) Under what circumstances and scenario? For example, no price is passed to the method&lt;/p&gt; 
&lt;p&gt;(3) What is the expected result? For example, the new product is not approved&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named ‚ÄúAdd product‚Äù failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;üëá Note:&lt;/strong&gt; Each bullet has code examples and sometime also an image illustration. Click to expand &lt;br&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Mocha to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//1. unit under test
describe(&#39;Products Service&#39;, function() {
  describe(&#39;Add new product&#39;, function() {
    //2. scenario and 3. expectation
    it(&#39;When no price is specified, then the product status is pending approval&#39;, ()=&amp;gt; {
      const newProduct = new ProductService().add(...);
      expect(newProduct.status).to.equal(&#39;pendingApproval&#39;);
    });
  });
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-1-3-parts.jpeg&quot; alt=&quot;alt text&quot; title=&quot;A test name that constitutes 3 parts&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;¬© &lt;b&gt;Credits &amp;amp; read-more&lt;/b&gt;&lt;/summary&gt; 1. 
 &lt;a href=&quot;https://osherove.com/blog/2005/4/3/naming-standards-for-unit-tests.html&quot;&gt;Roy Osherove - Naming standards for unit tests&lt;/a&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.2 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Structure your tests with 3 well-separated sections Arrange, Act &amp;amp; Assert (AAA). Following this structure guarantees that the reader spends no brain-CPU on understanding the test plan:&lt;/p&gt; 
&lt;p&gt;1st A - Arrange: All the setup code to bring the system to the scenario the test aims to simulate. This might include instantiating the unit under test constructor, adding DB records, mocking/stubbing on objects and any other preparation code&lt;/p&gt; 
&lt;p&gt;2nd A - Act: Execute the unit under test. Usually 1 line of code&lt;/p&gt; 
&lt;p&gt;3rd A - Assert: Ensure that the received value satisfies the expectation. Usually 1 line of code&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Not only do you spend hours understanding the main code, but what should have been the simplest part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test structured with the AAA pattern&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;describe(&quot;Customer classifier&quot;, () =&amp;gt; {
  test(&quot;When customer spent more than 500$, should be classified as premium&quot;, () =&amp;gt; {
    //Arrange
    const customerToClassify = { spent: 505, joined: new Date(), id: 1 };
    const DBStub = sinon.stub(dataAccess, &quot;getCustomer&quot;).reply({ id: 1, classification: &quot;regular&quot; });

    //Act
    const receivedClassification = customerClassifier.classifyCustomer(customerToClassify);

    //Assert
    expect(receivedClassification).toMatch(&quot;premium&quot;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: No separation, one bulk, harder to interpret&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Should be classified as premium&quot;, () =&amp;gt; {
  const customerToClassify = { spent: 505, joined: new Date(), id: 1 };
  const DBStub = sinon.stub(dataAccess, &quot;getCustomer&quot;).reply({ id: 1, classification: &quot;regular&quot; });
  const receivedClassification = customerClassifier.classifyCustomer(customerToClassify);
  expect(receivedClassification).toMatch(&quot;premium&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è1.3 Describe expectations in a product language: use BDD-style assertions&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Coding your tests in a declarative-style allows the reader to get the grab instantly without spending even a single brain-CPU cycle. When you write imperative code that is packed with conditional logic, the reader is forced to exert more brain-CPU cycles. In that case, code the expectation in a human-like language, declarative BDD style using &lt;code&gt;expect&lt;/code&gt; or &lt;code&gt;should&lt;/code&gt; and not using custom code. If Chai &amp;amp; Jest doesn‚Äôt include the desired assertion and it‚Äôs highly repeatable, consider &lt;a href=&quot;https://jestjs.io/docs/en/expect#expectextendmatchers&quot;&gt;extending Jest matcher (Jest)&lt;/a&gt; or writing a &lt;a href=&quot;https://www.chaijs.com/guide/plugins/&quot;&gt;custom Chai plugin&lt;/a&gt; &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; The team will write less tests and decorate the annoying ones with .skip()&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha &amp;amp; Chai&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: The reader must skim through not so short, and imperative code just to get the test story&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When asking for an admin, ensure only ordered admins in results&quot;, () =&amp;gt; {
  //assuming we&#39;ve added here two admins &quot;admin1&quot;, &quot;admin2&quot; and &quot;user1&quot;
  const allAdmins = getUsers({ adminOnly: true });

  let admin1Found,
    adming2Found = false;

  allAdmins.forEach(aSingleUser =&amp;gt; {
    if (aSingleUser === &quot;user1&quot;) {
      assert.notEqual(aSingleUser, &quot;user1&quot;, &quot;A user was found and not admin&quot;);
    }
    if (aSingleUser === &quot;admin1&quot;) {
      admin1Found = true;
    }
    if (aSingleUser === &quot;admin2&quot;) {
      admin2Found = true;
    }
  });

  if (!admin1Found || !admin2Found) {
    throw new Error(&quot;Not all admins were returned&quot;);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Skimming through the following declarative test is a breeze&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When asking for an admin, ensure only ordered admins in results&quot;, () =&amp;gt; {
  //assuming we&#39;ve added here two admins
  const allAdmins = getUsers({ adminOnly: true });

  expect(allAdmins)
    .to.include.ordered.members([&quot;admin1&quot;, &quot;admin2&quot;])
    .but.not.include.ordered.members([&quot;user1&quot;]);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.4 Stick to black-box testing: Test only public methods&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Testing the internals brings huge overhead for almost nothing. If your code/API delivers the right results, should you really invest your next 3 hours in testing HOW it worked internally and then maintain these fragile tests? Whenever a public behavior is checked, the private implementation is also implicitly tested and your tests will break only if there is a certain problem (e.g. wrong output). This approach is also referred to as &lt;code&gt;behavioral testing&lt;/code&gt;. On the other side, should you test the internals (white box approach)‚Ää‚Äî‚Ääyour focus shifts from planning the component outcome to nitty-gritty details and your test might break because of minor code refactors although the results are fine - this dramatically increases the maintenance burden &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Your tests behave like the &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Boy_Who_Cried_Wolf&quot;&gt;boy who cried wolf&lt;/a&gt;: shouting false-positive cries (e.g., A test fails because a private variable name was changed). Unsurprisingly, people will soon start to ignore the CI notifications until someday, a real bug gets ignored‚Ä¶&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test case is testing the internals for no good reason&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha &amp;amp; Chai&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ProductService {
  //this method is only used internally
  //Change this name will make the tests fail
  calculateVATAdd(priceWithoutVAT) {
    return { finalPrice: priceWithoutVAT * 1.2 };
    //Change the result format or key name above will make the tests fail
  }
  //public method
  getPrice(productId) {
    const desiredProduct = DB.getProduct(productId);
    finalPrice = this.calculateVATAdd(desiredProduct.price).finalPrice;
    return finalPrice;
  }
}

it(&quot;White-box test: When the internal methods get 0 vat, it return 0 response&quot;, async () =&amp;gt; {
  //There&#39;s no requirement to allow users to calculate the VAT, only show the final price. Nevertheless we falsely insist here to test the class internals
  expect(new ProductService().calculateVATAdd(0).finalPrice).to.equal(0);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è Ô∏è1.5 Choose the right test doubles: Avoid mocks in favor of stubs and spies&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Test doubles are a necessary evil because they are coupled to the application internals, yet some provide immense value (&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot; data-href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot;&gt;Read here a reminder about test doubles: mocks vs stubs vs spies&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Before using test doubles, ask a very simple question: Do I use it to test functionality that appears, or could appear, in the requirements document? If no, it‚Äôs a white-box testing smell.&lt;/p&gt; 
&lt;p&gt;For example, if you want to test that your app behaves reasonably when the payment service is down, you might stub the payment service and trigger some ‚ÄòNo Response‚Äô return to ensure that the unit under test returns the right value. This checks our application behavior/response/outcome under certain scenarios. You might also use a spy to assert that an email was sent when that service is down‚Ää‚Äî‚Ääthis is again a behavioral check which is likely to appear in a requirements doc (‚ÄúSend an email if payment couldn‚Äôt be saved‚Äù). On the flip side, if you mock the Payment service and ensure that it was called with the right JavaScript types‚Ää‚Äî‚Ääthen your test is focused on internal things that have nothing to do with the application functionality and are likely to change frequently &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Any refactoring of code mandates searching for all the mocks in the code and updating accordingly. Tests become a burden rather than a helpful friend&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern example: Mocks focus on the internals&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Sinon-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Sinon&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When a valid product is about to be deleted, ensure data access DAL was called once, with the right product and right config&quot;, async () =&amp;gt; {
  //Assume we already added a product
  const dataAccessMock = sinon.mock(DAL);
  //hmmm BAD: testing the internals is actually our main goal here, not just a side-effect
  dataAccessMock
    .expects(&quot;deleteProduct&quot;)
    .once()
    .withArgs(DBConfig, theProductWeJustAdded, true, false);
  new ProductService().deletePrice(theProductWeJustAdded);
  dataAccessMock.verify();
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: spies are focused on testing the requirements but as a side-effect are unavoidably touching to the internals&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When a valid product is about to be deleted, ensure an email is sent&quot;, async () =&amp;gt; {
  //Assume we already added here a product
  const spy = sinon.spy(Emailer.prototype, &quot;sendEmail&quot;);
  new ProductService().deletePrice(theProductWeJustAdded);
  //hmmm OK: we deal with internals? Yes, but as a side effect of testing the requirements (sending an email)
  expect(spy.calledOnce).to.be.true;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;üìó Want to learn all these practices with live video?&lt;/h2&gt; 
&lt;h3&gt;Visit my online course &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è1.6 Don‚Äôt ‚Äúfoo‚Äù, use realistic input data&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Often production bugs are revealed under some very specific and surprising input‚Ää‚Äî‚Ääthe more realistic the test input is, the greater the chances are to catch bugs early. Use dedicated libraries like &lt;a href=&quot;https://www.npmjs.com/package/faker&quot;&gt;Faker&lt;/a&gt; to generate pseudo-real data that resembles the variety and form of production data. For example, such libraries can generate realistic phone numbers, usernames, credit card, company names, and even ‚Äòlorem ipsum‚Äô text. You may also create some tests (on top of unit tests, not as a replacement) that randomize fakers data to stretch your unit under test or even import real data from your production environment. Want to take it to the next level? See the next bullet (property-based testing). &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; All your development testing will falsely show green when you use synthetic inputs like ‚ÄúFoo‚Äù, but then production might turn red when a hacker passes-in a nasty string like ‚Äú@3e2ddsf . ##‚Äô 1 fdsfds . fds432 AAAA‚Äù&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test suite that passes due to non-realistic data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addProduct = (name, price) =&amp;gt; {
  const productNameRegexNoSpace = /^\S*$/; //no white-space allowed

  if (!productNameRegexNoSpace.test(name)) return false; //this path never reached due to dull input

  //some logic here
  return true;
};

test(&quot;Wrong: When adding new product with valid properties, get successful confirmation&quot;, async () =&amp;gt; {
  //The string &quot;Foo&quot; which is used in all tests never triggers a false result
  const addProductResult = addProduct(&quot;Foo&quot;, 5);
  expect(addProductResult).toBe(true);
  //Positive-false: the operation succeeded because we never tried with long
  //product name including spaces
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: Randomizing realistic input&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;Better: When adding new valid product, get successful confirmation&quot;, async () =&amp;gt; {
  const addProductResult = addProduct(faker.commerce.productName(), faker.random.number());
  //Generated random input: {&#39;Sleek Cotton Computer&#39;,  85481}
  expect(addProductResult).to.be.true;
  //Test failed, the random input triggered some path we never planned for.
  //We discovered a bug early!
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.7 Test many input combinations using Property-based testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Typically we choose a few input samples for each test. Even when the input format resembles real-world data (see bullet ‚ÄòDon‚Äôt foo‚Äô), we cover only a few input combinations (method(‚Äò‚Äô, true, 1), method(‚Äústring‚Äù , false‚Äù , 0)), However, in production, an API that is called with 5 parameters can be invoked with thousands of different permutations, one of them might render our process down (&lt;a href=&quot;https://en.wikipedia.org/wiki/Fuzzing&quot;&gt;see Fuzz Testing&lt;/a&gt;). What if you could write a single test that sends 1000 permutations of different inputs automatically and catches for which input our code fails to return the right response? Property-based testing is a technique that does exactly that: by sending all the possible input combinations to your unit under test it increases the serendipity of finding a bug. For example, given a method‚Ää‚Äî‚ÄäaddNewProduct(id, name, isDiscount)‚Ää‚Äî‚Ääthe supporting libraries will call this method with many combinations of (number, string, boolean) like (1, ‚ÄúiPhone‚Äù, false), (2, ‚ÄúGalaxy‚Äù, true). You can run property-based testing using your favorite test runner (Mocha, Jest, etc) using libraries like &lt;a href=&quot;https://github.com/jsverify/jsverify&quot;&gt;js-verify&lt;/a&gt; or &lt;a href=&quot;https://github.com/leebyron/testcheck-js&quot;&gt;testcheck&lt;/a&gt; (much better documentation). Update: Nicolas Dubien suggests in the comments below to &lt;a href=&quot;https://github.com/dubzzz/fast-check#readme&quot;&gt;checkout fast-check&lt;/a&gt; which seems to offer some additional features and also to be actively maintained &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Unconsciously, you choose the test inputs that cover only code paths that work well. Unfortunately, this decreases the efficiency of testing as a vehicle to expose bugs&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Testing many input permutations with ‚Äúfast-check‚Äù&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import fc from &quot;fast-check&quot;;

describe(&quot;Product service&quot;, () =&amp;gt; {
  describe(&quot;Adding new&quot;, () =&amp;gt; {
    //this will run 100 times with different random properties
    it(&quot;Add new product with random yet valid properties, always successful&quot;, () =&amp;gt;
      fc.assert(
        fc.property(fc.integer(), fc.string(), (id, name) =&amp;gt; {
          expect(addNewProduct(id, name).status).toEqual(&quot;approved&quot;);
        })
      ));
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.8 If needed, use only short &amp;amp; inline snapshots&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When there is a need for &lt;a href=&quot;https://jestjs.io/docs/en/snapshot-testing&quot;&gt;snapshot testing&lt;/a&gt;, use only short and focused snapshots (i.e. 3-7 lines) that are included as part of the test (&lt;a href=&quot;https://jestjs.io/docs/en/snapshot-testing#inline-snapshots&quot;&gt;Inline Snapshot&lt;/a&gt;) and not within external files. Keeping this guideline will ensure your tests remain self-explanatory and less fragile.&lt;/p&gt; 
&lt;p&gt;On the other hand, ‚Äòclassic snapshots‚Äô tutorials and tools encourage to store big files (e.g. component rendering markup, API JSON result) over some external medium and ensure each time when the test run to compare the received result with the saved version. This, for example, can implicitly couple our test to 1000 lines with 3000 data values that the test writer never read and reasoned about. Why is this wrong? By doing so, there are 1000 reasons for your test to fail - it‚Äôs enough for a single line to change for the snapshot to get invalid and this is likely to happen a lot. How frequently? for every space, comment or minor CSS/HTML change. Not only this, the test name wouldn‚Äôt give a clue about the failure as it just checks that 1000 lines didn‚Äôt change, also it encourages to the test writer to accept as the desired true a long document he couldn‚Äôt inspect and verify. All of these are symptoms of obscure and eager test that is not focused and aims to achieve too much&lt;/p&gt; 
&lt;p&gt;It‚Äôs worth noting that there are few cases where long &amp;amp; external snapshots are acceptable - when asserting on schema and not data (extracting out values and focusing on fields) or when the received document rarely changes &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; A UI test fails. The code seems right, the screen renders perfect pixels, what happened? your snapshot testing just found a difference from the origin document to current received one - a single space character was added to the markdown‚Ä¶&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Coupling our test to unseen 2000 lines of code&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;TestJavaScript.com is renderd correctly&quot;, () =&amp;gt; {
  //Arrange

  //Act
  const receivedPage = renderer
    .create(&amp;lt;DisplayPage page=&quot;http://www.testjavascript.com&quot;&amp;gt; Test JavaScript &amp;lt;/DisplayPage&amp;gt;)
    .toJSON();

  //Assert
  expect(receivedPage).toMatchSnapshot();
  //We now implicitly maintain a 2000 lines long document
  //every additional line break or comment - will break this test
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Expectations are visible and focused&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When visiting TestJavaScript.com home page, a menu is displayed&quot;, () =&amp;gt; {
  //Arrange

  //Act
  const receivedPage = renderer
    .create(&amp;lt;DisplayPage page=&quot;http://www.testjavascript.com&quot;&amp;gt; Test JavaScript &amp;lt;/DisplayPage&amp;gt;)
    .toJSON();

  //Assert

  const menu = receivedPage.content.menu;
  expect(menu).toMatchInlineSnapshot(`
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;Home&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt; About &amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt; Contact &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
`);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è1.9 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (&lt;a href=&quot;https://en.wikipedia.org/wiki/Test_fixture&quot;&gt;also known as ‚Äòtest fixture‚Äô&lt;/a&gt;) for the sake of performance improvement. While performance is indeed a valid concern‚Ää‚Äî‚Ääit can be mitigated (see ‚ÄúComponent testing‚Äù bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern‚Ää‚Äî‚Ääa balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let‚Äôs investigate, oh no‚Ää‚Äî‚Ääit seems that two tests were mutating the same seed data&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;before(async () =&amp;gt; {
  //adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework
  await DB.AddSeedDataFromJson(&#39;seed.json&#39;);
});
it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToUpdate = await SiteService.getSiteByName(&quot;Portal&quot;);
  const updateNameResult = await SiteService.changeName(siteToUpdate, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
it(&quot;When querying by site name, get the right site&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToCheck = await SiteService.getSiteByName(&quot;Portal&quot;);
  expect(siteToCheck.name).to.be.equal(&quot;Portal&quot;); //Failure! The previous test change the name :[
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //test is adding a fresh new records and acting on the records only
  const siteUnderTest = await SiteService.addSite({
    name: &quot;siteForUpdateTest&quot;
  });

  const updateNameResult = await SiteService.changeName(siteUnderTest, &quot;newName&quot;);

  expect(updateNameResult).to.be(true);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.10 Don‚Äôt catch errors, expect them&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When trying to assert that some input triggers an error, it might look right to use try-catch-finally and asserts that the catch clause was entered. The result is an awkward and verbose test case (example below) that hides the simple test intent and the result expectations&lt;/p&gt; 
&lt;p&gt;A more elegant alternative is the using the one-line dedicated Chai assertion: expect(method).to.throw (or in Jest: expect(method).toThrow()). It‚Äôs absolutely mandatory to also ensure the exception contains a property that tells the error type, otherwise given just a generic error the application won‚Äôt be able to do much rather than show a disappointing message to the user &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; It will be challenging to infer from the test reports (e.g. CI reports) what went wrong&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern Example: A long test case that tries to assert the existence of error with try-catch&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When no product name, it throws error 400&quot;, async () =&amp;gt; {
  let errorWeExceptFor = null;
  try {
    const result = await addNewProduct({});
  } catch (error) {
    expect(error.code).to.equal(&quot;InvalidInput&quot;);
    errorWeExceptFor = error;
  }
  expect(errorWeExceptFor).not.to.be.null;
  //if this assertion fails, the tests results/reports will only show
  //that some value is null, there won&#39;t be a word about a missing Exception
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A human-readable expectation that could be understood easily, maybe even by QA or technical PM&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When no product name, it throws error 400&quot;, async () =&amp;gt; {
  await expect(addNewProduct({}))
    .to.eventually.throw(AppError)
    .with.property(&quot;code&quot;, &quot;InvalidInput&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.11 Tag your tests&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with Mocha: mocha‚Ää‚Äî‚Äägrep ‚Äòsanity‚Äô &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Tagging tests as ‚Äò#cold-test‚Äô allows the test runner to execute only fast tests (Cold===quick tests that are doing no IO and can be executed frequently even as the developer is typing)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//this test is fast (no DB) and we&#39;re tagging it correspondigly
//now the user/CI can run it frequently
describe(&quot;Order service&quot;, function() {
  describe(&quot;Add new order #cold-test #sanity&quot;, function() {
    test(&quot;Scenario - no currency was supplied. Expectation - Use the default currency #sanity&quot;, function() {
      //code logic here
    });
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 1.12 Categorize tests under at least 2 levels&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Apply some structure to your test suite so an occasional visitor could easily understand the requirements (tests are the best documentation) and the various scenarios that are being tested. A common method for this is by placing at least 2 ‚Äòdescribe‚Äô blocks above your tests: the 1st is for the name of the unit under test and the 2nd for additional level of categorization like the scenario or custom categories (see code examples and print screen below). Doing so will also greatly improve the test reports: The reader will easily infer the tests categories, delve into the desired section and correlate failing tests. In addition, it will get much easier for a developer to navigate through the code of a suite with many tests. There are multiple alternative structures for test suite that you may consider like &lt;a href=&quot;https://github.com/searls/jasmine-given&quot;&gt;given-when-then&lt;/a&gt; and &lt;a href=&quot;https://github.com/ericelliott/riteway&quot;&gt;RITE&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; When looking at a report with flat and long list of tests, the reader have to skim-read through long texts to conclude the major scenarios and correlate the commonality of failing tests. Consider the following case: When 7/100 tests fail, looking at a flat list will demand reading the failing tests text to see how they relate to each other. However, in a hierarchical report all of them could be under the same flow or category and the reader will quickly infer what or at least where is the root failure cause&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Structuring suite with the name of unit under test and scenarios will lead to the convenient report that is shown below&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Unit under test
describe(&quot;Transfer service&quot;, () =&amp;gt; {
  //Scenario
  describe(&quot;When no credit&quot;, () =&amp;gt; {
    //Expectation
    test(&quot;Then the response status should decline&quot;, () =&amp;gt; {});

    //Expectation
    test(&quot;Then it should send email to admin&quot;, () =&amp;gt; {});
  });
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/hierarchical-report.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern Example: A flat list of tests will make it harder for the reader to identify the user stories and correlate failing tests&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Then the response status should decline&quot;, () =&amp;gt; {});

test(&quot;Then it should send email&quot;, () =&amp;gt; {});

test(&quot;Then there should not be a new transfer record&quot;, () =&amp;gt; {});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/flat-report.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è1.13 Other generic good testing hygiene&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt; 
&lt;p&gt;Learn and practice &lt;a href=&quot;https://www.sm-cloud.com/book-review-test-driven-development-by-example-a-tldr/&quot;&gt;TDD principles&lt;/a&gt;‚Ää‚Äî‚Ääthey are extremely valuable for many but don‚Äôt get intimidated if they don‚Äôt fit your style, you‚Äôre not the only one. Consider writing the tests before the code in a &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2014/12/17/TheCyclesOfTDD.html&quot;&gt;red-green-refactor style&lt;/a&gt;, ensure each test checks exactly one thing, when you find a bug‚Ää‚Äî‚Ääbefore fixing write a test that will detect this bug in the future, let each test fail at least once before turning green, start a module by writing a quick and simplistic code that satisfies the test - then refactor gradually and take it to a production grade level, avoid any dependency on the environment (paths, OS, etc) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äòll miss pearls of wisdom that were collected for decades&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 2Ô∏è‚É£: Backend Testing&lt;/h1&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.1 Enrich your testing portfolio: Look beyond unit tests and the pyramid&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The &lt;a href=&quot;https://martinfowler.com/bliki/TestPyramid.html&quot;&gt;testing pyramid&lt;/a&gt;, though 10&amp;gt; years old, is a great and relevant model that suggests three testing types and influences most developers‚Äô testing strategy. At the same time, more than a handful of shiny new testing techniques emerged and are hiding in the shadows of the testing pyramid. Given all the dramatic changes that we‚Äôve seen in the recent 10 years (Microservices, cloud, serverless), is it even possible that one quite-old model will suit &lt;em&gt;all&lt;/em&gt; types of applications? shouldn‚Äôt the testing world consider welcoming new testing techniques?&lt;/p&gt; 
&lt;p&gt;Don‚Äôt get me wrong, in 2019 the testing pyramid, TDD and unit tests are still a powerful technique and are probably the best match for many applications. Only like any other model, despite its usefulness, &lt;a href=&quot;https://en.wikipedia.org/wiki/All_models_are_wrong&quot;&gt;it must be wrong sometimes&lt;/a&gt;. For example, consider an IoT application that ingests many events into a message-bus like Kafka/RabbitMQ, which then flow into some data-warehouse and are eventually queried by some analytics UI. Should we really spend 50% of our testing budget on writing unit tests for an application that is integration-centric and has almost no logic? As the diversity of application types increase (bots, crypto, Alexa-skills) greater are the chances to find scenarios where the testing pyramid is not the best match.&lt;/p&gt; 
&lt;p&gt;It‚Äôs time to enrich your testing portfolio and become familiar with more testing types (the next bullets suggest few ideas), mind models like the testing pyramid but also match testing types to real-world problems that you‚Äôre facing (‚ÄòHey, our API is broken, let‚Äôs write consumer-driven contract testing!‚Äô), diversify your tests like an investor that build a portfolio based on risk analysis‚Ää‚Äî‚Ääassess where problems might arise and match some prevention measures to mitigate those potential risks&lt;/p&gt; 
&lt;p&gt;A word of caution: the TDD argument in the software world takes a typical false-dichotomy face, some preach to use it everywhere, others think it‚Äôs the devil. Everyone who speaks in absolutes is wrong :]&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äôre going to miss some tools with amazing ROI, some like Fuzz, lint, and mutation can provide value in 10 minutes&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Cindy Sridharan suggests a rich testing portfolio in her amazing post ‚ÄòTesting Microservices‚Ää‚Äî‚Ääthe same way‚Äô&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-12-rich-testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Cindy Sridharan suggests a rich testing portfolio in her amazing post ‚ÄòTesting Microservices‚Ää‚Äî‚Ääthe sane way‚Äô&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;‚ò∫Ô∏èExample: &lt;/strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtube&quot; data-href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be&quot;&gt;YouTube: ‚ÄúBeyond Unit Tests: 5 Shiny Node.JS Test Types (2018)‚Äù (Yoni Goldberg)&lt;/a&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-12-Yoni-Goldberg-Testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;A test name that constitutes 3 parts&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.2 Component testing might be your best affair&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Each unit test covers a tiny portion of the application and it‚Äôs expensive to cover the whole, whereas end-to-end testing easily covers a lot of ground but is flaky and slower, why not apply a balanced approach and write tests that are bigger than unit tests but smaller than end-to-end testing? Component testing is the unsung song of the testing world‚Ää‚Äî‚Ääthey provide the best from both worlds: reasonable performance and a possibility to apply TDD patterns + realistic and great coverage.&lt;/p&gt; 
&lt;p&gt;Component tests focus on the Microservice ‚Äòunit‚Äô, they work against the API, don‚Äôt mock anything which belongs to the Microservice itself (e.g. real DB, or at least the in-memory version of that DB) but stub anything that is external like calls to other Microservices. By doing so, we test what we deploy, approach the app from outwards to inwards and gain great confidence in a reasonable amount of time. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Supertest allows approaching Express API in-process (fast and cover many layers)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-13-component-test-yoni-goldberg.png&quot; alt=&quot;alt text&quot; title=&quot; [Supertest](https://www.npmjs.com/package/supertest) allows approaching Express API in-process (fast and cover many layers)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.3 Ensure new releases don‚Äôt break the API using contract tests&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; So your Microservice has multiple clients, and you run multiple versions of the service for compatibility reasons (keeping everyone happy). Then you change some field and ‚Äòboom!‚Äô, some important client who relies on this field is angry. This is the Catch-22 of the integration world: It‚Äôs very challenging for the server side to consider all the multiple client expectations‚Ää‚Äî‚ÄäOn the other hand, the clients can‚Äôt perform any testing because the server controls the release dates. &lt;a href=&quot;https://docs.pact.io/&quot;&gt;Consumer-driven contracts and the framework PACT&lt;/a&gt; were born to formalize this process with a very disruptive approach‚Ää‚Äî‚Äänot the server defines the test plan of itself rather the client defines the tests of the‚Ä¶ server! PACT can record the client expectation and put in a shared location, ‚Äúbroker‚Äù, so the server can pull the expectations and run on every build using PACT library to detect broken contracts‚Ää‚Äî‚Ääa client expectation that is not met. By doing so, all the server-client API mismatches are caught early during build/CI and might save you a great deal of frustration &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; The alternatives are exhausting manual testing or deployment fear&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example:&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20PACT-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with PACT&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-14-testing-best-practices-contract-flow.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 2.4 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Many avoid Middleware testing because they represent a small portion of the system and require a live Express server. Both reasons are wrong‚Ää‚Äî‚ÄäMiddlewares are small but affect all or most of the requests and can be tested easily as pure functions that get {req,res} JS objects. To test a middleware function one should just invoke it and spy (&lt;a href=&quot;https://www.npmjs.com/package/sinon&quot;&gt;using Sinon for example&lt;/a&gt;) on the interaction with the {req,res} objects to ensure the function performed the right action. The library &lt;a href=&quot;https://www.npmjs.com/package/node-mocks-http&quot;&gt;node-mock-http&lt;/a&gt; takes it even further and factors the {req,res} objects along with spying on their behavior. For example, it can assert whether the http status that was set on the res object matches the expectation (See example below) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: Testing middleware in isolation without issuing network calls and waking-up the entire Express machine&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//the middleware we want to test
const unitUnderTest = require(&quot;./middleware&quot;);
const httpMocks = require(&quot;node-mocks-http&quot;);
//Jest syntax, equivelant to describe() &amp;amp; it() in Mocha
test(&quot;A request without authentication header, should return http status 403&quot;, () =&amp;gt; {
  const request = httpMocks.createRequest({
    method: &quot;GET&quot;,
    url: &quot;/user/42&quot;,
    headers: {
      authentication: &quot;&quot;
    }
  });
  const response = httpMocks.createResponse();
  unitUnderTest(request, response);
  expect(response.statusCode).toBe(403);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.5 Measure and refactor using static analysis tools&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keep your code maintainable. You can add static analysis tools to your CI build to abort when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity) and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;SonarQube&lt;/a&gt; (4,900+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (2,000+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Credit: &lt;a href=&quot;https://github.com/TheHollidayInn&quot; data-href=&quot;https://github.com/TheHollidayInn&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: CodeClimate, a commercial tool that can identify complex methods:&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Code%20Climate-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with CodeClimate&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-16-yoni-goldberg-quality.png&quot; alt=&quot;alt text&quot; title=&quot;CodeClimate, a commercial tool that can identify complex methods:&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 2.6 Check your readiness for Node-related chaos&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Weirdly, most software testings are about logic &amp;amp; data only, but some of the worst things that happen (and are really hard to mitigate) are infrastructural issues. For example, did you ever test what happens when your process memory is overloaded, or when the server/process dies, or does your monitoring system realizes when the API becomes 50% slower?. To test and mitigate these type of bad things‚Ää‚Äî‚Ää&lt;a href=&quot;https://principlesofchaos.org/&quot;&gt;Chaos engineering&lt;/a&gt; was born by Netflix. It aims to provide awareness, frameworks and tools for testing our app resiliency for chaotic issues. For example, one of its famous tools, &lt;a href=&quot;https://github.com/Netflix/chaosmonkey&quot;&gt;the chaos monkey&lt;/a&gt;, randomly kills servers to ensure that our service can still serve users and not relying on a single server (there is also a Kubernetes version, &lt;a href=&quot;https://github.com/asobti/kube-monkey&quot;&gt;kube-monkey&lt;/a&gt;, that kills pods). All these tools work on the hosting/platform level, but what if you wish to test and generate pure Node chaos like check how your Node process copes with uncaught errors, unhandled promise rejection, v8 memory overloaded with the max allowed of 1.7GB or whether your UX remains satisfactory when the event loop gets blocked often? to address this I‚Äôve written, &lt;a href=&quot;https://github.com/i0natan/node-chaos-monkey&quot;&gt;node-chaos&lt;/a&gt; (alpha) which provides all sort of Node-related chaotic acts &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; No escape here, Murphy‚Äôs law will hit your production without mercy&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: : Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-17-yoni-goldberg-chaos-monkey-nodejs.png&quot; alt=&quot;alt text&quot; title=&quot;Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è2.7 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (also known as ‚Äòtest fixture‚Äô) for the sake of performance improvement. While performance is indeed a valid concern‚Ää‚Äî‚Ääit can be mitigated (see ‚ÄúComponent testing‚Äù bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern‚Ää‚Äî‚Ääa balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let‚Äôs investigate, oh no‚Ää‚Äî‚Ääit seems that two tests were mutating the same seed data&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;before(async () =&amp;gt; {
  //adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework
  await DB.AddSeedDataFromJson(&#39;seed.json&#39;);
});
it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToUpdate = await SiteService.getSiteByName(&quot;Portal&quot;);
  const updateNameResult = await SiteService.changeName(siteToUpdate, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
it(&quot;When querying by site name, get the right site&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToCheck = await SiteService.getSiteByName(&quot;Portal&quot;);
  expect(siteToCheck.name).to.be.equal(&quot;Portal&quot;); //Failure! The previous test change the name :[
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //test is adding a fresh new records and acting on the records only
  const siteUnderTest = await SiteService.addSite({
    name: &quot;siteForUpdateTest&quot;
  });
  const updateNameResult = await SiteService.changeName(siteUnderTest, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 3Ô∏è‚É£: Frontend Testing&lt;/h1&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.1 Separate UI from functionality&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When focusing on testing component logic, UI details become a noise that should be extracted, so your tests can focus on pure data. Practically, extract the desired data from the markup in an abstract way that is not too coupled to the graphic implementation, assert only on pure data (vs HTML/CSS graphic details) and disable animations that slow down. You might get tempted to avoid rendering and test only the back part of the UI (e.g. services, actions, store) but this will result in fictional tests that don‚Äôt resemble the reality and won‚Äôt reveal cases where the right data doesn‚Äôt even arrive in the UI&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; The pure calculated data of your test might be ready in 10ms, but then the whole test will last 500ms (100 tests = 1 min) due to some fancy and irrelevant animation&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Separating out the UI details&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When users-list is flagged to show only VIP, should display only VIP members&quot;, () =&amp;gt; {
  // Arrange
  const allUsers = [{ id: 1, name: &quot;Yoni Goldberg&quot;, vip: false }, { id: 2, name: &quot;John Doe&quot;, vip: true }];

  // Act
  const { getAllByTestId } = render(&amp;lt;UsersList users={allUsers} showOnlyVIP={true} /&amp;gt;);

  // Assert - Extract the data from the UI first
  const allRenderedUsers = getAllByTestId(&quot;user&quot;).map(uiElement =&amp;gt; uiElement.textContent);
  const allRealVIPUsers = allUsers.filter(user =&amp;gt; user.vip).map(user =&amp;gt; user.name);
  expect(allRenderedUsers).toEqual(allRealVIPUsers); //compare data with data, no UI here
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Assertion mix UI details and data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When flagging to show only VIP, should display only VIP members&quot;, () =&amp;gt; {
  // Arrange
  const allUsers = [{ id: 1, name: &quot;Yoni Goldberg&quot;, vip: false }, { id: 2, name: &quot;John Doe&quot;, vip: true }];

  // Act
  const { getAllByTestId } = render(&amp;lt;UsersList users={allUsers} showOnlyVIP={true} /&amp;gt;);

  // Assert - Mix UI &amp;amp; data in assertion
  expect(getAllByTestId(&quot;user&quot;)).toEqual(&#39;[&amp;lt;li data-test-id=&quot;user&quot;&amp;gt;John Doe&amp;lt;/li&amp;gt;]&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.2 Query HTML elements based on attributes that are unlikely to change&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Query HTML elements based on attributes that are likely to survive graphic changes unlike CSS selectors and like form labels. If the designated element doesn‚Äôt have such attributes, create a dedicated test attribute like ‚Äòtest-id-submit-button‚Äô. Going this route not only ensures that your functional/logic tests never break because of look &amp;amp; feel changes but also it becomes clear to the entire team that this element and attribute are utilized by tests and shouldn‚Äôt get removed&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You want to test the login functionality that spans many components, logic and services, everything is set up perfectly - stubs, spies, Ajax calls are isolated. All seems perfect. Then the test fails because the designer changed the div CSS class from ‚Äòthick-border‚Äô to ‚Äòthin-border‚Äô&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Querying an element using a dedicated attribute for testing&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;// the markup code (part of React component)
&amp;lt;h3&amp;gt;
  &amp;lt;Badge pill className=&quot;fixed_badge&quot; variant=&quot;dark&quot;&amp;gt;
    &amp;lt;span data-test-id=&quot;errorsLabel&quot;&amp;gt;{value}&amp;lt;/span&amp;gt;
    &amp;lt;!-- note the attribute data-test-id --&amp;gt;
  &amp;lt;/Badge&amp;gt;
&amp;lt;/h3&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this example is using react-testing-library
test(&quot;Whenever no data is passed to metric, show 0 as default&quot;, () =&amp;gt; {
  // Arrange
  const metricValue = undefined;

  // Act
  const { getByTestId } = render(&amp;lt;dashboardMetric value={undefined} /&amp;gt;);

  expect(getByTestId(&quot;errorsLabel&quot;).text()).toBe(&quot;0&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Relying on CSS attributes&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- the markup code (part of React component) --&amp;gt;
&amp;lt;span id=&quot;metric&quot; className=&quot;d-flex-column&quot;&amp;gt;{value}&amp;lt;/span&amp;gt;
&amp;lt;!-- what if the designer changes the classs? --&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this exammple is using enzyme
test(&quot;Whenever no data is passed, error metric shows zero&quot;, () =&amp;gt; {
  // ...

  expect(wrapper.find(&quot;[className=&#39;d-flex-column&#39;]&quot;).text()).toBe(&quot;0&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.3 Whenever possible, test with a realistic and fully rendered component&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Whenever reasonably sized, test your component from outside like your users do, fully render the UI, act on it and assert that the rendered UI behaves as expected. Avoid all sort of mocking, partial and shallow rendering - this approach might result in untrapped bugs due to lack of details and harden the maintenance as the tests mess with the internals (see bullet ‚ÄòFavour blackbox testing‚Äô). If one of the child components is significantly slowing down (e.g. animation) or complicating the setup - consider explicitly replacing it with a fake&lt;/p&gt; 
&lt;p&gt;With all that said, a word of caution is in order: this technique works for small/medium components that pack a reasonable size of child components. Fully rendering a component with too many children will make it hard to reason about test failures (root cause analysis) and might get too slow. In such cases, write only a few tests against that fat parent component and more tests against its children&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; When poking into a component‚Äôs internal by invoking its private methods, and checking the inner state - you would have to refactor all tests when refactoring the components implementation. Do you really have a capacity for this level of maintenance?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Working realistically with a fully rendered component&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Enzyme-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Enzyme&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calendar extends React.Component {
  static defaultProps = { showFilters: false };

  render() {
    return (
      &amp;lt;div&amp;gt;
        A filters panel with a button to hide/show filters
        &amp;lt;FiltersPanel showFilter={showFilters} title=&quot;Choose Filters&quot; /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

//Examples use React &amp;amp; Enzyme
test(&quot;Realistic approach: When clicked to show filters, filters are displayed&quot;, () =&amp;gt; {
  // Arrange
  const wrapper = mount(&amp;lt;Calendar showFilters={false} /&amp;gt;);

  // Act
  wrapper.find(&quot;button&quot;).simulate(&quot;click&quot;);

  // Assert
  expect(wrapper.text().includes(&quot;Choose Filter&quot;));
  // This is how the user will approach this element: by text
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Mocking the reality with shallow rendering&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Shallow/mocked approach: When clicked to show filters, filters are displayed&quot;, () =&amp;gt; {
  // Arrange
  const wrapper = shallow(&amp;lt;Calendar showFilters={false} title=&quot;Choose Filter&quot; /&amp;gt;);

  // Act
  wrapper
    .find(&quot;filtersPanel&quot;)
    .instance()
    .showFilters();
  // Tap into the internals, bypass the UI and invoke a method. White-box approach

  // Assert
  expect(wrapper.find(&quot;Filter&quot;).props()).toEqual({ title: &quot;Choose Filter&quot; });
  // what if we change the prop name or don&#39;t pass anything relevant?
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.4 Don‚Äôt sleep, use frameworks built-in support for async events. Also try to speed things up&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; In many cases, the unit under test completion time is just unknown (e.g. animation suspends element appearance) - in that case, avoid sleeping (e.g. setTimeOut) and prefer more deterministic methods that most platforms provide. Some libraries allows awaiting on operations (e.g. &lt;a href=&quot;https://docs.cypress.io/guides/references/best-practices.html#Unnecessary-Waiting&quot;&gt;Cypress cy.request(‚Äòurl‚Äô)&lt;/a&gt;), other provide API for waiting like &lt;a href=&quot;https://testing-library.com/docs/guide-disappearance&quot;&gt;@testing-library/dom method wait(expect(element))&lt;/a&gt;. Sometimes a more elegant way is to stub the slow resource, like API for example, and then once the response moment becomes deterministic the component can be explicitly re-rendered. When depending upon some external component that sleeps, it might turn useful to &lt;a href=&quot;https://jestjs.io/docs/en/timer-mocks&quot;&gt;hurry-up the clock&lt;/a&gt;. Sleeping is a pattern to avoid because it forces your test to be slow or risky (when waiting for a too short period). Whenever sleeping and polling is inevitable and there‚Äôs no support from the testing framework, some npm libraries like &lt;a href=&quot;https://www.npmjs.com/package/wait-for-expect&quot;&gt;wait-for-expect&lt;/a&gt; can help with a semi-deterministic solution &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; When sleeping for a long time, tests will be an order of magnitude slower. When trying to sleep for small numbers, test will fail when the unit under test didn‚Äôt respond in a timely fashion. So it boils down to a trade-off between flakiness and bad performance&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: E2E API that resolves only when the async operations is done (Cypress)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// using Cypress
cy.get(&quot;#show-products&quot;).click(); // navigate
cy.wait(&quot;@products&quot;); // wait for route to appear
// this line will get executed only when the route is ready
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Testing library that waits for DOM elements&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// @testing-library/dom
test(&quot;movie title appears&quot;, async () =&amp;gt; {
  // element is initially not present...

  // wait for appearance
  await wait(() =&amp;gt; {
    expect(getByText(&quot;the lion king&quot;)).toBeInTheDocument();
  });

  // wait for appearance and return the element
  const movie = await waitForElement(() =&amp;gt; getByText(&quot;the lion king&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: custom sleep code&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;movie title appears&quot;, async () =&amp;gt; {
  // element is initially not present...

  // custom wait logic (caution: simplistic, no timeout)
  const interval = setInterval(() =&amp;gt; {
    const found = getByText(&quot;the lion king&quot;);
    if (found) {
      clearInterval(interval);
      expect(getByText(&quot;the lion king&quot;)).toBeInTheDocument();
    }
  }, 100);

  // wait for appearance and return the element
  const movie = await waitForElement(() =&amp;gt; getByText(&quot;the lion king&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.5 Watch how the content is served over the network&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Google%20LightHouse-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Lighthouse&quot;&gt;&lt;/p&gt; 
&lt;p&gt;‚úÖ &lt;strong&gt;Do:&lt;/strong&gt; Apply some active monitor that ensures the page load under real network is optimized - this includes any UX concern like slow page load or un-minified bundle. The inspection tools market is no short: basic tools like &lt;a href=&quot;https://www.pingdom.com/&quot;&gt;pingdom&lt;/a&gt;, AWS CloudWatch, &lt;a href=&quot;https://cloud.google.com/monitoring/uptime-checks/&quot;&gt;gcp StackDriver&lt;/a&gt; can be easily configured to watch whether the server is alive and response under a reasonable SLA. This only scratches the surface of what might get wrong, hence it‚Äôs preferable to opt for tools that specialize in frontend (e.g. &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;lighthouse&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;pagespeed&lt;/a&gt;) and perform richer analysis. The focus should be on symptoms, metrics that directly affect the UX, like page load time, &lt;a href=&quot;https://scotch.io/courses/10-web-performance-audit-tips-for-your-next-billion-users-in-2018/fmp-first-meaningful-paint&quot;&gt;meaningful paint&lt;/a&gt;, &lt;a href=&quot;https://calibreapp.com/blog/time-to-interactive/&quot;&gt;time until the page gets interactive (TTI)&lt;/a&gt;. On top of that, one may also watch for technical causes like ensuring the content is compressed, time to the first byte, optimize images, ensuring reasonable DOM size, SSL and many others. It‚Äôs advisable to have these rich monitors both during development, as part of the CI and most important - 24x7 over the production‚Äôs servers/CDN&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; It must be disappointing to realize that after such great care for crafting a UI, 100% functional tests passing and sophisticated bundling - the UX is horrible and slow due to CDN misconfiguration&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Lighthouse page load inspection report&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/lighthouse2.png&quot; alt=&quot;&quot; title=&quot;Lighthouse page load inspection report&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.6 Stub flaky and slow resources like backend APIs&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When coding your mainstream tests (not E2E tests), avoid involving any resource that is beyond your responsibility and control like backend API and use stubs instead (i.e. test double). Practically, instead of real network calls to APIs, use some test double library (like &lt;a href=&quot;https://sinonjs.org/&quot;&gt;Sinon&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/testdouble&quot;&gt;Test doubles&lt;/a&gt;, etc) for stubbing the API response. The main benefit is preventing flakiness - testing or staging APIs by definition are not highly stable and from time to time will fail your tests although YOUR component behaves just fine (production env was not meant for testing and it usually throttles requests). Doing this will allow simulating various API behavior that should drive your component behavior as when no data was found or the case when API throws an error. Last but not least, network calls will greatly slow down the tests&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; The average test runs no longer than few ms, a typical API call last 100ms&amp;gt;, this makes each test ~20x slower&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Stubbing or intercepting API calls&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// unit under test
export default function ProductsList() {
  const [products, setProducts] = useState(false);

  const fetchProducts = async () =&amp;gt; {
    const products = await axios.get(&quot;api/products&quot;);
    setProducts(products);
  };

  useEffect(() =&amp;gt; {
    fetchProducts();
  }, []);

  return products ? &amp;lt;div&amp;gt;{products}&amp;lt;/div&amp;gt; : &amp;lt;div data-test-id=&quot;no-products-message&quot;&amp;gt;No products&amp;lt;/div&amp;gt;;
}

// test
test(&quot;When no products exist, show the appropriate message&quot;, () =&amp;gt; {
  // Arrange
  nock(&quot;api&quot;)
    .get(`/products`)
    .reply(404);

  // Act
  const { getByTestId } = render(&amp;lt;ProductsList /&amp;gt;);

  // Assert
  expect(getByTestId(&quot;no-products-message&quot;)).toBeTruthy();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.7 Have very few end-to-end tests that spans the whole system&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Although E2E (end-to-end) usually means UI-only testing with a real browser (See bullet 3.6), for other they mean tests that stretch the entire system including the real backend. The latter type of tests is highly valuable as they cover integration bugs between frontend and backend that might happen due to a wrong understanding of the exchange schema. They are also an efficient method to discover backend-to-backend integration issues (e.g. Microservice A sends the wrong message to Microservice B) and even to detect deployment failures - there are no backend frameworks for E2E testing that are as friendly and mature as UI frameworks like &lt;a href=&quot;https://www.cypress.io/&quot;&gt;Cypress&lt;/a&gt; and &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;/a&gt;. The downside of such tests is the high cost of configuring an environment with so many components, and mostly their brittleness - given 50 microservices, even if one fails then the entire E2E just failed. For that reason, we should use this technique sparingly and probably have 1-10 of those and no more. That said, even a small number of E2E tests are likely to catch the type of issues they are targeted for - deployment &amp;amp; integration faults. It‚Äôs advisable to run those over a production-like staging environment&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; UI might invest much in testing its functionality only to realizes very late that the backend returned payload (the data schema the UI has to work with) is very different than expected&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.8 Speed-up E2E tests by reusing login credentials&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; In E2E tests that involve a real backend and rely on a valid user token for API calls, it doesn‚Äôt payoff to isolate the test to a level where a user is created and logged-in in every request. Instead, login only once before the tests execution start (i.e. before-all hook), save the token in some local storage and reuse it across requests. This seem to violate one of the core testing principle - keep the test autonomous without resources coupling. While this is a valid worry, in E2E tests performance is a key concern and creating 1-3 API requests before starting each individual tests might lead to horrible execution time. Reusing credentials doesn‚Äôt mean the tests have to act on the same user records - if relying on user records (e.g. test user payments history) than make sure to generate those records as part of the test and avoid sharing their existence with other tests. Also remember that the backend can be faked - if your tests are focused on the frontend it might be better to isolate it and stub the backend API (see bullet 3.6).&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Given 200 test cases and assuming login=100ms = 20 seconds only for logging-in again and again&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Logging-in before-all and not before-each&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let authenticationToken;

// happens before ALL tests run
before(() =&amp;gt; {
  cy.request(&#39;POST&#39;, &#39;http://localhost:3000/login&#39;, {
    username: Cypress.env(&#39;username&#39;),
    password: Cypress.env(&#39;password&#39;),
  })
  .its(&#39;body&#39;)
  .then((responseFromLogin) =&amp;gt; {
    authenticationToken = responseFromLogin.token;
  })
})

// happens before EACH test
beforeEach(setUser =&amp;gt; () {
  cy.visit(&#39;/home&#39;, {
    onBeforeLoad (win) {
      win.localStorage.setItem(&#39;token&#39;, JSON.stringify(authenticationToken))
    },
  })
})

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.9 Have one E2E smoke test that just travels across the site map&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; For production monitoring and development-time sanity check, run a single E2E test that visits all/most of the site pages and ensures no one breaks. This type of test brings a great return on investment as it‚Äôs very easy to write and maintain, but it can detect any kind of failure including functional, network and deployment issues. Other styles of smoke and sanity checking are not as reliable and exhaustive - some ops teams just ping the home page (production) or developers who run many integration tests which don‚Äôt discover packaging and browser issues. Goes without saying that the smoke test doesn‚Äôt replace functional tests rather just aim to serve as a quick smoke detector&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Everything might seem perfect, all tests pass, production health-check is also positive but the Payment component had some packaging issue and only the /Payment route is not rendering&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Smoke travelling across all pages&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When doing smoke testing over all page, should load them all successfully&quot;, () =&amp;gt; {
  // exemplified using Cypress but can be implemented easily
  // using any E2E suite
  cy.visit(&quot;https://mysite.com/home&quot;);
  cy.contains(&quot;Home&quot;);
  cy.contains(&quot;https://mysite.com/Login&quot;);
  cy.contains(&quot;Login&quot;);
  cy.contains(&quot;https://mysite.com/About&quot;);
  cy.contains(&quot;About&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.10 Expose the tests as a live collaborative document&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Besides increasing app reliability, tests bring another attractive opportunity to the table - serve as live app documentation. Since tests inherently speak at a less-technical and product/UX language, using the right tools they can serve as a communication artifact that greatly aligns all the peers - developers and their customers. For example, some frameworks allow expressing the flow and expectations (i.e. tests plan) using a human-readable language so any stakeholder, including product managers, can read, approve and collaborate on the tests which just became the live requirements document. This technique is also being referred to as ‚Äòacceptance test‚Äô as it allows the customer to define his acceptance criteria in plain language. This is &lt;a href=&quot;https://en.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;BDD (behavior-driven testing)&lt;/a&gt; at its purest form. One of the popular frameworks that enable this is &lt;a href=&quot;https://github.com/cucumber/cucumber-js&quot;&gt;Cucumber which has a JavaScript flavor&lt;/a&gt;, see example below. Another similar yet different opportunity, &lt;a href=&quot;https://storybook.js.org/&quot;&gt;StoryBook&lt;/a&gt;, allows exposing UI components as a graphic catalog where one can walk through the various states of each component (e.g. render a grid w/o filters, render that grid with multiple rows or with none, etc), see how it looks like, and how to trigger that state - this can appeal also to product folks but mostly serves as live doc for developers who consume those components.&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; After investing top resources on testing, it‚Äôs just a pity not to leverage this investment and win great value&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Describing tests in human-language using cucumber-js&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cucumber-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples using Cucumber&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this is how one can describe tests using cucumber: plain language that allows anyone to understand and collaborate

Feature: Twitter new tweet

  I want to tweet something in Twitter

  @focus
  Scenario: Tweeting from the home page
    Given I open Twitter home
    Given I click on &quot;New tweet&quot; button
    Given I type &quot;Hello followers!&quot; in the textbox
    Given I click on &quot;Submit&quot; button
    Then I see message &quot;Tweet saved&quot;

&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Visualizing our components, their various states and inputs using Storybook&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20StoryBook-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using StoryBook&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/story-book.jpg&quot; alt=&quot;alt text&quot; title=&quot;Storybook&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 3.11 Detect visual issues with automated tools&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Setup automated tools to capture UI screenshots when changes are presented and detect visual issues like content overlapping or breaking. This ensures that not only the right data is prepared but also the user can conveniently see it. This technique is not widely adopted, our testing mindset leans toward functional tests but it‚Äôs the visuals what the user experience and with so many device types it‚Äôs very easy to overlook some nasty UI bug. Some free tools can provide the basics - generate and save screenshots for the inspection of human eyes. While this approach might be sufficient for small apps, it‚Äôs flawed as any other manual testing that demands human labor anytime something changes. On the other hand, it‚Äôs quite challenging to detect UI issues automatically due to the lack of clear definition - this is where the field of ‚ÄòVisual Regression‚Äô chime in and solve this puzzle by comparing old UI with the latest changes and detect differences. Some OSS/free tools can provide some of this functionality (e.g. &lt;a href=&quot;https://github.com/BBC-News/wraith&quot;&gt;wraith&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/%5Bhttps://github.com/HuddleEng/PhantomCSS%5D(https://github.com/HuddleEng/PhantomCSS)&quot;&gt;PhantomCSS&lt;/a&gt; but might charge significant setup time. The commercial line of tools (e.g. &lt;a href=&quot;https://applitools.com/&quot;&gt;Applitools&lt;/a&gt;, &lt;a href=&quot;https://percy.io/&quot;&gt;Percy.io&lt;/a&gt;) takes is a step further by smoothing the installation and packing advanced features like management UI, alerting, smart capturing by eliminating ‚Äòvisual noise‚Äô (e.g. ads, animations) and even root cause analysis of the DOM/CSS changes that led to the issue&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; How good is a content page that display great content (100% tests passed), loads instantly but half of the content area is hidden?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A typical visual regression - right content that is served badly&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/amazon-visual-regression.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Amazon page breaks&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Configuring wraith to capture and compare UI snapshots&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Wraith-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Wraith&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;‚Äã# Add as many domains as necessary. Key will act as a label‚Äã

domains:
  english: &quot;http://www.mysite.com&quot;‚Äã

‚Äã# Type screen widths below, here are a couple of examples‚Äã

screen_widths:

  - 600‚Äã
  - 768‚Äã
  - 1024‚Äã
  - 1280‚Äã

‚Äã# Type page URL paths below, here are a couple of examples‚Äã
paths:
  about:
    path: /about
    selector: &#39;.about&#39;‚Äã
  subscribe:
      selector: &#39;.subscribe&#39;‚Äã
    path: /subscribe
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Using Applitools to get snapshot comparison and other advanced features&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20AppliTools-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Applitools&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as todoPage from &quot;../page-objects/todo-page&quot;;

describe(&quot;visual validation&quot;, () =&amp;gt; {
  before(() =&amp;gt; todoPage.navigate());
  beforeEach(() =&amp;gt; cy.eyesOpen({ appName: &quot;TAU TodoMVC&quot; }));
  afterEach(() =&amp;gt; cy.eyesClose());

  it(&quot;should look good&quot;, () =&amp;gt; {
    cy.eyesCheckWindow(&quot;empty todo list&quot;);
    todoPage.addTodo(&quot;Clean room&quot;);
    todoPage.addTodo(&quot;Learn javascript&quot;);
    cy.eyesCheckWindow(&quot;two todos&quot;);
    todoPage.toggleTodo(0);
    cy.eyesCheckWindow(&quot;mark as completed&quot;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 4Ô∏è‚É£: Measuring Test Effectiveness&lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 4.1 Get enough coverage for being confident, ~80% seems to be the lucky number&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The purpose of testing is to get enough confidence for moving fast, obviously the more code is tested the more confident the team can be. Coverage is a measure of how many code lines (and branches, statements, etc) are being reached by the tests. So how much is enough? 10‚Äì30% is obviously too low to get any sense about the build correctness, on the other side 100% is very expensive and might shift your focus from the critical paths to the exotic corners of the code. The long answer is that it depends on many factors like the type of application‚Ää‚Äî‚Ääif you‚Äôre building the next generation of Airbus A380 than 100% is a must, for a cartoon pictures website 50% might be too much. Although most of the testing enthusiasts claim that the right coverage threshold is contextual, most of them also mention the number 80% as a thumb of a rule (&lt;a href=&quot;https://martinfowler.com/bliki/TestCoverage.html&quot;&gt;Fowler: ‚Äúin the upper 80s or 90s‚Äù&lt;/a&gt;) that presumably should satisfy most of the applications.&lt;/p&gt; 
&lt;p&gt;Implementation tips: You may want to configure your continuous integration (CI) to have a coverage threshold (&lt;a href=&quot;https://jestjs.io/docs/en/configuration.html#collectcoverage-boolean&quot;&gt;Jest link&lt;/a&gt;) and stop a build that doesn‚Äôt stand to this standard (it‚Äôs also possible to configure threshold per component, see code example below). On top of this, consider detecting build coverage decrease (when a newly committed code has less coverage)‚Ää‚Äî‚Ääthis will push developers raising or at least preserving the amount of tested code. All that said, coverage is only one measure, a quantitative based one, that is not enough to tell the robustness of your testing. And it can also be fooled as illustrated in the next bullets&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Confidence and numbers go hand in hand, without really knowing that you tested most of the system‚Ää‚Äî‚Ääthere will also be some fear and fear will slow you down&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: A typical coverage report&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-18-yoni-goldberg-code-coverage.png&quot; alt=&quot;alt text&quot; title=&quot;A typical coverage report&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Setting up coverage per component (using Jest)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Jest&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-18-code-coverage2.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Setting up coverage per component (using Jest)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 4.2 Inspect coverage reports to detect untested areas and other oddities&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Some issues sneak just under the radar and are really hard to find using traditional tools. These are not really bugs but more of surprising application behavior that might have a severe impact. For example, often some code areas are never or rarely being invoked‚Ää‚Äî‚Ääyou thought that the ‚ÄòPricingCalculator‚Äô class is always setting the product price but it turns out it is actually never invoked although we have 10000 products in DB and many sales‚Ä¶ Code coverage reports help you realize whether the application behaves the way you believe it does. Other than that, it can also highlight which types of code is not tested‚Ää‚Äî‚Ääbeing informed that 80% of the code is tested doesn‚Äôt tell whether the critical parts are covered. Generating reports is easy‚Ää‚Äî‚Ääjust run your app in production or during testing with coverage tracking and then see colorful reports that highlight how frequent each code area is invoked. If you take your time to glimpse into this data‚Ää‚Äî‚Ääyou might find some gotchas &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; If you don‚Äôt know which parts of your code are left un-tested, you don‚Äôt know where the issues might come from&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: What‚Äôs wrong with this coverage report?&lt;/h3&gt; 
 &lt;p&gt;Based on a real-world scenario where we tracked our application usage in QA and find out interesting login patterns (Hint: the amount of login failures is non-proportional, something is clearly wrong. Finally it turned out that some frontend bug keeps hitting the backend login API)&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-19-coverage-yoni-goldberg-nodejs-consultant.png&quot; alt=&quot;alt text&quot; title=&quot;What‚Äôs wrong with this coverage report?&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 4.3 Measure logical coverage using mutation testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The Traditional Coverage metric often lies: It may show you 100% code coverage, but none of your functions, even not one, return the right response. How come? it simply measures over which lines of code the test visited, but it doesn‚Äôt check if the tests actually tested anything‚Ää‚Äî‚Ääasserted for the right response. Like someone who‚Äôs traveling for business and showing his passport stamps‚Ää‚Äî‚Ääthis doesn‚Äôt prove any work done, only that he visited few airports and hotels.&lt;/p&gt; 
&lt;p&gt;Mutation-based testing is here to help by measuring the amount of code that was actually TESTED not just VISITED. &lt;a href=&quot;https://stryker-mutator.io/&quot;&gt;Stryker&lt;/a&gt; is a JavaScript library for mutation testing and the implementation is really neat:&lt;/p&gt; 
&lt;p&gt;(1) it intentionally changes the code and ‚Äúplants bugs‚Äù. For example the code newOrder.price===0 becomes newOrder.price!=0. This ‚Äúbugs‚Äù are called mutations&lt;/p&gt; 
&lt;p&gt;(2) it runs the tests, if all succeed then we have a problem‚Ää‚Äî‚Ääthe tests didn‚Äôt serve their purpose of discovering bugs, the mutations are so-called survived. If the tests failed, then great, the mutations were killed.&lt;/p&gt; 
&lt;p&gt;Knowing that all or most of the mutations were killed gives much higher confidence than traditional coverage and the setup time is similar &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äôll be fooled to believe that 85% coverage means your test will detect bugs in 85% of your code&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: 100% coverage, 0% testing&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Stryker-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Stryker&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addNewOrder(newOrder) {
  logger.log(`Adding new order ${newOrder}`);
  DB.save(newOrder);
  Mailer.sendMail(newOrder.assignee, `A new order was places ${newOrder}`);

  return { approved: true };
}

it(&quot;Test addNewOrder, don&#39;t use such test names&quot;, () =&amp;gt; {
  addNewOrder({ assignee: &quot;John@mailer.com&quot;, price: 120 });
}); //Triggers 100% code coverage, but it doesn&#39;t check anything
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-20-yoni-goldberg-mutation-testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è4.4 Preventing test code issues with Test linters&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; A set of ESLint plugins were built specifically for inspecting the tests code patterns and discover issues. For example, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; will warn when a test is written at the global level (not a son of a describe() statement) or when tests are &lt;a href=&quot;https://mochajs.org/#inclusive-tests&quot;&gt;skipped&lt;/a&gt; which might lead to a false belief that all tests are passing. Similarly, &lt;a href=&quot;https://github.com/jest-community/eslint-plugin-jest&quot;&gt;eslint-plugin-jest&lt;/a&gt; can, for example, warn when a test has no assertions at all (not checking anything)&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Seeing 90% code coverage and 100% green tests will make your face wear a big smile only until you realize that many tests aren‚Äôt asserting for anything and many test suites were just skipped. Hopefully, you didn‚Äôt deploy anything based on this false observation&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test case full of errors, luckily all are caught by Linters&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;describe(&quot;Too short description&quot;, () =&amp;gt; {
  const userToken = userService.getDefaultToken() // *error:no-setup-in-describe, use hooks (sparingly) instead
  it(&quot;Some description&quot;, () =&amp;gt; {});//* error: valid-test-description. Must include the word &quot;Should&quot; + at least 5 words
});

it.skip(&quot;Test name&quot;, () =&amp;gt; {// *error:no-skipped-tests, error:error:no-global-tests. Put tests only under describe or suite
  expect(&quot;somevalue&quot;); // error:no-assert
});

it(&quot;Test name&quot;, () =&amp;gt; {*//error:no-identical-title. Assign unique titles to tests
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 5Ô∏è‚É£: CI and Other Quality Measures&lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 5.1 Enrich your linters and abort builds that have linting issues&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Linters are a free lunch, with 5 min setup you get for free an auto-pilot guarding your code and catching significant issue as you type. Gone are the days where linting was about cosmetics (no semi-colons!). Nowadays, Linters can catch severe issues like errors that are not thrown correctly and losing information. On top of your basic set of rules (like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-standard&quot;&gt;ESLint standard&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;Airbnb style&lt;/a&gt;), consider including some specializing Linters like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-chai-expect&quot;&gt;eslint-plugin-chai-expect&lt;/a&gt; that can discover tests without assertions, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-promise?activeTab=readme&quot;&gt;eslint-plugin-promise&lt;/a&gt; can discover promises with no resolve (your code will never continue), &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security?activeTab=readme&quot;&gt;eslint-plugin-security&lt;/a&gt; which can discover eager regex expressions that might get used for DOS attacks, and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-you-dont-need-lodash-underscore&quot;&gt;eslint-plugin-you-dont-need-lodash-underscore&lt;/a&gt; is capable of alarming when the code uses utility library methods that are part of the V8 core methods like Lodash._map(‚Ä¶) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a rainy day where your production keeps crashing but the logs don‚Äôt display the error stack trace. What happened? Your code mistakenly threw a non-error object and the stack trace was lost, a good reason for banging your head against a brick wall. A 5 min linter setup could detect this TYPO and save your day&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-21-yoni-goldberg-eslint.jpeg&quot; alt=&quot;alt text&quot; title=&quot;The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 5.2 Shorten the feedback loop with local developer-CI&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Using a CI with shiny quality inspections like testing, linting, vulnerabilities check, etc? Help developers run this pipeline also locally to solicit instant feedback and shorten the &lt;a href=&quot;https://www.gocd.org/2016/03/15/are-you-ready-for-continuous-delivery-part-2-feedback-loops/&quot;&gt;feedback loop&lt;/a&gt;. Why? an efficient testing process constitutes many and iterative loops: (1) try-outs -&amp;gt; (2) feedback -&amp;gt; (3) refactor. The faster the feedback is, the more improvement iterations a developer can perform per-module and perfect the results. On the flip, when the feedback is late to come fewer improvement iterations could be packed into a single day, the team might already move forward to another topic/task/module and might not be up for refining that module.&lt;/p&gt; 
&lt;p&gt;Practically, some CI vendors (Example: &lt;a href=&quot;https://circleci.com/docs/2.0/local-cli/&quot;&gt;CircleCI local CLI&lt;/a&gt;) allow running the pipeline locally. Some commercial tools like &lt;a href=&quot;https://wallabyjs.com/&quot;&gt;wallaby provide highly-valuable &amp;amp; testing insights&lt;/a&gt; as a developer prototype (no affiliation). Alternatively, you may just add npm script to package.json that runs all the quality commands (e.g. test, lint, vulnerabilities)‚Ää‚Äî‚Ääuse tools like &lt;a href=&quot;https://www.npmjs.com/package/concurrently&quot;&gt;concurrently&lt;/a&gt; for parallelization and non-zero exit code if one of the tools failed. Now the developer should just invoke one command‚Ää‚Äî‚Ääe.g. ‚Äònpm run quality‚Äô‚Ää‚Äî‚Ääto get instant feedback. Consider also aborting a commit if the quality check failed using a githook (&lt;a href=&quot;https://github.com/typicode/husky&quot;&gt;husky can help&lt;/a&gt;) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; When the quality results arrive the day after the code, testing doesn‚Äôt become a fluent part of development rather an after the fact formal artifact&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: npm scripts that perform code quality inspection, all are run in parallel on demand or when a developer is trying to push new code&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;scripts&quot;: {
    &quot;inspect:sanity-testing&quot;: &quot;mocha **/**--test.js --grep \&quot;sanity\&quot;&quot;,
    &quot;inspect:lint&quot;: &quot;eslint .&quot;,
    &quot;inspect:vulnerabilities&quot;: &quot;npm audit&quot;,
    &quot;inspect:license&quot;: &quot;license-checker --failOn GPLv2&quot;,
    &quot;inspect:complexity&quot;: &quot;plato .&quot;,

    &quot;inspect:all&quot;: &quot;concurrently -c \&quot;bgBlue.bold,bgMagenta.bold,yellow\&quot; \&quot;npm:inspect:quick-testing\&quot; \&quot;npm:inspect:lint\&quot; \&quot;npm:inspect:vulnerabilities\&quot; \&quot;npm:inspect:license\&quot;&quot;
  },
  &quot;husky&quot;: {
    &quot;hooks&quot;: {
      &quot;precommit&quot;: &quot;npm run inspect:all&quot;,
      &quot;prepush&quot;: &quot;npm run inspect:all&quot;
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.3 Perform e2e testing over a true production-mirror&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; End to end (e2e) testing are the main challenge of every CI pipeline‚Ää‚Äî‚Ääcreating an identical ephemeral production mirror on the fly with all the related cloud services can be tedious and expensive. Finding the best compromise is your game: &lt;a href=&quot;https://serverless.com/&quot;&gt;Docker-compose&lt;/a&gt; allows crafting isolated dockerized environment with identical containers using a single plain text file but the backing technology (e.g. networking, deployment model) is different from real-world productions. You may combine it with &lt;a href=&quot;https://github.com/localstack/localstack&quot;&gt;‚ÄòAWS Local‚Äô&lt;/a&gt; to work with a stub of the real AWS services. If you went &lt;a href=&quot;https://serverless.com/&quot;&gt;serverless&lt;/a&gt; multiple frameworks like serverless and &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/serverless_app.html&quot;&gt;AWS SAM&lt;/a&gt; allows the local invocation of FaaS code.&lt;/p&gt; 
&lt;p&gt;The huge Kubernetes ecosystem is yet to formalize a standard convenient tool for local and CI-mirroring though many new tools are launched frequently. One approach is running a ‚Äòminimized-Kubernetes‚Äô using tools like &lt;a href=&quot;https://kubernetes.io/docs/setup/minikube/&quot;&gt;Minikube&lt;/a&gt; and &lt;a href=&quot;https://microk8s.io/&quot;&gt;MicroK8s&lt;/a&gt; which resemble the real thing only come with less overhead. Another approach is testing over a remote ‚Äòreal-Kubernetes‚Äô, some CI providers (e.g. &lt;a href=&quot;https://codefresh.io/&quot;&gt;Codefresh&lt;/a&gt;) has native integration with Kubernetes environment and make it easy to run the CI pipeline over the real thing, others allow custom scripting against a remote Kubernetes. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Using different technologies for production and testing demands maintaining two deployment models and keeps the developers and the ops team separated&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: a CI pipeline that generates Kubernetes cluster on the fly &lt;a href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot; data-href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot;&gt;Credit: Dynamic-environments Kubernetes&lt;/a&gt;)&lt;/h3&gt; 
 &lt;pre name=&quot;38d9&quot; id=&quot;38d9&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;deploy:&lt;br&gt;stage: deploy&lt;br&gt;image: registry.gitlab.com/gitlab-examples/kubernetes-deploy&lt;br&gt;script:&lt;br&gt;- ./configureCluster.sh $KUBE_CA_PEM_FILE $KUBE_URL $KUBE_TOKEN&lt;br&gt;- kubectl create ns $NAMESPACE&lt;br&gt;- kubectl create secret -n $NAMESPACE docker-registry gitlab-registry --docker-server=&quot;$CI_REGISTRY&quot; --docker-username=&quot;$CI_REGISTRY_USER&quot; --docker-password=&quot;$CI_REGISTRY_PASSWORD&quot; --docker-email=&quot;$GITLAB_USER_EMAIL&quot;&lt;br&gt;- mkdir .generated&lt;br&gt;- echo &quot;$CI_BUILD_REF_NAME-$CI_BUILD_REF&quot;&lt;br&gt;- sed -e &quot;s/TAG/$CI_BUILD_REF_NAME-$CI_BUILD_REF/g&quot; templates/deals.yaml | tee &quot;.generated/deals.yaml&quot;&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f .generated/deals.yaml&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f templates/my-sock-shop.yaml&lt;br&gt;environment:&lt;br&gt;name: test-for-ci&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.4 Parallelize test execution&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When done right, testing is your 24/7 friend providing almost instant feedback. In practice, executing 500 CPU-bounded unit test on a single thread can take too long. Luckily, modern test runners and CI platforms (like &lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;Jest&lt;/a&gt;, &lt;a href=&quot;https://github.com/avajs/ava&quot;&gt;AVA&lt;/a&gt; and &lt;a href=&quot;https://github.com/yandex/mocha-parallel-tests&quot;&gt;Mocha extensions&lt;/a&gt;) can parallelize the test into multiple processes and achieve significant improvement in feedback time. Some CI vendors do also parallelize tests across containers (!) which shortens the feedback loop even further. Whether locally over multiple processes, or over some cloud CLI using multiple machines‚Ää‚Äî‚Ääparallelizing demand keeping the tests autonomous as each might run on different processes&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Getting test results 1 hour long after pushing new code, as you already code the next features, is a great recipe for making testing less relevant&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (&lt;a href=&quot;https://medium.com/dailyjs/javascript-test-runners-benchmark-3a78d4117b4&quot;&gt;Credit: JavaScript Test-Runners Benchmark&lt;/a&gt;)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-24-yonigoldberg-jest-parallel.png&quot; alt=&quot;alt text&quot; title=&quot;Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (Credit: JavaScript Test-Runners Benchmark)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.5 Stay away from legal issues using license and plagiarism check&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Licensing and plagiarism issues are probably not your main concern right now, but why not tick this box as well in 10 minutes? A bunch of npm packages like &lt;a href=&quot;https://www.npmjs.com/package/license-checker&quot;&gt;license check&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/plagiarism-checker&quot;&gt;plagiarism check&lt;/a&gt; (commercial with free plan) can be easily baked into your CI pipeline and inspect for sorrows like dependencies with restrictive licenses or code that was copy-pasted from Stack Overflow and apparently violates some copyrights&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Unintentionally, developers might use packages with inappropriate licenses or copy paste commercial code and run into legal issues&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example:&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//install license-checker in your CI environment or also locally
npm install -g license-checker

//ask it to scan all licenses and fail with exit code other than 0 if it found unauthorized license. The CI system should catch this failure and stop the build
license-checker --summary --failOn BSD

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-25-nodejs-licsense.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community tools such as &lt;a href=&quot;https://docs.npmjs.com/getting-started/running-a-security-audit&quot;&gt;npm audit&lt;/a&gt;, or commercial tools like &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; (offer also a free community version). Both can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: NPM Audit result&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-26-npm-audit-snyk.png&quot; alt=&quot;alt text&quot; title=&quot;NPM Audit result&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è5.7 Automate dependency updates&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Yarn and npm latest introduction of package-lock.json introduced a serious challenge (the road to hell is paved with good intentions)‚Ää‚Äî‚Ääby default now, packages are no longer getting updates. Even a team running many fresh deployments with ‚Äònpm install‚Äô &amp;amp; ‚Äònpm update‚Äô won‚Äôt get any new updates. This leads to subpar dependent packages versions at best or to vulnerable code at worst. Teams now rely on developers goodwill and memory to manually update the package.json or use tools &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;like ncu&lt;/a&gt; manually. A more reliable way could be to automate the process of getting the most reliable dependency versions, though there are no silver bullet solutions yet there are two possible automation roads:&lt;/p&gt; 
&lt;p&gt;(1) CI can fail builds that have obsolete dependencies‚Ää‚Äî‚Ääusing tools like &lt;a href=&quot;https://docs.npmjs.com/cli/outdated&quot;&gt;‚Äònpm outdated‚Äô&lt;/a&gt; or ‚Äònpm-check-updates (ncu)‚Äô . Doing so will enforce developers to update dependencies.&lt;/p&gt; 
&lt;p&gt;(2) Use commercial tools that scan the code and automatically send pull requests with updated dependencies. One interesting question remaining is what should be the dependency update policy‚Ää‚Äî‚Ääupdating on every patch generates too many overhead, updating right when a major is released might point to an unstable version (many packages found vulnerable on the very first days after being released, &lt;a href=&quot;https://nodesource.com/blog/a-high-level-post-mortem-of-the-eslint-scope-security-incident/&quot;&gt;see the&lt;/a&gt; eslint-scope incident).&lt;/p&gt; 
&lt;p&gt;An efficient update policy may allow some ‚Äòvesting period‚Äô‚Ää‚Äî‚Äälet the code lag behind the @latest for some time and versions before considering the local copy as obsolete (e.g. local version is 1.3.1 and repository version is 1.3.8) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;ncu&lt;/a&gt; can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-27-yoni-goldberg-npm.png&quot; alt=&quot;alt text&quot; title=&quot;ncu can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 5.8 Other, non-Node related, CI tips&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt; 
&lt;ol class=&quot;postList&quot;&gt;
 &lt;li name=&quot;e3e4&quot; id=&quot;e3e4&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Use a declarative syntax. This is the only option for most vendors but older versions of Jenkins allows using code or UI&lt;/li&gt;
 &lt;li name=&quot;1fdc&quot; id=&quot;1fdc&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Opt for a vendor that has native Docker support&lt;/li&gt;
 &lt;li name=&quot;edcd&quot; id=&quot;edcd&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Fail early, run your fastest tests first. Create a ‚ÄòSmoke testing‚Äô step/milestone that groups multiple fast inspections (e.g. linting, unit tests) and provide snappy feedback to the code committer&lt;/li&gt;
 &lt;li name=&quot;0375&quot; id=&quot;0375&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Make it easy to skim-through all build artifacts including test reports, coverage reports, mutation reports, logs, etc&lt;/li&gt;
 &lt;li name=&quot;df82&quot; id=&quot;df82&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Create multiple pipelines/jobs for each event, reuse steps between them. For example, configure a job for feature branch commits and a different one for master PR. Let each reuse logic using shared steps (most vendors provide some mechanism for code reuse)&lt;/li&gt;
 &lt;li name=&quot;19b0&quot; id=&quot;19b0&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Never embed secrets in a job declaration, grab them from a secret store or from the job‚Äôs configuration&lt;/li&gt;
 &lt;li name=&quot;b70d&quot; id=&quot;b70d&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Explicitly bump version in a release build or at least ensure the developer did so&lt;/li&gt;
 &lt;li name=&quot;957c&quot; id=&quot;957c&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Build only once and perform all the inspections over the single build artifact (e.g. Docker image)&lt;/li&gt;
 &lt;li name=&quot;339b&quot; id=&quot;339b&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Test in an ephemeral environment that doesn‚Äôt drift state between builds. Caching node_modules might be the only exception&lt;/li&gt;
&lt;/ol&gt; 
&lt;br&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; You‚Äòll miss years of wisdom&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;‚ö™ Ô∏è 5.9 Build matrix: Run the same CI steps using multiple Node versions&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Quality checking is about serendipity, the more ground you cover the luckier you get in detecting issues early. When developing reusable packages or running a multi-customer production with various configuration and Node versions, the CI must run the pipeline of tests over all the permutations of configurations. For example, assuming we use MySQL for some customers and Postgres for others‚Ää‚Äî‚Ääsome CI vendors support a feature called ‚ÄòMatrix‚Äô which allow running the suit of testing against all permutations of MySQL, Postgres and multiple Node version like 8, 9 and 10. This is done using configuration only without any additional effort (assuming you have testing or any other quality checks). Other CIs who doesn‚Äôt support Matrix might have extensions or tweaks to allow that &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;‚ùå &lt;strong&gt;Otherwise:&lt;/strong&gt; So after doing all that hard work of writing testing are we going to let bugs sneak in only because of configuration issues?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;‚úè &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: Using Travis (CI vendor) build definition to run the same test over multiple Node versions&lt;/h3&gt; 
 &lt;pre name=&quot;f909&quot; id=&quot;f909&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;language: node_js&lt;br&gt;node_js:&lt;br&gt;  - &quot;7&quot;&lt;br&gt;  - &quot;6&quot;&lt;br&gt;  - &quot;5&quot;&lt;br&gt;  - &quot;4&quot;&lt;br&gt;install:&lt;br&gt;  - npm install&lt;br&gt;script:&lt;br&gt;  - npm run test&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Team&lt;/h1&gt; 
&lt;h2&gt;Yoni Goldberg&lt;/h2&gt; 
&lt;br&gt; 
&lt;img width=&quot;480px&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/yoni-goldberg.jpg&quot;&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Writer&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; I‚Äôm an independent consultant who works with Fortune 500 companies and garage startups on polishing their JS &amp;amp; Node.js applications. More than any other topic I‚Äôm fascinated by and aims to master the art of testing. I‚Äôm also the author of &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices&quot;&gt;Node.js Best Practices&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;üìó Online Course:&lt;/strong&gt; Liked this guide and wish to take your testing skills to the extreme? Consider visiting my comprehensive course &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;Follow:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goldbergyoni/&quot;&gt;üê¶ Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testjavascript.com/contact-2/&quot;&gt;üìû Contact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testjavascript.com/newsletter//&quot;&gt;‚úâÔ∏è Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;hr&gt; 
&lt;br&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Tech reviewer and advisor&lt;/p&gt; 
&lt;p&gt;Took care to revise, improve, lint and polish all the texts&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;hr&gt; 
&lt;br&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Concept, design and great advice&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; A savvy frontend developer, CSS expert and emojis freak&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Helps keep this project running, and reviews security related practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; Loves working on Node.js projects and web application security.&lt;/p&gt; 
&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://geospatialscott.blogspot.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1326248?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Davis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-stdavis&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AdrienRedon&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5978436?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrien REDON&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AdrienRedon&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/NoriSte&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/173663?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stefano Magni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-NoriSte&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.joer.im&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/47742486?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yeoh Joer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-yjoer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jhonnymoreira.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2177742?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jhonny Moreira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jhonnymoreira&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Germanika&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8846678?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ian Germann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-Germanika&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AbdelrahmanHafez&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19984935?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AbdelrahmanHafez&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.ruxandrafediuc.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11021586?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ruxandra Fediuc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-ruxandrafed&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jacklee814&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9951291?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jacklee814&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.petercarrero.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/231727?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Carrero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aloyr&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/huhgawz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/369338?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Huhgawz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-huhgawz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/haakonmb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7099302?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Haakon Borch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-haakonmb&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jaimemendoza.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5395811?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaime Mendoza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jaimemendozadev&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/camerondunford&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/840612?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cameron Dunford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-camerondunford&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shadowspawn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/15719847?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Gee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-shadowspawn&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aurelijusrozenas&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3273544?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aurelijus Ro≈æƒónas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aurelijusrozenas&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://aaronshivers.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/42848750?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aaronshivers&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tomdoes.tech/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/8683577?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Nagle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-tomanagle&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yvesyao&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7723729?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yves yao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-yvesyao&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Userbit&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/34487074?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Userbit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-Userbit&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://glaucialemos.netlify.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1631477?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Glaucia Lemos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#maintenance-glaucia86&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/koooge&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7419215?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;koooge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-koooge&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/michalbiesiada&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18367606?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-mbiesiad&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://roywalker.me&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/611846?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;roywalker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-roywalker&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dangen-effy.github.io/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/23185799?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dangen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-dangen-effy&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.to/mbiesiad&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/60202305?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;biesiadamich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-biesiadamich&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tarojsx.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/127009?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yanlin Jiang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-cncolder&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sanguino&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2077168?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sanguino&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-sanguino&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MorganGeek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3721240?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Morgan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-MorganGeek&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://luk4s.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8350985?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lukas Bischof&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices/commits?author=lukasbischof&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-lukasbischof&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://juanmaruiz.surge.sh&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1837650?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JuanMa Ruiz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-JuanMaRuiz&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://luisangelorjr.com.br&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22268900?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lu√≠s √Çngelo Rodrigues Jr.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-luisangelorjr&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jfernandezpe.wordpress.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/12046620?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jos√© Fern√°ndez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jfernandezpe&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/AlejandroGutierrezB&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/56408597?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Gutierrez Barcenilla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AlejandroGutierrezB&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jasonandmonte&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30088000?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jasonandmonte&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/otavionetoca&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11263232?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Otavio Araujo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices/commits?author=otavionetoca&quot; title=&quot;Tests&quot;&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-otavionetoca&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://contributor.pw&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5027939?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Ivanov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-contributorpw&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>facebook/react-native</title>
      <link>https://github.com/facebook/react-native</link>
      <description>&lt;p&gt;A framework for building native apps with React.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;a href=&quot;https://reactnative.dev/&quot;&gt; React Native &lt;/a&gt; &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt;Learn once, write anywhere:&lt;/strong&gt;&lt;br&gt; Build mobile apps with React. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/facebook/react-native/raw/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;React Native is released under the MIT license.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react-native&quot;&gt; &lt;img src=&quot;https://circleci.com/gh/facebook/react-native.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/react-native&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/react-native?color=brightgreen&amp;amp;label=npm%20package&quot; alt=&quot;Current npm package version.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome!&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=reactnative&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/reactnative.svg?label=Follow%20@reactnative&quot; alt=&quot;Follow @reactnative&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Getting Started&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/docs/tutorial&quot;&gt;Learn the Basics&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/showcase.html&quot;&gt;Showcase&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;Contribute&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://reactnative.dev/help&quot;&gt;Community&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&quot;https://github.com/facebook/react-native/raw/master/.github/SUPPORT.md&quot;&gt;Support&lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;React Native brings &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;strong&gt;React&lt;/strong&gt;‚Äôs&lt;/a&gt; declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative.&lt;/strong&gt; React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based.&lt;/strong&gt; Build encapsulated components that manage their state, then compose them to make complex UIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Velocity.&lt;/strong&gt; See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portability.&lt;/strong&gt; Reuse code across iOS, Android, and &lt;a href=&quot;https://reactnative.dev/docs/out-of-tree-platforms&quot;&gt;other platforms&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;React Native is developed and supported by many companies and individual core contributors. Find out more in our &lt;a href=&quot;https://github.com/facebook/react-native/raw/master/ECOSYSTEM.md&quot;&gt;ecosystem overview&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-building-your-first-react-native-app&quot;&gt;Building your first React Native app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-upgrading&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-how-to-contribute&quot;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/react-native/master/#-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìã Requirements&lt;/h2&gt; 
&lt;p&gt;React Native apps may target iOS 11.0 and Android 5.0 (API 21) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like &lt;a href=&quot;https://expo.io&quot;&gt;Expo&lt;/a&gt; can be used to work around this.&lt;/p&gt; 
&lt;h2&gt;üéâ Building your first React Native app&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Getting Started guide&lt;/a&gt;. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snack.expo.io/@hramos/hello,-world!&quot;&gt;Trying out React Native&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;Creating a New Application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/integration-with-existing-apps&quot;&gt;Adding React Native to an Existing Application&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation for React Native can be found on our &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;React documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The source for the React Native documentation and website is hosted on a separate repo, &lt;a href=&quot;https://github.com/facebook/react-native-website&quot;&gt;&lt;strong&gt;@facebook/react-native-website&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üöÄ Upgrading&lt;/h2&gt; 
&lt;p&gt;Upgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the &lt;a href=&quot;https://reactnative.dev/docs/upgrading&quot;&gt;Upgrading Guide&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;p&gt;React Native releases are discussed in the React Native Community, &lt;a href=&quot;https://github.com/react-native-community/react-native-releases&quot;&gt;&lt;strong&gt;@react-native-community/react-native-releases&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üëè How to Contribute&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the &lt;a href=&quot;https://code.fb.com/codeofconduct/&quot;&gt;full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactnative.dev/docs/contributing&quot;&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;Open Source Roadmap&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;You can learn more about our vision for React Native in the &lt;a href=&quot;https://github.com/facebook/react-native/wiki/Roadmap&quot;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/facebook/react-native/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h3&gt;Discussions&lt;/h3&gt; 
&lt;p&gt;Larger discussions and proposals are discussed in &lt;a href=&quot;https://github.com/react-native-community/discussions-and-proposals&quot;&gt;&lt;strong&gt;@react-native-community/discussions-and-proposals&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;React Native is MIT licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;React Native documentation is Creative Commons licensed, as found in the &lt;a href=&quot;https://github.com/facebook/react-native/raw/master/LICENSE-docs&quot;&gt;LICENSE-docs&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don‚Äôt support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can‚Äôt reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
  var c = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
console.log(c); // Prints 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ‡≤†_‡≤†
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt; &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It‚Äôs ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;functions--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it‚Äôs easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function‚Äôs definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it‚Äôs time to extract it to its own module! Don‚Äôt forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error‚Äôs call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--iife&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--in-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--note-on-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--arguments-shadow&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-rest&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-default-parameters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn‚Äôt mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--default-side-effects&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--defaults-last&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--constructor&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-spacing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn‚Äôt have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--mutate-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--reassign-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.13&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--spread-vs-apply&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.14&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs cleaner, you don‚Äôt need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-invocation-indentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--implicit-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--paren-wrap&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--one-arg-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It‚Äôs so long that we don‚Äôt want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It‚Äôs so long that we don‚Äôt want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--confusing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--implicit-arrow-linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--use-class&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--extends&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--chaining&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--tostring&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It‚Äôs okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--no-useless&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--no-duplicate-members&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--methods-use-this&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires to use specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;modules--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let‚Äôs start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-wildcard&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-export-from-import&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-duplicate-imports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// ‚Ä¶ some other imports ‚Ä¶ //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-mutable-exports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--prefer-default-export&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--imports-first&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--multiline-imports-over-newlines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-webpack-loader-syntax&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--import-extensions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you‚Äôre importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;iterators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don‚Äôt use iterators. Prefer JavaScript‚Äôs higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ‚Ä¶ to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don‚Äôt use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don‚Äôt transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;properties--dot&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;properties--bracket&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es2016-properties--exponentiation-operator&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--one-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It‚Äôs easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const-let-group&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--define-where-used&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-chain-assignment&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don‚Äôt chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--unary-increment-decrement&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-unused-vars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--about&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It‚Äôs important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn‚Äôt work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--anon-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--named-expresions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;hoisting--named-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--eqeqeq&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--if&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--shortcuts&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--moreinfo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--switch-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--nested-ternaries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--unneeded-ternary&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--no-mixed-operators&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer‚Äôs intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--cuddled-elses&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you‚Äôre using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block‚Äôs closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--no-else-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;control-statements&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;control-statement--value-selection&quot;&gt;&lt;/a&gt;&lt;a name=&quot;control-statements--value-selection&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don‚Äôt use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comments--multiline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--singleline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it‚Äôs on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--actionitems&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you‚Äôre pointing out a problem that needs to be revisited, or if you‚Äôre suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--fixme&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn‚Äôt use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--todo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--spaces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
‚àô‚àô‚àô‚àôlet name;
}

// bad
function bar() {
‚àôlet name;
}

// good
function baz() {
‚àô‚àôlet name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--before-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--around-keywords&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--infix-ops&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--newline-at-end&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/raw/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;‚Üµ
‚Üµ
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;‚Üµ
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--chains&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
const svg = leds.enter().append(&#39;svg:svg&#39;);
svg.classed(&#39;led&#39;, true).attr(&#39;width&#39;, (radius + margin) * 2);
const g = svg.append(&#39;svg:g&#39;);
g.attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`).call(tron.led);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--after-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--padded-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-blanks&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-brackets&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--max-len&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--block-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--comma-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--computed-property-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--func-call-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--key-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-trailing-spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-empty-lines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;commas--leading-trailing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;commas--dangling&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don‚Äôt have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;semicolons--required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;20.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That‚Äôs impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That‚Äôs impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--explicit&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--strings&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn‚Äôt guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--numbers&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--comment-deviations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you‚Äôre doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--bitwise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--booleans&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;naming--descriptive&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--leading-underscore&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean ‚Äúprivate‚Äù, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won‚Äôt count as breaking, or that tests aren‚Äôt needed. tl;dr: if you want something to be ‚Äúprivate‚Äù, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--self-this&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don‚Äôt save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--filename-matches-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase-default-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function‚Äôs name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase-singleton&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--Acronyms-and-Initialisms&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--uppercase&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--not-required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--no-getters-setters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--boolean-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--consistent&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It‚Äôs okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;events--hash&quot;&gt;&lt;/a&gt;&lt;a name=&quot;24.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a ‚Äúhash‚Äù) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--dollar-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--cache&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--queries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;http://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--find&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es5-compat--kangax&quot;&gt;&lt;/a&gt;&lt;a name=&quot;26.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;‚Äôs ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;ecmascript-6-styles&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es6-styles&quot;&gt;&lt;/a&gt;&lt;a name=&quot;27.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a name=&quot;tc39-proposals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isnan&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isfinite&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;testing--yup&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;testing--for-real&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it‚Äôs not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading‚Ä¶&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mob√¶k, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don‚Äôt Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript‚Ä¶&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we‚Äôll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AloPeyk&quot;&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d‚ÄôAlene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/raw/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury‚Äôs Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‚ÄòSoftware‚Äô), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED ‚ÄòAS IS‚Äô, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;‚¨Ü back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team‚Äôs style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>jgraph/drawio</title>
      <link>https://github.com/jgraph/drawio</link>
      <description>&lt;p&gt;Source to app.diagrams.net&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://travis-ci.com/jgraph/drawio&quot;&gt;&lt;img src=&quot;https://travis-ci.com/jgraph/drawio.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.diagrams.net&quot;&gt;diagrams.net&lt;/a&gt;, &lt;a href=&quot;https://www.diagrams.net/blog/move-diagrams-net&quot;&gt;previously draw.io&lt;/a&gt;, is an online diagramming web site that delivers the source in this project.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The source code in this repo is licensed under the Apache v2.&lt;/p&gt; 
&lt;p&gt;The JGraph provided icons and diagram templates are licensed under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;CC BY 4.0&lt;/a&gt;. Additional terms may also apply where the icons are originally defined by a third-party copyright holder. We have checked in all cases that the original license allows use in this project.&lt;/p&gt; 
&lt;p&gt;Additional minified JavaScript files and Java libraries are used in this project. All of the licenses are deemed compatible with the Apache 2.0, nothing is GPL or AGPL.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;A development guide is being started on the GitHub project wiki. There is a &lt;a href=&quot;http://stackoverflow.com/questions/tagged/draw.io&quot;&gt;draw.io&lt;/a&gt; tag on Stack Overflow currently, please make sure any questions adhere to their guidelines for questions.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://jgraph.github.io/mxgraph/&quot;&gt;mxGraph documentation&lt;/a&gt; provides a lot of the docs for the bottom part of the stack. There is an &lt;a href=&quot;http://stackoverflow.com/questions/tagged/mxgraph&quot;&gt;mxgraph tag on SO&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running&lt;/h2&gt; 
&lt;p&gt;One way to run diagrams.net is to fork this project, &lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;publish the master branch to GitHub pages&lt;/a&gt; and the &lt;a href=&quot;https://jgraph.github.io/drawio/src/main/webapp/index.html&quot;&gt;pages sites&lt;/a&gt; will have the full editor functionality (sans the integrations).&lt;/p&gt; 
&lt;p&gt;Another way is to use &lt;a href=&quot;https://github.com/jgraph/docker-drawio&quot;&gt;the recommended Docker project&lt;/a&gt; or to download &lt;a href=&quot;https://get.diagrams.net&quot;&gt;draw.io Desktop&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The full packaged .war of the client and servlets is built when the project is tagged and available on the &lt;a href=&quot;https://github.com/jgraph/draw.io/releases&quot;&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;diagrams.net supports IE 11, Chrome 70+, Firefox 70+, Safari 11+, Opera 50+, Native Android browser 7x+, the default browser in the current and previous major iOS versions (e.g. 11.2.x and 10.3.x) and Edge 79+.&lt;/p&gt; 
&lt;h2&gt;Open-source, not open-contribution&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.sqlite.org/copyright.html&quot;&gt;Similar to SQLite&lt;/a&gt;, diagrams.net is open source but closed to contributions.&lt;/p&gt; 
&lt;p&gt;The level of complexity of this project means that even simple changes can break a &lt;em&gt;lot&lt;/em&gt; of other moving parts. The amount of testing required is far more than it first seems. If we were to receive a PR, we‚Äôd have to basically throw it away and write it how we want it to be implemented.&lt;/p&gt; 
&lt;p&gt;We are grateful for community involvement, bug reports, &amp;amp; feature requests. We do not wish to come off as anything but welcoming, however, we‚Äôve made the decision to keep this project closed to contributions for the long term viability of the project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lerna/lerna</title>
      <link>https://github.com/lerna/lerna</link>
      <description>&lt;p&gt;üêâ A tool for managing JavaScript projects with multiple packages.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Lerna&quot; src=&quot;https://user-images.githubusercontent.com/645641/79596653-38f81200-80e1-11ea-98cd-1c6a3bb5de51.png&quot; width=&quot;480&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; A tool for managing JavaScript projects with multiple packages. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/lerna&quot;&gt;&lt;img alt=&quot;NPM Status&quot; src=&quot;https://img.shields.io/npm/v/lerna.svg?style=flat&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lerna/lerna/actions?query=branch%3Amain+workflow%3Aci&quot;&gt;&lt;img alt=&quot;CI Status&quot; src=&quot;https://github.com/lerna/lerna/workflows/ci/badge.svg?branch=main&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#getting-started&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#how-it-works&quot;&gt;How It Works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Commands 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/publish#readme&quot;&gt;&lt;code&gt;lerna publish&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/version#readme&quot;&gt;&lt;code&gt;lerna version&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/bootstrap#readme&quot;&gt;&lt;code&gt;lerna bootstrap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/list#readme&quot;&gt;&lt;code&gt;lerna list&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/changed#readme&quot;&gt;&lt;code&gt;lerna changed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/diff#readme&quot;&gt;&lt;code&gt;lerna diff&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/exec#readme&quot;&gt;&lt;code&gt;lerna exec&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/run#readme&quot;&gt;&lt;code&gt;lerna run&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/init#readme&quot;&gt;&lt;code&gt;lerna init&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/add#readme&quot;&gt;&lt;code&gt;lerna add&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/clean#readme&quot;&gt;&lt;code&gt;lerna clean&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/import#readme&quot;&gt;&lt;code&gt;lerna import&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/link#readme&quot;&gt;&lt;code&gt;lerna link&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/create#readme&quot;&gt;&lt;code&gt;lerna create&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/info#readme&quot;&gt;&lt;code&gt;lerna info&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/#lernajson&quot;&gt;Lerna.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/core/global-options&quot;&gt;Global Flags&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/core/filter-options&quot;&gt;Filter Flags&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Splitting up large codebases into separate independently versioned packages is extremely useful for code sharing. However, making changes across many repositories is &lt;em&gt;messy&lt;/em&gt; and difficult to track, and testing across repositories becomes complicated very quickly.&lt;/p&gt; 
&lt;p&gt;To solve these (and many other) problems, some projects will organize their codebases into multi-package repositories (sometimes called &lt;a href=&quot;https://github.com/babel/babel/raw/master/doc/design/monorepo.md&quot;&gt;monorepos&lt;/a&gt;). Projects like &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages&quot;&gt;Babel&lt;/a&gt;, &lt;a href=&quot;https://github.com/facebook/react/tree/master/packages&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/angular/angular/tree/master/modules&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/master/packages&quot;&gt;Ember&lt;/a&gt;, &lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages&quot;&gt;Meteor&lt;/a&gt;, &lt;a href=&quot;https://github.com/facebook/jest/tree/master/packages&quot;&gt;Jest&lt;/a&gt;, and many others develop all of their packages within a single repository.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Lerna is a tool that optimizes the workflow around managing multi-package repositories with git and npm.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Lerna can also reduce the time and space requirements for numerous copies of packages in development and build environments - normally a downside of dividing a project into many separate NPM packages. See the &lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/doc/hoist.md&quot;&gt;hoist documentation&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;What does a Lerna repo look like?&lt;/h3&gt; 
&lt;p&gt;There‚Äôs actually very little to it. You have a file structure that looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;my-lerna-repo/
  package.json
  packages/
    package-1/
      package.json
    package-2/
      package.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;What can Lerna do?&lt;/h3&gt; 
&lt;p&gt;The two primary commands in Lerna are &lt;code&gt;lerna bootstrap&lt;/code&gt; and &lt;code&gt;lerna publish&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bootstrap&lt;/code&gt; will link dependencies in the repo together. &lt;code&gt;publish&lt;/code&gt; will help publish any updated packages.&lt;/p&gt; 
&lt;h3&gt;What can‚Äôt Lerna do?&lt;/h3&gt; 
&lt;p&gt;Lerna is not a deployment tool for serverless monorepos. Hoisting might be incompatible with traditional serverless monorepo deployment techniques.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The instructions below are for Lerna 3.x. We recommend using it instead of 2.x for a new Lerna project.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Let‚Äôs start by installing Lerna as a dev dependency of your project with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ mkdir lerna-repo &amp;amp;&amp;amp; cd $_
$ npx lerna init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a &lt;code&gt;lerna.json&lt;/code&gt; configuration file as well as a &lt;code&gt;packages&lt;/code&gt; folder, so your folder should now look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lerna-repo/
  packages/
  package.json
  lerna.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;Lerna allows you to manage your project using one of two modes: Fixed or Independent.&lt;/p&gt; 
&lt;h3&gt;Fixed/Locked mode (default)&lt;/h3&gt; 
&lt;p&gt;Fixed mode Lerna projects operate on a single version line. The version is kept in the &lt;code&gt;lerna.json&lt;/code&gt; file at the root of your project under the &lt;code&gt;version&lt;/code&gt; key. When you run &lt;code&gt;lerna publish&lt;/code&gt;, if a module has been updated since the last time a release was made, it will be updated to the new version you‚Äôre releasing. This means that you only publish a new version of a package when you need to.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If you have a major version zero, all updates are &lt;a href=&quot;https://semver.org/#spec-item-4&quot;&gt;considered breaking&lt;/a&gt;. Because of that, running &lt;code&gt;lerna publish&lt;/code&gt; with a major version zero and choosing any non-prerelease version number will cause new versions to be published for all packages, even if not all packages have changed since the last release.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This is the mode that &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; is currently using. Use this if you want to automatically tie all package versions together. One issue with this approach is that a major change in any package will result in all packages having a new major version.&lt;/p&gt; 
&lt;h3&gt;Independent mode&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;lerna init --independent&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Independent mode Lerna projects allows maintainers to increment package versions independently of each other. Each time you publish, you will get a prompt for each package that has changed to specify if it‚Äôs a patch, minor, major or custom change.&lt;/p&gt; 
&lt;p&gt;Independent mode allows you to more specifically update versions for each package and makes sense for a group of components. Combining this mode with something like &lt;a href=&quot;https://github.com/semantic-release/semantic-release&quot;&gt;semantic-release&lt;/a&gt; would make it less painful. (There is work on this already at &lt;a href=&quot;https://github.com/atlassian/lerna-semantic-release&quot;&gt;atlassian/lerna-semantic-release&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Set the &lt;code&gt;version&lt;/code&gt; key in &lt;code&gt;lerna.json&lt;/code&gt; to &lt;code&gt;independent&lt;/code&gt; to run in independent mode.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues while using Lerna please check out our &lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/doc/troubleshooting.md&quot;&gt;Troubleshooting&lt;/a&gt; document where you might find the answer to your problem.&lt;/p&gt; 
&lt;h2&gt;Frequently asked questions&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/FAQ.md&quot;&gt;FAQ.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Concepts&lt;/h2&gt; 
&lt;p&gt;Lerna will log to a &lt;code&gt;lerna-debug.log&lt;/code&gt; file (same as &lt;code&gt;npm-debug.log&lt;/code&gt;) when it encounters an error running a command.&lt;/p&gt; 
&lt;p&gt;Lerna also has support for &lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;scoped packages&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;lerna --help&lt;/code&gt; to see all available commands and options.&lt;/p&gt; 
&lt;h3&gt;lerna.json&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;version&quot;: &quot;1.1.3&quot;,
  &quot;npmClient&quot;: &quot;npm&quot;,
  &quot;command&quot;: {
    &quot;publish&quot;: {
      &quot;ignoreChanges&quot;: [&quot;ignored-file&quot;, &quot;*.md&quot;],
      &quot;message&quot;: &quot;chore(release): publish&quot;,
      &quot;registry&quot;: &quot;https://npm.pkg.github.com&quot;
    },
    &quot;bootstrap&quot;: {
      &quot;ignore&quot;: &quot;component-*&quot;,
      &quot;npmClientArgs&quot;: [&quot;--no-package-lock&quot;]
    }
  },
  &quot;packages&quot;: [&quot;packages/*&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;version&lt;/code&gt;: the current version of the repository.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npmClient&lt;/code&gt;: an option to specify a specific client to run commands with (this can also be specified on a per command basis). Change to &lt;code&gt;&quot;yarn&quot;&lt;/code&gt; to run all commands with yarn. Defaults to ‚Äúnpm‚Äù.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.publish.ignoreChanges&lt;/code&gt;: an array of globs that won‚Äôt be included in &lt;code&gt;lerna changed/publish&lt;/code&gt;. Use this to prevent publishing a new version unnecessarily for changes, such as fixing a &lt;code&gt;README.md&lt;/code&gt; typo.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.publish.message&lt;/code&gt;: a custom commit message when performing version updates for publication. See &lt;a href=&quot;https://raw.githubusercontent.com/lerna/lerna/main/commands/version#--message-msg&quot;&gt;@lerna/version&lt;/a&gt; for more details.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.publish.registry&lt;/code&gt;: use it to set a custom registry url to publish to instead of npmjs.org, you must already be authenticated if required.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.bootstrap.ignore&lt;/code&gt;: an array of globs that won‚Äôt be bootstrapped when running the &lt;code&gt;lerna bootstrap&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.bootstrap.npmClientArgs&lt;/code&gt;: array of strings that will be passed as arguments directly to &lt;code&gt;npm install&lt;/code&gt; during the &lt;code&gt;lerna bootstrap&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command.bootstrap.scope&lt;/code&gt;: an array of globs that restricts which packages will be bootstrapped when running the &lt;code&gt;lerna bootstrap&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;packages&lt;/code&gt;: Array of globs to use as package locations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The packages config in &lt;code&gt;lerna.json&lt;/code&gt; is a list of globs that match directories containing a &lt;code&gt;package.json&lt;/code&gt;, which is how lerna recognizes ‚Äúleaf‚Äù packages (vs the ‚Äúroot‚Äù &lt;code&gt;package.json&lt;/code&gt;, which is intended to manage the dev dependencies and scripts for the entire repo).&lt;/p&gt; 
&lt;p&gt;By default, lerna initializes the packages list as &lt;code&gt;[&quot;packages/*&quot;]&lt;/code&gt;, but you can also use another directory such as &lt;code&gt;[&quot;modules/*&quot;]&lt;/code&gt;, or &lt;code&gt;[&quot;package1&quot;, &quot;package2&quot;]&lt;/code&gt;. The globs defined are relative to the directory that &lt;code&gt;lerna.json&lt;/code&gt; lives in, which is usually the repository root. The only restriction is that you can‚Äôt directly nest package locations, but this is a restriction shared by ‚Äúnormal‚Äù npm packages as well.&lt;/p&gt; 
&lt;p&gt;For example, &lt;code&gt;[&quot;packages/*&quot;, &quot;src/**&quot;]&lt;/code&gt; matches this tree:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;packages/
‚îú‚îÄ‚îÄ foo-pkg
‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ bar-pkg
‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ baz-pkg
‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îî‚îÄ‚îÄ qux-pkg
    ‚îî‚îÄ‚îÄ package.json
src/
‚îú‚îÄ‚îÄ admin
‚îÇ   ‚îú‚îÄ‚îÄ my-app
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îÇ   ‚îú‚îÄ‚îÄ stuff
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îÇ   ‚îî‚îÄ‚îÄ things
‚îÇ       ‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ profile
‚îÇ   ‚îî‚îÄ‚îÄ more-things
‚îÇ       ‚îî‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ property
‚îÇ   ‚îú‚îÄ‚îÄ more-stuff
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ package.json
‚îÇ   ‚îî‚îÄ‚îÄ other-things
‚îÇ       ‚îî‚îÄ‚îÄ package.json
‚îî‚îÄ‚îÄ upload
    ‚îî‚îÄ‚îÄ other-stuff
        ‚îî‚îÄ‚îÄ package.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Locating leaf packages under &lt;code&gt;packages/*&lt;/code&gt; is considered a ‚Äúbest-practice‚Äù, but is not a requirement for using Lerna.&lt;/p&gt; 
&lt;h4&gt;Legacy Fields&lt;/h4&gt; 
&lt;p&gt;Some &lt;code&gt;lerna.json&lt;/code&gt; fields are no longer in use. Those of note include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lerna&lt;/code&gt;: originally used to indicate the current version of Lerna. &lt;a href=&quot;https://github.com/lerna/lerna/pull/1122&quot;&gt;Made obsolete&lt;/a&gt; and &lt;a href=&quot;https://github.com/lerna/lerna/pull/1225&quot;&gt;removed&lt;/a&gt; in v3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Common &lt;code&gt;devDependencies&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Most &lt;code&gt;devDependencies&lt;/code&gt; can be pulled up to the root of a Lerna repo with &lt;code&gt;lerna link convert&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The above command will automatically hoist things and use relative &lt;code&gt;file:&lt;/code&gt; specifiers.&lt;/p&gt; 
&lt;p&gt;Hoisting has a few benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All packages use the same version of a given dependency&lt;/li&gt; 
 &lt;li&gt;Can keep dependencies at the root up-to-date with an automated tool such as &lt;a href=&quot;https://snyk.io/&quot;&gt;Snyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dependency installation time is reduced&lt;/li&gt; 
 &lt;li&gt;Less storage is needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that &lt;code&gt;devDependencies&lt;/code&gt; providing ‚Äúbinary‚Äù executables that are used by npm scripts still need to be installed directly in each package where they‚Äôre used.&lt;/p&gt; 
&lt;p&gt;For example the &lt;code&gt;nsp&lt;/code&gt; dependency is necessary in this case for &lt;code&gt;lerna run nsp&lt;/code&gt; (and &lt;code&gt;npm run nsp&lt;/code&gt; within the package‚Äôs directory) to work correctly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;scripts&quot;: {
    &quot;nsp&quot;: &quot;nsp&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;nsp&quot;: &quot;^2.3.3&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Git Hosted Dependencies&lt;/h3&gt; 
&lt;p&gt;Lerna allows target versions of local dependent packages to be written as a &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;git remote url&lt;/a&gt; with a &lt;code&gt;committish&lt;/code&gt; (e.g., &lt;code&gt;#v1.0.0&lt;/code&gt; or &lt;code&gt;#semver:^1.0.0&lt;/code&gt;) instead of the normal numeric version range. This allows packages to be distributed via git repositories when packages must be private and a &lt;a href=&quot;https://www.dotconferences.com/2016/05/fabien-potencier-monolithic-repositories-vs-many-repositories&quot;&gt;private npm registry is not desired&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that lerna does &lt;em&gt;not&lt;/em&gt; perform the actual splitting of git history into the separate read-only repositories. This is the responsibility of the user. (See &lt;a href=&quot;https://github.com/lerna/lerna/pull/1033#issuecomment-335894690&quot;&gt;this comment&lt;/a&gt; for implementation details)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// packages/pkg-1/package.json
{
  name: &quot;pkg-1&quot;,
  version: &quot;1.0.0&quot;,
  dependencies: {
    &quot;pkg-2&quot;: &quot;github:example-user/pkg-2#v1.0.0&quot;
  }
}

// packages/pkg-2/package.json
{
  name: &quot;pkg-2&quot;,
  version: &quot;1.0.0&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example above,&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lerna bootstrap&lt;/code&gt; will properly symlink &lt;code&gt;pkg-2&lt;/code&gt; into &lt;code&gt;pkg-1&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lerna publish&lt;/code&gt; will update the committish (&lt;code&gt;#v1.0.0&lt;/code&gt;) in &lt;code&gt;pkg-1&lt;/code&gt; when &lt;code&gt;pkg-2&lt;/code&gt; changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;README Badge&lt;/h3&gt; 
&lt;p&gt;Using Lerna? Add a README badge to show it off: &lt;a href=&quot;https://lerna.js.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;lerna&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![lerna](https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg)](https://lerna.js.org/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Wizard&lt;/h3&gt; 
&lt;p&gt;If you prefer some guidance for cli (in case you‚Äôre about to start using lerna or introducing it to a new team), you might like &lt;a href=&quot;https://github.com/szarouski/lerna-wizard&quot;&gt;lerna-wizard&lt;/a&gt;. It will lead you through a series of well-defined steps:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/szarouski/lerna-wizard/2e269fb5a3af7100397a1f874cea3fa78089486e/demo.png&quot; alt=&quot;lerna-wizard demo image&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docmirror/dev-sidecar</title>
      <link>https://github.com/docmirror/dev-sidecar</link>
      <description>&lt;p&gt;ÂºÄÂèëËÄÖËæπËΩ¶ÔºågithubÊâì‰∏çÂºÄÔºågithubÂä†ÈÄüÔºågit cloneÂä†ÈÄüÔºågit release‰∏ãËΩΩÂä†ÈÄüÔºåstackoverflowÂä†ÈÄü&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dev-sidecar&lt;/h1&gt; 
&lt;p&gt;ÂºÄÂèëËÄÖËæπËΩ¶ÔºåÂëΩÂêçÂèñËá™service-meshÁöÑservice-sidecarÔºåÊÑè‰∏∫‰∏∫ÂºÄÂèëËÄÖÊâìËæÖÂä©ÁöÑËæπËΩ¶Â∑•ÂÖ∑&lt;br&gt; ÈÄöËøáÊú¨Âú∞‰ª£ÁêÜÁöÑÊñπÂºèÂ∞ÜhttpsËØ∑Ê±Ç‰ª£ÁêÜÂà∞‰∏Ä‰∫õÂõΩÂÜÖÁöÑÂä†ÈÄüÈÄöÈÅì‰∏ä&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/docmirror/dev-sidecar&quot;&gt;&lt;img src=&quot;https://gitee.com/docmirror/dev-sidecar/badge/star.svg?theme=dark&quot; alt=&quot;star&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/docmirror/dev-sidecar&quot;&gt;&lt;img alt=&quot;GitHub stars&quot; src=&quot;https://img.shields.io/github/stars/docmirror/dev-sidecar?logo=github&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ÁâπÊÄß&lt;/h2&gt; 
&lt;h3&gt;1„ÄÅ dns‰ºòÈÄâÔºàËß£ÂÜ≥ÂõΩÂÜÖdnsÊ±°ÊüìÈóÆÈ¢òÔºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê†πÊçÆÁΩëÁªúÁä∂ÂÜµÊô∫ËÉΩËß£ÊûêÊúÄ‰Ω≥ÂüüÂêçipÂú∞ÂùÄÔºåËé∑ÂèñÊúÄ‰Ω≥ÁΩëÁªúÈÄüÂ∫¶&lt;/li&gt; 
 &lt;li&gt;‰∏çÁî®&lt;code&gt;ÔΩÜÔΩÅÔΩé qiang&lt;/code&gt;‰πüËÉΩËß£ÂÜ≥‰∏Ä‰∫õÁΩëÁ´ôÂíåÂ∫ìÊó†Ê≥ïËÆøÈóÆÊàñËÆøÈóÆÈÄüÂ∫¶ÊÖ¢ÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;Âª∫ËÆÆÈÅáÂà∞ÊâìÂºÄÊØîËæÉÊÖ¢ÁöÑÂõΩÂ§ñÁΩëÁ´ôÔºåÂèØ‰ª•‰ºòÂÖàÂ∞ùËØïÂ∞ÜËØ•ÂüüÂêçÊ∑ªÂä†Âà∞dnsËÆæÁΩÆ‰∏≠ÔºàÊ≥®ÊÑèÔºöË¢´GFWÂ∞ÅÊùÄÁöÑÊó†ÊïàÔºâ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2„ÄÅ ËØ∑Ê±ÇÊã¶Êà™&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êã¶Êà™Êâì‰∏çÂºÄÁöÑÁΩëÁ´ôÔºå‰ª£ÁêÜÂà∞Âä†ÈÄüÈïúÂÉèÁ´ôÁÇπ‰∏äÂéª„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÂèØÈÖçÁΩÆÂ§ö‰∏™ÈïúÂÉèÁ´ô‰Ωú‰∏∫Â§á‰ªΩ&lt;/li&gt; 
 &lt;li&gt;ÂÖ∑Â§áÊµãÈÄüÊú∫Âà∂ÔºåÂΩìËÆøÈóÆÂ§±Ë¥•ÊàñË∂ÖÊó∂‰πãÂêéÔºåËá™Âä®ÂàáÊç¢Âà∞Â§áÁî®Á´ôÁÇπÔºå‰ΩøÂæóÁõÆÊ†áÊúçÂä°È´òÂèØÁî®&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3„ÄÅ githubÂä†ÈÄü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;release„ÄÅsource„ÄÅzip‰∏ãËΩΩÂä†ÈÄü&lt;/li&gt; 
 &lt;li&gt;clone Âä†ÈÄü&lt;/li&gt; 
 &lt;li&gt;Â§¥ÂÉèÂä†ÈÄü&lt;/li&gt; 
 &lt;li&gt;Ëß£ÂÜ≥readme‰∏≠ÂõæÁâáÂºïÁî®Êó†Ê≥ïÂä†ËΩΩÁöÑÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;gist.github.com Âä†ÈÄü&lt;/li&gt; 
 &lt;li&gt;Ëß£ÂÜ≥git push ÂÅ∂Â∞îÂ§±Ë¥•ÈúÄË¶ÅËæìÂÖ•Ë¥¶Âè∑ÂØÜÁ†ÅÁöÑÈóÆÈ¢òÔºàfatal: TaskCanceledException encountered / fatal: HttpRequestException encounteredÔºâ&lt;/li&gt; 
 &lt;li&gt;raw/blameÂä†ÈÄü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4„ÄÅ Stack Overflow Âä†ÈÄü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Â∞Üajax.google.com‰ª£ÁêÜÂà∞Âä†ÈÄüCDN‰∏ä&lt;/li&gt; 
 &lt;li&gt;recaptcha ÂõæÁâáÈ™åËØÅÁ†ÅÂä†ÈÄü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;5„ÄÅ npmÂä†ÈÄü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊîØÊåÅÂºÄÂêØnpm‰ª£ÁêÜ&lt;/li&gt; 
 &lt;li&gt;ÂÆòÊñπ‰∏éÊ∑òÂÆùnpm registry‰∏ÄÈîÆÂàáÊç¢,&lt;/li&gt; 
 &lt;li&gt;Êüê‰∫õnpm installÁöÑÊó∂ÂÄôÔºåÂπ∂‰∏î‰ΩøÁî®cnpm‰πüÊó†Ê≥ïÂÆâË£ÖÊó∂ÔºåÂèØ‰ª•Â∞ùËØïÂºÄÂêØnpm‰ª£ÁêÜÂÜçËØï&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;6„ÄÅ Â¢ûÂº∫ÂäüËÉΩ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ºóÊâÄÂë®Áü•ÁöÑÂéüÂõ†Ôºå‰∏çËÉΩËØ¥Â§™Â§öÔºåÈªòËÆ§ÂÖ≥Èó≠ÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂèØ‰ª•ÁßÅ‰∏ã‰∫§ÊµÅ&lt;/li&gt; 
 &lt;li&gt;ÂèçÊ≠£ÂºÄ‰∫ÜËøô‰∏™‰πãÂêéÔºå‰∏äÈù¢ÈÇ£‰∫õdns‰ºòÈÄâ‰ªÄ‰πàÁöÑÁâπÊÄßÂ•ΩÂÉèÈÉΩ‰∏çÈ¶ô‰∫Ü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;ÂÆâÂÖ®Ë≠¶Âëä&lt;/strong&gt;&lt;/em&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ËØ∑Âãø‰ΩøÁî®Êù•Ê∫ê‰∏çÊòéÁöÑÊúçÂä°Âú∞ÂùÄÔºåÊúâÈöêÁßÅÂíåË¥¶Âè∑Ê≥ÑÈú≤È£éÈô©&lt;/li&gt; 
 &lt;li&gt;Êú¨Â∫îÁî®ÂèäÊúçÂä°Á´ØÊâøËØ∫‰∏çÊî∂ÈõÜ‰ªª‰Ωï‰ø°ÊÅØ„ÄÇ‰ªãÊÑèËÄÖËØ∑‰ΩøÁî®ÂÆâÂÖ®Ê®°Âºè„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Âª∫ËÆÆËá™Âª∫ÊúçÂä°Á´ØÔºàÂ¢ûÂº∫ÂäüËÉΩÈ°µÈù¢Âè≥‰∏äËßíÁÇπÂáªÊü•ÁúãËá™Âª∫ÊúçÂä°Á´ØÊñπÊ≥ïÔºâ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Âø´ÈÄüÂºÄÂßã&lt;/h2&gt; 
&lt;p&gt;ÊîØÊåÅwindows„ÄÅMac&lt;/p&gt; 
&lt;h3&gt;DevSidecarÊ°åÈù¢Â∫îÁî®&lt;/h3&gt; 
&lt;h4&gt;1 ‰∏ãËΩΩÂÆâË£ÖÂåÖ&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;release‰∏ãËΩΩ&lt;br&gt; &lt;a href=&quot;https://gitee.com/docmirror/dev-sidecar/releases&quot;&gt;Gitee Release&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/docmirror/dev-sidecar/releases&quot;&gt;Github Release&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Windows: ËØ∑ÈÄâÊã©DevSidecar-x.x.x.exe&lt;br&gt; Mac: ËØ∑ÈÄâÊã©DevSidecar-x.x.x.dmg&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2 ÂÆâË£ÖÂêéÊâìÂºÄ&lt;/h4&gt; 
&lt;p&gt;Ê≥®ÊÑèÔºömacÁâàÂÆâË£ÖÈúÄË¶ÅÂú®‚ÄúÁ≥ªÁªüÂÅèÂ•ΩËÆæÁΩÆ-&amp;gt;ÂÆâÂÖ®ÊÄß‰∏éÈöêÁßÅ-&amp;gt;ÈÄöÁî®‚Äù‰∏≠Ëß£ÈîÅÂπ∂ÂÖÅËÆ∏Â∫îÁî®ÂÆâË£Ö&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/index.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;3 ÂÆâË£ÖÊ†πËØÅ‰π¶&lt;/h4&gt; 
&lt;p&gt;Á¨¨‰∏ÄÊ¨°ÊâìÂºÄ‰ºöÊèêÁ§∫ÂÆâË£ÖËØÅ‰π¶ÔºåÊ†πÊçÆÊèêÁ§∫Êìç‰ΩúÂç≥ÂèØ&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ê†πËØÅ‰π¶ÊòØÊú¨Âú∞ÈöèÊú∫ÁîüÊàêÁöÑÔºåÊâÄ‰ª•‰∏çÁî®ÊãÖÂøÉÊ†πËØÅ‰π¶ÁöÑÂÆâÂÖ®ÈóÆÈ¢òÔºàÊú¨Â∫îÁî®‰∏çÊî∂ÈõÜ‰ªª‰ΩïÁî®Êà∑‰ø°ÊÅØÔºâ&lt;br&gt; ‰Ω†‰πüÂèØ‰ª•Âú®Âä†ÈÄüÊúçÂä°ËÆæÁΩÆ‰∏≠Ëá™ÂÆö‰πâÊ†πËØÅ‰π¶ÔºàPEMÊ†ºÂºèÁöÑËØÅ‰π¶‰∏éÁßÅÈí•Ôºâ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;4 ÂºÄÂßãÂä†ÈÄüÂêß&lt;/h4&gt; 
&lt;p&gt;ÂéªËØïËØïÊâìÂºÄgithub&lt;/p&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Á¨¨‰∏ÄÊ¨°ËÆøÈóÆ‰ºöÂéªÂõΩÂ§ñÁöÑdnsÊúçÂä°Âô®‰∏äËé∑ÂèñipÔºå‰ºöÊØîËæÉÊÖ¢‰∏ÄÁÇπÔºåÂêéÈù¢Â∞±Âø´‰∫Ü&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;ÂºÄÂêØÂâç vs ÂºÄÂêØÂêé&lt;/h3&gt; 
&lt;p&gt;| | ÂºÄÂêØÂâç | ÂºÄÂêØÂêé | | ‚Äì‚Äì | ‚Äì‚Äì | ‚Äì‚Äì | |Â§¥ÂÉè| &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/avatar2.png&quot; alt=&quot;&quot;&gt; |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/avatar1.png&quot; alt=&quot;&quot;&gt; | |clone |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/clone-before.png&quot; alt=&quot;&quot;&gt; |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/clone.png&quot; alt=&quot;&quot;&gt; |&lt;br&gt; |zip ‰∏ãËΩΩ |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/download-before.png&quot; alt=&quot;&quot;&gt; |&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/download.png&quot; alt=&quot;&quot;&gt;Áßí‰∏ãÁöÑÔºåÂÆûÂú®Êà™‰∏çÂà∞ÈÄüÂ∫¶ÁöÑÂõæ |&lt;/p&gt; 
&lt;h2&gt;Ê®°ÂºèËØ¥Êòé&lt;/h2&gt; 
&lt;h3&gt;ÂÆâÂÖ®Ê®°Âºè&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê≠§Ê®°ÂºèÔºöÂÖ≥Èó≠Êã¶Êà™„ÄÅÂÖ≥Èó≠Â¢ûÂº∫„ÄÅÂºÄÂêØdns‰ºòÈÄâ„ÄÅÂºÄÂêØÊµãÈÄü&lt;/li&gt; 
 &lt;li&gt;ÊúÄÂÆâÂÖ®ÔºåÊó†ÈúÄÂÆâË£ÖËØÅ‰π¶ÔºåÂèØ‰ª•Âú®ÊµèËßàÂô®Âú∞ÂùÄÊ†èÂ∑¶‰æßÊü•ÁúãÂüüÂêçËØÅ‰π¶&lt;/li&gt; 
 &lt;li&gt;ÂäüËÉΩ‰πüÊúÄÂº±ÔºåÂè™ÊúâÁâπÊÄß1ÔºåÁõ∏ÂΩì‰∫éÊü•ËØ¢githubÁöÑÂõΩÂ§ñipÔºåÊâãÂä®Êîπhosts‰∏Ä‰∏™ÊÑèÊÄù„ÄÇ&lt;/li&gt; 
 &lt;li&gt;githubÁöÑÂèØËÆøÈóÆÊÄß‰∏çÁ®≥ÂÆöÔºåÂèñÂÜ≥‰∫éIPÊµãÈÄüÔºåÂ¶ÇÊûúÊúâÁªøËâ≤ipÂ≠òÂú®ÔºåÂ∞± &lt;code&gt;ÊúâÂèØËÉΩ&lt;/code&gt; ÂèØ‰ª•Áõ¥ËøûËÆøÈóÆ„ÄÇ &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/speed.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÈªòËÆ§Ê®°Âºè&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê≠§Ê®°ÂºèÔºöÂºÄÂêØÊã¶Êà™„ÄÅÂÖ≥Èó≠Â¢ûÂº∫„ÄÅÂºÄÂêØdns‰ºòÈÄâ„ÄÅÂºÄÂêØÊµãÈÄü&lt;/li&gt; 
 &lt;li&gt;ÈúÄË¶ÅÂÆâË£ÖËØÅ‰π¶&lt;/li&gt; 
 &lt;li&gt;ÂäüËÉΩ‰∏äÂåÖÂê´ÁâπÊÄß1/2/3/4„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Â¢ûÂº∫Ê®°Âºè&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê≠§Ê®°ÂºèÔºöÂºÄÂêØÊã¶Êà™„ÄÅÂºÄÂêØÂ¢ûÂº∫„ÄÅÂºÄÂêØdns‰ºòÈÄâ„ÄÅÂÖ≥Èó≠ÊµãÈÄü&lt;/li&gt; 
 &lt;li&gt;ÈúÄË¶ÅÂÆâË£ÖËØÅ‰π¶&lt;/li&gt; 
 &lt;li&gt;ÂäüËÉΩ‰∏äÂåÖÂê´ÁâπÊÄß1/2/3/4/5&lt;/li&gt; 
 &lt;li&gt;Áî±‰∫éÊïèÊÑüÂéüÂõ†ÔºåÈªòËÆ§ÂÖ≥Èó≠ÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂèØ‰ª•ÁßÅ‰∏ã‰∫§ÊµÅ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÊúÄ‰Ω≥ÂÆûË∑µ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êäädev-sidecar‰∏ÄÁõ¥ÂºÄÁùÄÂ∞±Ë°å‰∫Ü&lt;/li&gt; 
 &lt;li&gt;Âª∫ËÆÆÈÅáÂà∞ÊâìÂºÄÊØîËæÉÊÖ¢ÁöÑÂõΩÂ§ñÁΩëÁ´ôÔºåÂèØ‰ª•Â∞ùËØïÂ∞ÜËØ•ÂüüÂêçÊ∑ªÂä†Âà∞dnsËÆæÁΩÆ‰∏≠ÔºàÊ≥®ÊÑèÔºöË¢´GFWÂ∞ÅÊùÄÁöÑÊó†ÊïàÔºâ&lt;/li&gt; 
 &lt;li&gt;ÊúâÊó∂ÂÄôÂÆâÂÖ®Ê®°ÂºèÊâìÂºÄgithub‰πüÊå∫Âø´&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂÖ∂‰ªñÂä†ÈÄü&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;git clone Âä†ÈÄü&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;ÊñπÂºè1ÔºöÂø´Êç∑Â§çÂà∂Ôºö&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÂºÄÂêØËÑöÊú¨ÊîØÊåÅÔºåÁÑ∂ÂêéÂú®Â§çÂà∂cloneÈìæÊé•‰∏ãÊñπÔºåÂç≥ÂèØÂ§çÂà∂Âà∞Âä†ÈÄüÈìæÊé•&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;ÊñπÂºè2Ôºö&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‰ΩøÁî®ÊñπÂºèÁî®ÂÆûÈôÖÁöÑÂêçÁß∞ÊõøÊç¢{}ÁöÑÂÜÖÂÆπÔºåÂç≥ÂèØÂä†ÈÄüclone&lt;br&gt; https://hub.fastgit.org/{username}/{reponame}.git&lt;br&gt; clone Âá∫Êù•ÁöÑ remote ‚Äúorigin‚Äù ‰∏∫fastgitÁöÑÂú∞ÂùÄÔºåÈúÄË¶ÅÊâãÂä®ÊîπÂõûÊù•&lt;br&gt; ‰Ω†‰πüÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®‰ªñ‰ª¨ÁöÑcloneÂä†ÈÄüÂ∑•ÂÖ∑ &lt;a href=&quot;https://github.com/FastGitORG/fgit-go&quot;&gt;fgit-go&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;github.comÁöÑÈïúÂÉèÁΩëÁ´ô(Ê≥®ÊÑèÔºö‰∏çËÉΩÁôªÂΩï)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href=&quot;https://hub.fastgit.org/&quot;&gt;hub.fastgit.org&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com.cnpmjs.org/&quot;&gt;github.com.cnpmjs.org&lt;/a&gt; Ëøô‰∏™ÂæàÂÆπÊòìË∂ÖÈôê&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;api&lt;/h2&gt; 
&lt;h3&gt;Êã¶Êà™ÈÖçÁΩÆ&lt;/h3&gt; 
&lt;p&gt;Ê≤°ÊúâÈÖçÁΩÆÂüüÂêçÁöÑ‰∏ç‰ºöÊã¶Êà™ÔºåÂÖ∂‰ªñÊ†πÊçÆÈÖçÁΩÆËøõË°åÊã¶Êà™Â§ÑÁêÜ&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const intercepts = {
  // Ë¶ÅÊã¶Êà™ÁöÑÂüüÂêç
  &#39;github.com&#39;: {
     //ÈúÄË¶ÅÊã¶Êà™urlÁöÑÊ≠£ÂàôË°®ËææÂºè
     &#39;/.*/.*/releases/download/&#39;: {
        //Êã¶Êà™Á±ªÂûã
        // redirect:url,  ‰∏¥Êó∂ÈáçÂÆöÂêë(url‰ºöÂèòÔºå‰∏Ä‰∫õ‰∏ãËΩΩËµÑÊ∫êÂèØ‰ª•ÈÄöËøáÊ≠§ÊñπÂºèÈÖçÁΩÆ)
        // proxy:url,     ‰ª£ÁêÜÔºàurl‰∏ç‰ºöÂèòÔºåÊ≤°ÊúâË∑®ÂüüÈóÆÈ¢òÔºâ
        // abort:true,    ÂèñÊ∂àËØ∑Ê±ÇÔºàÈÄÇÁî®‰∫éË¢´GFWÂ∞ÅÈîÅÁöÑËµÑÊ∫êÔºåÊâæ‰∏çÂà∞Êõø‰ª£ÔºåÁõ¥Êé•ÂèñÊ∂àËØ∑Ê±ÇÔºåÂø´ÈÄüÂ§±Ë¥•ÔºåËäÇÁúÅÊó∂Èó¥Ôºâ
        // success:true,  Áõ¥Êé•ËøîÂõûÊàêÂäüËØ∑Ê±ÇÔºàÊüê‰∫õËØ∑Ê±Ç‰∏çÊÉ≥ÂèëÂá∫ÂéªÔºåÂèØ‰ª•‰º™Ë£ÖÊàêÂäüËøîÂõûÔºâ
        redirect: &#39;download.fastgit.org&#39;
      },
   },
   &#39;ajax.googleapis.com&#39;: {
     &#39;.*&#39;: {
       proxy: &#39;ajax.loli.net&#39;, //‰ª£ÁêÜËØ∑Ê±ÇÔºåurl‰∏ç‰ºöÂèò
       backup: [&#39;ajax.proxy.ustclug.org&#39;], //Â§á‰ªΩÔºåÂΩìÂâç‰ª£ÁêÜËØ∑Ê±ÇÂ§±Ë¥•ÂêéÔºåÂ∞Ü‰ºöÂàáÊç¢Âà∞Â§áÁî®Âú∞ÂùÄ
       test: &#39;ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js&#39;,
       replace:&#39;/(.*)/xxx&#39;//ÂΩìÂä†ÈÄüÂú∞ÂùÄÁöÑÈìæÊé•ÂíåÂéüÈìæÊé•‰∏çÊòØÂÆåÂÖ®Áõ∏ÂêåÊó∂ÔºåÂèØ‰ª•ÈÄöËøáÊ≠£ÂàôË°®ËææÂºèreplaceÔºåÊ≠§Êó∂proxyÈÄöËøá$1$2Êù•ÈáçÁªÑurlÔºå proxy:&#39;ajax.loli.net/xxx/$1&#39;
     }
   },
   &#39;clients*.google.com&#39;: {
      &#39;.*&#39;:{
        abort: true //ÂèñÊ∂àËØ∑Ê±ÇÔºåË¢´GFWÂ∞ÅÈîÅÁöÑËµÑÊ∫êÔºåÊâæ‰∏çÂà∞Êõø‰ª£ÔºåÁõ¥Êé•ÂèñÊ∂àËØ∑Ê±ÇÔºåÂø´ÈÄüÂ§±Ë¥•ÔºåËäÇÁúÅÊó∂Èó¥
      }
    }       
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;DNS‰ºòÈÄâÈÖçÁΩÆ&lt;/h3&gt; 
&lt;p&gt;Êüê‰∫õÂüüÂêçËß£ÊûêÂá∫Êù•ÁöÑip‰ºöÊó†Ê≥ïËÆøÈóÆÔºåÔºàÊØîÂ¶Çapi.github.com‰ºöË¢´Ëß£ÊûêÂà∞Êñ∞Âä†Âù°ÁöÑip‰∏äÔºåÊñ∞Âä†Âù°ÁöÑÊúçÂä°Âô®Âú®‰∏äÂçàÊå∫Â•ΩÔºåÂà∞‰∫ÜÊôö‰∏äÂ∞±Âç°Ê≠ªÔºåÂü∫Êú¨‰∏çÂèØÁî®Ôºâ&lt;br&gt; ÈÄöËøá‰ªédns‰∏äËé∑ÂèñipÂàóË°®ÔºåÂàáÊç¢‰∏çÂêåÁöÑipËøõË°åÂ∞ùËØïÔºåÊúÄÁªà‰ºöÊåëÈÄâÂà∞‰∏Ä‰∏™ÊúÄÂø´ÁöÑip&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt; dns: {
    mapping: {
      //
      &#39;api.github.com&#39;: &#39;usa&#39;, // &quot;Ëß£ÂÜ≥pushÁöÑÊó∂ÂÄôÈúÄË¶ÅËæìÂÖ•ÂØÜÁ†ÅÁöÑÈóÆÈ¢ò&quot;,
      &#39;gist.github.com&#39;: &#39;usa&#39; // Ëß£ÂÜ≥gistÊó†Ê≥ïËÆøÈóÆÁöÑÈóÆÈ¢ò
      &quot;*.githubusercontent.com&quot;: &quot;usa&quot; // Ëß£ÂÜ≥githubÂ§¥ÂÉèÁªèÂ∏∏‰∏ãËΩΩ‰∏çÂà∞ÁöÑÈóÆÈ¢ò
    }
  },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ê≥®ÊÑèÔºöÊöÇÊó∂Âè™ÊîØÊåÅIPv4ÁöÑËß£Êûê&lt;/p&gt; 
&lt;h2&gt;ÈóÆÈ¢òÊéíÊü•&lt;/h2&gt; 
&lt;h3&gt;1„ÄÅdev-sidecarÁöÑÂâç‰∏§‰∏™ÂºÄÂÖ≥Ê≤°ÊúâÂ§Ñ‰∫éÊâìÂºÄÁä∂ÊÄÅ&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Â∞ùËØïÂ∞ÜÂºÄÂÖ≥ÊåâÈíÆÊâãÂä®ÊâìÂºÄ&lt;/li&gt; 
 &lt;li&gt;ËØ∑Â∞ùËØïÂè≥ÈîÆdev-sidecarÂõæÊ†áÔºåÁÇπÈÄÄÂá∫„ÄÇÂÜçÈáçÊñ∞ÊâìÂºÄ&lt;/li&gt; 
 &lt;li&gt;Â¶ÇÊûúËøò‰∏çË°åÔºåËØ∑Â∞ÜÊó•ÂøóÂèëÈÄÅÁªô‰ΩúËÄÖ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Â¶ÇÊûúÊòØmacÁ≥ªÁªüÔºåÂèØËÉΩÊòØ‰∏ãÈù¢ÁöÑÂéüÂõ†&lt;/p&gt; 
&lt;h4&gt;MacÁ≥ªÁªü‰ΩøÁî®Êó∂ÔºåÈ¶ñÈ°µÁöÑÁ≥ªÁªü‰ª£ÁêÜÂºÄÂÖ≥Êó†Ê≥ïÊâìÂºÄ&lt;/h4&gt; 
&lt;p&gt;Âá∫Áé∞Ëøô‰∏™ÈóÆÈ¢òÂèØËÉΩÊòØÊ≤°ÊúâÂºÄÂêØÁ≥ªÁªü‰ª£ÁêÜÂëΩ‰ª§ÁöÑÊâßË°åÊùÉÈôê&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;networksetup -setwebproxy &#39;WiFi&#39; 127.0.0.1 1181 
#ÁúãÊòØÂê¶ÊúâÂ¶Ç‰∏ãÈîôËØØÊèêÁ§∫
** Error: Command requires admin privileges.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Â¶ÇÊûúÊúâ‰∏äÈù¢ÁöÑÈîôËØØÊèêÁ§∫ÔºåËØ∑Â∞ùËØïÂ¶Ç‰∏ã‰∏§ÁßçÊñπÊ≥ïÔºö&lt;/p&gt; 
&lt;p&gt;1„ÄÅ ÂèñÊ∂àËÆøÈóÆÂÅèÂ•ΩËÆæÁΩÆÈúÄË¶ÅÁÆ°ÁêÜÂëòÂØÜÁ†Å Á≥ªÁªüÂÅèÂ•ΩËÆæÁΩÆ‚Äî&amp;gt;ÂÆâÂÖ®ÊÄß‰∏éÈöêÁßÅ‚Äî&amp;gt; ÈÄöÁî®‚Äî&amp;gt; È´òÁ∫ß‚Äî&amp;gt; ËÆøÈóÆÁ≥ªÁªüËåÉÂõ¥ÁöÑÂÅèÂ•ΩËÆæÁΩÆÈúÄË¶ÅËæìÂÖ•ÁÆ°ÁêÜÂëòÂØÜÁ†ÅÔºàÂèñÊ∂àÂãæÈÄâÔºâ&lt;/p&gt; 
&lt;p&gt;2„ÄÅ ÂèØËÉΩÊòØÁî±‰∫éÂÆâË£Ö‰∫ÜxcodeÔºå‰ΩÜÊú™ÊéàÊùÉÂØºËá¥ ËØ∑Âú®ÁªàÁ´ØËæìÂÖ•Â¶Ç‰∏ãÂëΩ‰ª§ËøõË°åÊéàÊùÉ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo xcodebuild -license
# ‰∏ÄÁõ¥ÊåâÂõûËΩ¶ÔºåËØ•agreeÁöÑÊó∂ÂÄôËæìÂÖ•agreeÂç≥ÂèØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÁÑ∂ÂêéÂÜçÊ¨°Â∞ùËØïÁúãÊòØÂê¶ËÉΩÂ§üÊâìÂºÄÁ≥ªÁªü‰ª£ÁêÜÂºÄÂÖ≥&lt;br&gt; Â¶ÇÊûúËøò‰∏çË°åÔºåËØ∑ËÅîÁ≥ª‰ΩúËÄÖ&lt;/p&gt; 
&lt;h3&gt;2„ÄÅÊ≤°ÊúâÂä†ÈÄüÊïàÊûú&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Êú¨Â∫îÁî®‰ªÖÊîØÊåÅhttpsÂä†ÈÄüÔºåËØ∑Âä°ÂøÖÁ°ÆËÆ§‰Ω†ËÆøÈóÆÁöÑÁΩëÁ´ôÂú∞ÂùÄÊòØhttpsÂºÄÂ§¥ÁöÑ&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Êú¨Â∫îÁî®‰ªÖÊîØÊåÅhttpsÂä†ÈÄü ËØ∑Âä°ÂøÖÁ°ÆËÆ§‰Ω†ËÆøÈóÆÁöÑÂú∞ÂùÄÊòØhttpsÂºÄÂ§¥ÁöÑ ÊØîÂ¶ÇÔºö https://github.com/&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ê£ÄÊü•ÊµèËßàÂô®ÊòØÂê¶Ë£Ö‰∫Ü‰ªÄ‰πàÊèí‰ª∂Ôºå‰∏édsÊúâÂÜ≤Á™Å&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ê£ÄÊü•ÊòØÂê¶ÂÆâË£Ö‰∫ÜÂÖ∂‰ªñ‰ª£ÁêÜËΩØ‰ª∂Ôºå‰∏édsÊúâÂÜ≤Á™Å&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ËØ∑Á°ÆËÆ§ÊµèËßàÂô®ÁöÑ‰ª£ÁêÜËÆæÁΩÆ‰∏∫‰ΩøÁî®IE‰ª£ÁêÜ/ÊàñËÄÖ‰ΩøÁî®Á≥ªÁªü‰ª£ÁêÜÁä∂ÊÄÅ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÂèØ‰ª•Â∞ùËØïÊç¢‰∏™ÊµèËßàÂô®ËØïËØï&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ËØ∑Á°ÆËÆ§ÁΩëÁªú‰ª£ÁêÜËÆæÁΩÆÂ§Ñ‰∫éÂãæÈÄâÁä∂ÊÄÅ&lt;br&gt; Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãdev-sidecarÂú®‚ÄúÁ≥ªÁªü‰ª£ÁêÜ‚ÄùÂºÄÂÖ≥ÊâìÂºÄÊó∂Ôºå‰ºöËá™Âä®ËÆæÁΩÆ‰ª£ÁêÜ„ÄÇ&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Â¶Ç‰ΩïÊâìÂºÄÊü•Áúãwindows‰ª£ÁêÜËÆæÁΩÆÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;win10: ÂºÄÂßã-&amp;gt;ËÆæÁΩÆ-&amp;gt;ÁΩëÁªúÂíåInternet-&amp;gt;ÊúÄ‰∏ãÊñπ‰ª£ÁêÜ&lt;/li&gt; 
 &lt;li&gt;win7: ÂºÄÂßã-&amp;gt;ÊéßÂà∂Èù¢Êùø-&amp;gt;ÁΩëÁªúÂíåInternet-&amp;gt;ÁΩëÁªúÂíåÂÖ±‰∫´‰∏≠ÂøÉ-&amp;gt;Â∑¶‰∏ãËßíInternetÈÄâÈ°π-&amp;gt;ËøûÊé•ÈÄâÈ°πÂç°-&amp;gt;Â±ÄÂüüÁΩëËÆæÁΩÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;windows ‰ª£ÁêÜÊü•Áúã&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/proxy.png&quot; alt=&quot;windows&quot;&gt;&lt;/p&gt; 
&lt;p&gt;mac ‰ª£ÁêÜÊü•Áúã&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/mac-proxy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3„ÄÅÊµèËßàÂô®ÊâìÂºÄÊèêÁ§∫ËØÅ‰π¶‰∏çÂèó‰ø°‰ªª&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;windows: ËØ∑Á°ÆËÆ§ËØÅ‰π¶Â∑≤Ê≠£Á°ÆÂÆâË£ÖÂú®‚Äú‰ø°‰ªªÁöÑÊ†πËØÅ‰π¶È¢ÅÂèëÊú∫ÊûÑ‚Äù‰∏ã&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;mac: ËØ∑Á°ÆËÆ§ËØÅ‰π¶Â∑≤ÁªèË¢´ÂÆâË£ÖÂπ∂Â∑≤ÁªèËÆæÁΩÆ‰ø°‰ªª„ÄÇ&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ÁÅ´ÁãêÊµèËßàÂô®ÔºöÁÅ´ÁãêÊµèËßàÂô®‰∏çËµ∞Á≥ªÁªüÁöÑÊ†πËØÅ‰π¶ÔºåÈúÄË¶ÅÂú®ÈÄâÈ°π‰∏≠Ê∑ªÂä†Ê†πËØÅ‰π¶&lt;br&gt; 1„ÄÅÁÅ´ÁãêÊµèËßàÂô®-&amp;gt;ÈÄâÈ°π-&amp;gt;ÈöêÁßÅ‰∏éÂÆâÂÖ®-&amp;gt;ËØÅ‰π¶-&amp;gt;Êü•ÁúãËØÅ‰π¶&lt;br&gt; 2„ÄÅËØÅ‰π¶È¢ÅÂèëÊú∫ÊûÑ-&amp;gt;ÂØºÂÖ•&lt;br&gt; 3„ÄÅÈÄâÊã©ËØÅ‰π¶Êñá‰ª∂&lt;code&gt;C:\Users\Administrator\.dev-sidecar\dev-sidecar.ca.crt&lt;/code&gt;ÔºàMac‰∏∫&lt;code&gt;~/.dev-sidecar&lt;/code&gt;ÁõÆÂΩïÔºâ&lt;br&gt; 4„ÄÅÂãæÈÄâ‰ø°‰ªªÁî±Ê≠§ËØÅ‰π¶È¢ÅÂèëÊú∫ÊûÑÊù•Ê†áËØÜÁΩëÁ´ôÔºåÁ°ÆÂÆöÂç≥ÂèØ&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. ÊâìÂºÄgithubÊòæÁ§∫ËøûÊé•Ë∂ÖÊó∂&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;DevSidecar Warning:
Error: www.github.com:443, ‰ª£ÁêÜËØ∑Ê±ÇË∂ÖÊó∂
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Â¶ÇÊûúÊòØÂÆâÂÖ®Ê®°ÂºèÔºåÂàôÊòØÂõ†‰∏∫‰∏çÁ®≥ÂÆöÂØºËá¥ÁöÑÔºåÁ≠â‰∏Ä‰ºöÂÜçÂà∑Êñ∞ËØïËØï&lt;br&gt; Â¶ÇÊûúÊòØÈªòËÆ§Ê®°Âºè/Â¢ûÂº∫Ê®°ÂºèÔºåÂàôÊòØÁî±‰∫éËÆøÈóÆ‰∫∫Êï∞ËøáÂ§öÔºåÊ≠£Â∏∏Áé∞Ë±°&lt;/p&gt; 
&lt;h3&gt;5„ÄÅÊü•ÁúãÊó•ÂøóÊòØÂê¶ÊúâÊä•Èîô&lt;/h3&gt; 
&lt;p&gt;Â¶ÇÊûúËøòÊòØ‰∏çË°åÔºåËØ∑Âú®‰∏ãÊñπÂä†‰ΩúËÄÖÂ•ΩÂèãÔºåÂ∞ÜÊúçÂä°Êó•ÂøóÂèëÈÄÅÁªô‰ΩúËÄÖËøõË°åÂàÜÊûê&lt;br&gt; Êó•ÂøóÊâìÂºÄÊñπÂºèÔºöÂä†ÈÄüÊúçÂä°-&amp;gt;Âè≥ËæπÊó•ÂøóÊåâÈíÆ-&amp;gt;ÊâìÂºÄÊó•ÂøóÊñá‰ª∂Â§π&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/log.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;6„ÄÅÊüê‰∫õÂéüÊú¨ÂèØ‰ª•ÊâìÂºÄÁöÑÁΩëÁ´ôÊâì‰∏çÂºÄ‰∫Ü&lt;/h3&gt; 
&lt;p&gt;1„ÄÅÂèØ‰ª•Â∞ùËØïÂÖ≥Èó≠pac&lt;br&gt; 2„ÄÅÂèØ‰ª•Â∞ÜÂüüÂêçÂä†ÂÖ•ÁôΩÂêçÂçïÔºåËÆæÁΩÆÊñπÂºèÂèÇËÄÉÔºöhttps://github.com/docmirror/dev-sidecar/issues/25&lt;/p&gt; 
&lt;h3&gt;7„ÄÅ git pushÊä•Èîô&lt;/h3&gt; 
&lt;p&gt;ÂΩìgit pushÁöÑÊï∞ÊçÆÂ§ß‰∫é200kÊó∂Ôºå‰ºöÊä•ÈîôÔºåÁõÆÂâçÁöÑÊñπÊ°à‰∏çÂ§™Â•ΩËß£ÂÜ≥„ÄÇ&lt;br&gt; ‰∏¥Êó∂ÊñπÊ°àÔºöÂàáÂà∞ÂÆâÂÖ®Ê®°ÂºèÔºåÂ∞ùËØïgit pushÔºåÂ§öËØïÂá†Ê¨°Â∞±ÂèØ‰ª•‰∫Ü„ÄÇ&lt;/p&gt; 
&lt;h2&gt;Ë¥°ÁåÆ‰ª£Á†Å&lt;/h2&gt; 
&lt;h3&gt;ÂºÄÂèëË∞ÉËØïÊ®°ÂºèÂêØÂä®&lt;/h3&gt; 
&lt;p&gt;ËøêË°åÂ¶Ç‰∏ãÂëΩ‰ª§Âç≥ÂèØÂºÄÂèëÊ®°ÂºèÂêØÂä®&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/docmirror/dev-sidecar

cd dev-sidecar 

npm install lerna -g
lerna bootstrap

cd packages/gui

npm run electron

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ÊâìÂåÖÊàêÂèØÊâßË°åÊñá‰ª∂&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd packages/gui
npm run electron:build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Êèê‰∫§pr&lt;/h3&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†ÊÉ≥Â∞Ü‰Ω†ÁöÑ‰øÆÊîπË¥°ÁåÆÂá∫Êù•ÔºåËØ∑Êèê‰∫§pr&lt;/p&gt; 
&lt;h2&gt;ËÅîÁ≥ª‰ΩúËÄÖ&lt;/h2&gt; 
&lt;p&gt;Ê¨¢ËøébugÂèçÈ¶àÔºåÈúÄÊ±ÇÂª∫ËÆÆÔºåÊäÄÊúØ‰∫§ÊµÅÁ≠âÔºàËØ∑Â§áÊ≥®dev-sidecarÔºåÊàñÁÆÄÁß∞DSÔºâ&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/contact.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;ÊÑüË∞¢&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆ‰ΩøÁî®lernaÂåÖÁÆ°ÁêÜÂ∑•ÂÖ∑&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://lerna.js.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&quot; alt=&quot;lerna&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Êú¨È°πÁõÆÂèÇËÄÉÂ¶Ç‰∏ãÂºÄÊ∫êÈ°πÁõÆ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wuchangming/node-mitmproxy&quot;&gt;node-mitmproxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justjavac/ReplaceGoogleCDN&quot;&gt;ReplaceGoogleCDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD&quot;&gt;githubÂ¢ûÂº∫Ê≤πÁå¥ËÑöÊú¨&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Êú¨È°πÁõÆÂä†ÈÄüËµÑÊ∫êÁî±Â¶Ç‰∏ãÁªÑÁªáÊèê‰æõ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fastgit.org/&quot;&gt;fastgit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>plotly/plotly.js</title>
      <link>https://github.com/plotly/plotly.js</link>
      <description>&lt;p&gt;Open-source JavaScript charting library behind Plotly and Dash&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://plotly.com/javascript/&quot;&gt;&lt;img src=&quot;https://images.plot.ly/logo/plotlyjs-logo@2x.png&quot; height=&quot;70&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://badge.fury.io/js/plotly.js&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/plotly.js.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/plotly/plotly.js&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/plotly/plotly.js.png?&amp;amp;style=shield&amp;amp;circle-token=1f42a03b242bd969756fc3e53ede204af9b507c0&quot; alt=&quot;circle ci&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-brightgreen.svg?sanitize=true&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://plotly.com/javascript&quot;&gt;Plotly.js&lt;/a&gt; is a standalone Javascript data visualization library, and it also powers the Python and R modules named &lt;code&gt;plotly&lt;/code&gt; in those respective ecosystems (referred to as &lt;a href=&quot;https://plotly.com/python&quot;&gt;Plotly.py&lt;/a&gt; and &lt;a href=&quot;http://plotly.com/r&quot;&gt;Plotly.R&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Plotly.js can be used to produce dozens of chart types and visualizations, including statistical charts, 3D graphs, scientific charts, SVG and tile maps, financial charts and more.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://plotly.com/javascript/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/cldougl/plot_images/add_r_img/plotly_2017.png&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://plotly.com/products/consulting-and-oem/&quot;&gt;Contact us&lt;/a&gt; for Plotly.js consulting, dashboard development, application integration, and feature additions.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#load-as-a-node-module&quot;&gt;Load as a node module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#load-via-script-tag&quot;&gt;Load via script tag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#bundles&quot;&gt;Bundles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#alternative-ways-to-load-and-build-plotlyjs&quot;&gt;Alternative ways to load and build plotly.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#bugs-and-feature-requests&quot;&gt;Bugs and feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#notable-contributors&quot;&gt;Notable contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#copyright-and-license&quot;&gt;Copyright and license&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/plotly/plotly.js/master/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Load as a node module&lt;/h2&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/dist/README.md&quot;&gt;a ready-to-use distributed bundle&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm i --save plotly.js-dist-min
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and use import or require in node.js&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ES6 module
import Plotly from &#39;plotly.js-dist-min&#39;

// CommonJS
var Plotly = require(&#39;plotly.js-dist-min&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also consider using &lt;a href=&quot;https://www.npmjs.com/package/plotly.js-dist&quot;&gt;&lt;code&gt;plotly.js-dist&lt;/code&gt;&lt;/a&gt; if you prefer using an unminified package.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Load via script tag&lt;/h2&gt; 
&lt;h3&gt;The script HTML element&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;In the examples below &lt;code&gt;Plotly&lt;/code&gt; object is added to the window scope by &lt;code&gt;script&lt;/code&gt;. The &lt;code&gt;newPlot&lt;/code&gt; method is then used to draw an interactive figure as described by &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;layout&lt;/code&gt; into the desired &lt;code&gt;div&lt;/code&gt; here named &lt;code&gt;gd&lt;/code&gt;. As demonstrated in the example above basic knowledge of &lt;code&gt;html&lt;/code&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/JSON&quot;&gt;JSON&lt;/a&gt; syntax is enough to get started i.e. with/without JavaScript! To learn and build more with plotly.js please visit &lt;a href=&quot;https://plotly.com/javascript&quot;&gt;plotly.js documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;head&amp;gt;
    &amp;lt;script src=&quot;https://cdn.plot.ly/plotly-2.0.0.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&quot;gd&quot;&amp;gt;&amp;lt;/div&amp;gt;

    &amp;lt;script&amp;gt;
        Plotly.newPlot(&quot;gd&quot;, /* JSON object */ {
            &quot;data&quot;: [{ &quot;y&quot;: [1, 2, 3] }],
            &quot;layout&quot;: { &quot;width&quot;: 600, &quot;height&quot;: 400}
        })
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively you may consider using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules&quot;&gt;native ES6 import&lt;/a&gt; in the script tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script&amp;gt;
    import &quot;https://cdn.plot.ly/plotly-2.0.0.min.js&quot;
    Plotly.newPlot(&quot;gd&quot;, [{ y: [1, 2, 3] }]);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fastly supports Plotly.js with free CDN service. Read more at &lt;a href=&quot;https://www.fastly.com/open-source&quot;&gt;https://www.fastly.com/open-source&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Un-minified versions are also available on CDN&lt;/h3&gt; 
&lt;p&gt;While non-minified source files may contain characters outside UTF-8, it is recommended that you specify the &lt;code&gt;charset&lt;/code&gt; when loading those bundles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.plot.ly/plotly-2.0.0.js&quot; charset=&quot;utf-8&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Please note that as of v2 the ‚Äúplotly-latest‚Äù outputs (e.g. https://cdn.plot.ly/plotly-latest.min.js) will no longer be updated on the CDN, and will stay at the last v1 patch v1.58.4. Therefore, to use the CDN with plotly.js v2 and higher, you must specify an exact plotly.js version.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To support MathJax, you need to load version two of MathJax e.g. &lt;code&gt;v2.7.5&lt;/code&gt; files from CDN or npm.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bundles&lt;/h2&gt; 
&lt;p&gt;There are two kinds of plotly.js bundles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Complete and partial official bundles that are distributed to &lt;code&gt;npm&lt;/code&gt; and the &lt;code&gt;CDN&lt;/code&gt;, described in &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/dist/README.md&quot;&gt;the dist README&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Custom bundles you can create yourself to optimize the size of bundle depending on your needs. Please visit &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/CUSTOM_BUNDLE.md&quot;&gt;CUSTOM_BUNDLE&lt;/a&gt; for more information.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;Alternative ways to load and build plotly.js&lt;/h2&gt; 
&lt;p&gt;If your library needs to bundle or directly load &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/lib/index.js&quot;&gt;plotly.js/lib/index.js&lt;/a&gt; or parts of its modules similar to &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/lib/index-basic.js&quot;&gt;index-basic&lt;/a&gt; in some other way than via an official or a custom bundle, or in case you want to tweak the default build configurations of &lt;code&gt;browserify&lt;/code&gt; or &lt;code&gt;webpack&lt;/code&gt;, etc. then please visit &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/BUILDING.md&quot;&gt;&lt;code&gt;BUILDING.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Official plotly.js documentation is hosted at &lt;a href=&quot;https://plotly.com/javascript&quot;&gt;https://plotly.com/javascript&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;These pages are generated by the Plotly &lt;a href=&quot;https://github.com/plotly/graphing-library-docs&quot;&gt;graphing-library-docs repo&lt;/a&gt; built with &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and publicly hosted on GitHub Pages. For more info about contributing to Plotly documentation, please read through &lt;a href=&quot;https://github.com/plotly/graphing-library-docs/raw/master/README.md&quot;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Bugs and feature requests&lt;/h2&gt; 
&lt;p&gt;Have a bug or a feature request? Please &lt;a href=&quot;https://github.com/plotly/plotly.js/issues/new&quot;&gt;open a Github issue&lt;/a&gt; keeping in mind the &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/.github/ISSUE_TEMPLATE.md&quot;&gt;issue guidelines&lt;/a&gt;. You may also want to read about &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/CONTRIBUTING.md&quot;&gt;how changes get made to Plotly.js&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues, using plotly.js in your project and notes on development.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Notable contributors&lt;/h2&gt; 
&lt;p&gt;Plotly.js is at the core of a large and dynamic ecosystem with many contributors who file issues, reproduce bugs, suggest improvements, write code in this repo (and other upstream or downstream ones) and help users in the Plotly community forum. The following people deserve special recognition for their outsized contributions to this ecosystem:&lt;/p&gt; 
&lt;p&gt;| | GitHub | Twitter | Status | |‚Äî|‚Äì‚Äì‚Äì‚Äì|‚Äî‚Äî‚Äî|‚Äì‚Äì‚Äì‚Äì| |&lt;strong&gt;Alex C. Johnson&lt;/strong&gt;| &lt;a href=&quot;https://github.com/alexcjohnson&quot;&gt;@alexcjohnson&lt;/a&gt; | | Active, Maintainer | |&lt;strong&gt;Mojtaba Samimi&lt;/strong&gt; | &lt;a href=&quot;https://github.com/archmoj&quot;&gt;@archmoj&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/solarchvision&quot;&gt;@solarchvision&lt;/a&gt; | Active, Maintainer | |&lt;strong&gt;Antoine Roy-Gobeil&lt;/strong&gt; | &lt;a href=&quot;https://github.com/antoinerg&quot;&gt;@antoinerg&lt;/a&gt; | | Active, Maintainer | |&lt;strong&gt;Nicolas Kruchten&lt;/strong&gt; | &lt;a href=&quot;https://github.com/nicolaskruchten&quot;&gt;@nicolaskruchten&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/nicolaskruchten&quot;&gt;@nicolaskruchten&lt;/a&gt; | Active, Maintainer | |&lt;strong&gt;Jon Mease&lt;/strong&gt; | &lt;a href=&quot;https://github.com/jonmmease&quot;&gt;@jonmmease&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/jonmmease&quot;&gt;@jonmmease&lt;/a&gt; | Active | |&lt;strong&gt;√âtienne T√©treault-Pinard&lt;/strong&gt;| &lt;a href=&quot;https://github.com/etpinard&quot;&gt;@etpinard&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/etpinard&quot;&gt;@etpinard&lt;/a&gt; | Hall of Fame | |&lt;strong&gt;Mikola Lysenko&lt;/strong&gt;| &lt;a href=&quot;https://github.com/mikolalysenko&quot;&gt;@mikolalysenko&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/MikolaLysenko&quot;&gt;@MikolaLysenko&lt;/a&gt; | Hall of Fame | |&lt;strong&gt;Ricky Reusser&lt;/strong&gt;| &lt;a href=&quot;https://github.com/rreusser&quot;&gt;@rreusser&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/rickyreusser&quot;&gt;@rickyreusser&lt;/a&gt; | Hall of Fame | |&lt;strong&gt;Dmitry Yv.&lt;/strong&gt; | &lt;a href=&quot;https://github.com/dy&quot;&gt;@dy&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/dimayv&quot;&gt;@DimaYv&lt;/a&gt;| Hall of Fame | |&lt;strong&gt;Robert Monfera&lt;/strong&gt;| &lt;a href=&quot;https://github.com/monfera&quot;&gt;@monfera&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/monfera&quot;&gt;@monfera&lt;/a&gt; | Hall of Fame | |&lt;strong&gt;Robert M√∂stl&lt;/strong&gt; | &lt;a href=&quot;https://github.com/rmoestl&quot;&gt;@rmoestl&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/rmoestl&quot;&gt;@rmoestl&lt;/a&gt; | Hall of Fame | |&lt;strong&gt;Nicolas Riesco&lt;/strong&gt;| &lt;a href=&quot;https://github.com/n-riesco&quot;&gt;@n-riesco&lt;/a&gt; | | Hall of Fame | |&lt;strong&gt;Mikl√≥s Tusz&lt;/strong&gt;| &lt;a href=&quot;https://github.com/mdtusz&quot;&gt;@mdtusz&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/mdtusz&quot;&gt;@mdtusz&lt;/a&gt;| Hall of Fame | |&lt;strong&gt;Chelsea Douglas&lt;/strong&gt;| &lt;a href=&quot;https://github.com/cldougl&quot;&gt;@cldougl&lt;/a&gt; | | Hall of Fame | |&lt;strong&gt;Ben Postlethwaite&lt;/strong&gt;| &lt;a href=&quot;https://github.com/bpostlethwaite&quot;&gt;@bpostlethwaite&lt;/a&gt; | | Hall of Fame | |&lt;strong&gt;Chris Parmer&lt;/strong&gt;| &lt;a href=&quot;https://github.com/chriddyp&quot;&gt;@chriddyp&lt;/a&gt; | | Hall of Fame | |&lt;strong&gt;Alex Vados&lt;/strong&gt;| &lt;a href=&quot;https://github.com/alexander-daniel&quot;&gt;@alexander-daniel&lt;/a&gt; | | Hall of Fame |&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Copyright and license&lt;/h2&gt; 
&lt;p&gt;Code and documentation copyright 2021 Plotly, Inc.&lt;/p&gt; 
&lt;p&gt;Code released under the &lt;a href=&quot;https://github.com/plotly/plotly.js/raw/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Versioning&lt;/h3&gt; 
&lt;p&gt;This project is maintained under the &lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/plotly/plotly.js/releases&quot;&gt;Releases section&lt;/a&gt; of our GitHub project for changelogs for each release version of plotly.js.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://twitter.com/plotlygraphs&quot;&gt;@plotlygraphs&lt;/a&gt; on Twitter for the latest Plotly news.&lt;/li&gt; 
 &lt;li&gt;Implementation help may be found on community.plot.com (tagged &lt;a href=&quot;https://community.plotly.com/c/plotly-js&quot;&gt;&lt;code&gt;plotly-js&lt;/code&gt;&lt;/a&gt;) or on Stack Overflow (tagged &lt;a href=&quot;https://stackoverflow.com/questions/tagged/plotly&quot;&gt;&lt;code&gt;plotly&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Developers should use the keyword &lt;code&gt;plotly&lt;/code&gt; on packages which modify or add to the functionality of plotly.js when distributing through &lt;a href=&quot;https://www.npmjs.com/browse/keyword/plotly&quot;&gt;npm&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>facebook/create-react-app</title>
      <link>https://github.com/facebook/create-react-app</link>
      <description>&lt;p&gt;Set up a modern web app by running one command.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Create React App &lt;a href=&quot;https://dev.azure.com/facebook/create-react-app/_build/latest?definitionId=1&amp;amp;branchName=master&quot;&gt;&lt;img src=&quot;https://dev.azure.com/facebook/create-react-app/_apis/build/status/facebook.create-react-app?branchName=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebook/create-react-app/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-green.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;img alt=&quot;Logo&quot; align=&quot;right&quot; src=&quot;https://create-react-app.dev/img/logo.svg?sanitize=true&quot; width=&quot;20%&quot;&gt; 
&lt;p&gt;Create React apps with no build configuration.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/#creating-an-app&quot;&gt;Creating an App&lt;/a&gt; ‚Äì How to create a new app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/&quot;&gt;User Guide&lt;/a&gt; ‚Äì How to develop apps bootstrapped with Create React App.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Create React App works on macOS, Windows, and Linux.&lt;br&gt; If something doesn‚Äôt work, please &lt;a href=&quot;https://github.com/facebook/create-react-app/issues/new&quot;&gt;file an issue&lt;/a&gt;.&lt;br&gt; If you have questions or need help, please ask in &lt;a href=&quot;https://github.com/facebook/create-react-app/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Overview&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-react-app my-app
cd my-app
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you‚Äôve previously installed &lt;code&gt;create-react-app&lt;/code&gt; globally via &lt;code&gt;npm install -g create-react-app&lt;/code&gt;, we recommend you uninstall the package using &lt;code&gt;npm uninstall -g create-react-app&lt;/code&gt; or &lt;code&gt;yarn global remove create-react-app&lt;/code&gt; to ensure that npx always uses the latest version.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; comes with npm 5.2+ and higher, see &lt;a href=&quot;https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f&quot;&gt;instructions for older npm versions&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Then open &lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt; to see your app.&lt;br&gt; When you‚Äôre ready to deploy to production, create a minified bundle with &lt;code&gt;npm run build&lt;/code&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.jsdelivr.net/gh/facebook/create-react-app@27b42ac7efa018f2541153ab30d63180f5fa39e0/screencast.svg?sanitize=true&quot; width=&quot;600&quot; alt=&quot;npm start&quot;&gt; &lt;/p&gt; 
&lt;h3&gt;Get Started Immediately&lt;/h3&gt; 
&lt;p&gt;You &lt;strong&gt;don‚Äôt&lt;/strong&gt; need to install or configure tools like webpack or Babel.&lt;br&gt; They are preconfigured and hidden so that you can focus on the code.&lt;/p&gt; 
&lt;p&gt;Create a project, and you‚Äôre good to go.&lt;/p&gt; 
&lt;h2&gt;Creating an App&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;You‚Äôll need to have Node 10.16.0 or later version on your local development machine&lt;/strong&gt; (but it‚Äôs not required on the server). We recommend using the latest LTS version. You can use &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (macOS/Linux) or &lt;a href=&quot;https://github.com/coreybutler/nvm-windows#node-version-manager-nvm-for-windows&quot;&gt;nvm-windows&lt;/a&gt; to switch Node versions between different projects.&lt;/p&gt; 
&lt;p&gt;To create a new app, you may choose one of the following methods:&lt;/p&gt; 
&lt;h3&gt;npx&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; is a package runner tool that comes with npm 5.2+ and higher, see &lt;a href=&quot;https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f&quot;&gt;instructions for older npm versions&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;npm&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm init react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;code&gt;npm init &amp;lt;initializer&amp;gt;&lt;/code&gt; is available in npm 6+&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn create react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://yarnpkg.com/lang/en/docs/cli/create/&quot;&gt;&lt;code&gt;yarn create &amp;lt;starter-kit-package&amp;gt;&lt;/code&gt;&lt;/a&gt; is available in Yarn 0.25+&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;It will create a directory called &lt;code&gt;my-app&lt;/code&gt; inside the current folder.&lt;br&gt; Inside that directory, it will generate the initial project structure and install the transitive dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;my-app
‚îú‚îÄ‚îÄ README.md
‚îú‚îÄ‚îÄ node_modules
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ .gitignore
‚îú‚îÄ‚îÄ public
‚îÇ   ‚îú‚îÄ‚îÄ favicon.ico
‚îÇ   ‚îú‚îÄ‚îÄ index.html
‚îÇ   ‚îî‚îÄ‚îÄ manifest.json
‚îî‚îÄ‚îÄ src
    ‚îú‚îÄ‚îÄ App.css
    ‚îú‚îÄ‚îÄ App.js
    ‚îú‚îÄ‚îÄ App.test.js
    ‚îú‚îÄ‚îÄ index.css
    ‚îú‚îÄ‚îÄ index.js
    ‚îú‚îÄ‚îÄ logo.svg
    ‚îî‚îÄ‚îÄ serviceWorker.js
    ‚îî‚îÄ‚îÄ setupTests.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No configuration or complicated folder structures, only the files you need to build your app.&lt;br&gt; Once the installation is done, you can open your project folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Inside the newly created project, you can run some built-in commands:&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;yarn start&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the app in development mode.&lt;br&gt; Open &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;/p&gt; 
&lt;p&gt;The page will automatically reload if you make changes to the code.&lt;br&gt; You will see the build errors and lint warnings in the console.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.jsdelivr.net/gh/marionebl/create-react-app@9f6282671c54f0874afd37a72f6689727b562498/screencast-error.svg?sanitize=true&quot; width=&quot;600&quot; alt=&quot;Build errors&quot;&gt; &lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm test&lt;/code&gt; or &lt;code&gt;yarn test&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the test watcher in an interactive mode.&lt;br&gt; By default, runs tests related to files changed since the last commit.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/running-tests&quot;&gt;Read more about testing.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm run build&lt;/code&gt; or &lt;code&gt;yarn build&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Builds the app for production to the &lt;code&gt;build&lt;/code&gt; folder.&lt;br&gt; It correctly bundles React in production mode and optimizes the build for the best performance.&lt;/p&gt; 
&lt;p&gt;The build is minified and the filenames include the hashes.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;Your app is ready to be deployed.&lt;/p&gt; 
&lt;h2&gt;User Guide&lt;/h2&gt; 
&lt;p&gt;You can find detailed instructions on using Create React App and many tips in &lt;a href=&quot;https://facebook.github.io/create-react-app/&quot;&gt;its documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to Update to New Versions?&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/updating-to-new-releases&quot;&gt;User Guide&lt;/a&gt; for this and other information.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;One Dependency:&lt;/strong&gt; There is only one build dependency. It uses webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Configuration Required:&lt;/strong&gt; You don‚Äôt need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Lock-In:&lt;/strong&gt; You can ‚Äúeject‚Äù to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What‚Äôs Included?&lt;/h2&gt; 
&lt;p&gt;Your environment will have everything you need to build a modern single-page React app:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React, JSX, ES6, TypeScript and Flow syntax support.&lt;/li&gt; 
 &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; 
 &lt;li&gt;Autoprefixed CSS, so you don‚Äôt need &lt;code&gt;-webkit-&lt;/code&gt; or other prefixes.&lt;/li&gt; 
 &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; 
 &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; 
 &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; 
 &lt;li&gt;An offline-first &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/service-workers&quot;&gt;service worker&lt;/a&gt; and a &lt;a href=&quot;https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/&quot;&gt;web app manifest&lt;/a&gt;, meeting all the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app&quot;&gt;Progressive Web App&lt;/a&gt; criteria. (&lt;em&gt;Note: Using the service worker is opt-in as of &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;Hassle-free updates for the above tools with a single dependency.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://github.com/nitishdayal/cra_closer_look&quot;&gt;this guide&lt;/a&gt; for an overview of how these tools fit together.&lt;/p&gt; 
&lt;p&gt;The tradeoff is that &lt;strong&gt;these tools are preconfigured to work in a specific way&lt;/strong&gt;. If your project needs more customization, you can &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/available-scripts#npm-run-eject&quot;&gt;‚Äúeject‚Äù&lt;/a&gt; and customize it, but then you will need to maintain this configuration.&lt;/p&gt; 
&lt;h2&gt;Popular Alternatives&lt;/h2&gt; 
&lt;p&gt;Create React App is a great fit for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Learning React&lt;/strong&gt; in a comfortable and feature-rich development environment.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Starting new single-page React applications.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Creating examples&lt;/strong&gt; with React for your libraries and components.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here are a few common cases where you might want to try something else:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you want to &lt;strong&gt;try React&lt;/strong&gt; without hundreds of transitive build tool dependencies, consider &lt;a href=&quot;https://reactjs.org/docs/try-react.html&quot;&gt;using a single HTML file or an online sandbox instead&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need to &lt;strong&gt;integrate React code with a server-side template framework&lt;/strong&gt; like Rails, Django or Symfony, or if you‚Äôre &lt;strong&gt;not building a single-page app&lt;/strong&gt;, consider using &lt;a href=&quot;https://github.com/insin/nwb&quot;&gt;nwb&lt;/a&gt;, or &lt;a href=&quot;https://neutrino.js.org/&quot;&gt;Neutrino&lt;/a&gt; which are more flexible. For Rails specifically, you can use &lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;Rails Webpacker&lt;/a&gt;. For Symfony, try &lt;a href=&quot;https://symfony.com/doc/current/frontend/encore/reactjs.html&quot;&gt;Symfony‚Äôs webpack Encore&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need to &lt;strong&gt;publish a React component&lt;/strong&gt;, &lt;a href=&quot;https://github.com/insin/nwb&quot;&gt;nwb&lt;/a&gt; can &lt;a href=&quot;https://github.com/insin/nwb#react-components-and-libraries&quot;&gt;also do this&lt;/a&gt;, as well as &lt;a href=&quot;https://neutrino.js.org/packages/react-components/&quot;&gt;Neutrino‚Äôs react-components preset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to do &lt;strong&gt;server rendering&lt;/strong&gt; with React and Node.js, check out &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; or &lt;a href=&quot;https://github.com/jaredpalmer/razzle&quot;&gt;Razzle&lt;/a&gt;. Create React App is agnostic of the backend, and only produces static HTML/JS/CSS bundles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If your website is &lt;strong&gt;mostly static&lt;/strong&gt; (for example, a portfolio or a blog), consider using &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt; or &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;. Unlike Create React App, Gatsby pre-renders the website into HTML at build time. Next.js supports both server rendering and pre-rendering.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, if you need &lt;strong&gt;more customization&lt;/strong&gt;, check out &lt;a href=&quot;https://neutrino.js.org/&quot;&gt;Neutrino&lt;/a&gt; and its &lt;a href=&quot;https://neutrino.js.org/packages/react/&quot;&gt;React preset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All of the above tools can work with little to no configuration.&lt;/p&gt; 
&lt;p&gt;If you prefer configuring the build yourself, &lt;a href=&quot;https://reactjs.org/docs/add-react-to-an-existing-app.html&quot;&gt;follow this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;React Native&lt;/h2&gt; 
&lt;p&gt;Looking for something similar, but for React Native?&lt;br&gt; Check out &lt;a href=&quot;https://github.com/expo/expo-cli&quot;&gt;Expo CLI&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We‚Äôd love to have your helping hand on &lt;code&gt;create-react-app&lt;/code&gt;! See &lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we‚Äôre looking for and how to get started.&lt;/p&gt; 
&lt;h2&gt;Supporting Create React App&lt;/h2&gt; 
&lt;p&gt;Create React App is a community maintained project and all contributors are volunteers. If you‚Äôd like to support the future development of Create React App then please consider donating to our &lt;a href=&quot;https://opencollective.com/create-react-app&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who &lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt;.&lt;br&gt; &lt;a href=&quot;https://github.com/facebook/create-react-app/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/create-react-app/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; for hosting our documentation.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We are grateful to the authors of existing related projects for their ideas and collaboration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eanplatter&quot;&gt;@eanplatter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/insin&quot;&gt;@insin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mxstbr&quot;&gt;@mxstbr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Create React App is open source software &lt;a href=&quot;https://github.com/facebook/create-react-app/raw/master/LICENSE&quot;&gt;licensed as MIT&lt;/a&gt;. The Create React App logo is licensed under a &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prettier/prettier</title>
      <link>https://github.com/prettier/prettier</link>
      <description>&lt;p&gt;Prettier is an opinionated code formatter.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/prettier/prettier-logo/master/images/prettier-banner-light.png&quot; alt=&quot;Prettier Banner&quot;&gt;&lt;/p&gt; 
&lt;h2 align=&quot;center&quot;&gt;Opinionated Code Formatter&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;em&gt; JavaScript ¬∑ TypeScript ¬∑ Flow ¬∑ JSX ¬∑ JSON &lt;/em&gt; &lt;br&gt; &lt;em&gt; CSS ¬∑ SCSS ¬∑ Less &lt;/em&gt; &lt;br&gt; &lt;em&gt; HTML ¬∑ Vue ¬∑ Angular &lt;/em&gt; &lt;br&gt; &lt;em&gt; GraphQL ¬∑ Markdown ¬∑ YAML &lt;/em&gt; &lt;br&gt; &lt;em&gt; &lt;a href=&quot;https://prettier.io/docs/en/plugins.html&quot;&gt; Your favorite language? &lt;/a&gt; &lt;/em&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/prettier/prettier/actions?query=workflow%3AProd+branch%3Amain&quot;&gt; &lt;img alt=&quot;Github Actions Build Status&quot; src=&quot;https://img.shields.io/github/workflow/status/prettier/prettier/Prod?label=Prod&amp;amp;style=flat-square&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/prettier/prettier/actions?query=workflow%3ADev+branch%3Amain&quot;&gt; &lt;img alt=&quot;Github Actions Build Status&quot; src=&quot;https://img.shields.io/github/workflow/status/prettier/prettier/Dev?label=Dev&amp;amp;style=flat-square&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/prettier/prettier/actions?query=workflow%3ALint+branch%3Amain&quot;&gt; &lt;img alt=&quot;Github Actions Build Status&quot; src=&quot;https://img.shields.io/github/workflow/status/prettier/prettier/Lint?label=Lint&amp;amp;style=flat-square&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/prettier/prettier&quot;&gt; &lt;img alt=&quot;Codecov Coverage Status&quot; src=&quot;https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/acdlite/status/974390255393505280&quot;&gt; &lt;img alt=&quot;Blazing Fast&quot; src=&quot;https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt; &lt;img alt=&quot;npm version&quot; src=&quot;https://img.shields.io/npm/v/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/prettier&quot;&gt; &lt;img alt=&quot;weekly downloads from npm&quot; src=&quot;https://img.shields.io/npm/dw/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/prettier/prettier/main/#badge&quot;&gt; &lt;img alt=&quot;code style: prettier&quot; src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/jlongster/prettier&quot;&gt; &lt;img alt=&quot;Chat on Gitter&quot; src=&quot;https://img.shields.io/gitter/room/jlongster/prettier.svg?style=flat-square&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/PrettierCode&quot;&gt; &lt;img alt=&quot;Follow Prettier on Twitter&quot; src=&quot;https://img.shields.io/twitter/follow/prettiercode.svg?label=follow+prettier&amp;amp;style=flat-square&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.&lt;/p&gt; 
&lt;h3&gt;Input&lt;/h3&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Output&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;foo(
  reallyLongArg(),
  omgSoManyParameters(),
  IShouldRefactorThis(),
  isThereSeriouslyAnotherOne()
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Prettier can be run &lt;a href=&quot;http://prettier.io/docs/en/editors.html&quot;&gt;in your editor&lt;/a&gt; on-save, in a &lt;a href=&quot;https://prettier.io/docs/en/precommit.html&quot;&gt;pre-commit hook&lt;/a&gt;, or in &lt;a href=&quot;https://prettier.io/docs/en/cli.html#list-different&quot;&gt;CI environments&lt;/a&gt; to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://prettier.io/docs/en/&quot;&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;p&gt;&lt;a href=&quot;https://prettier.io/docs/en/install.html&quot;&gt;Install&lt;/a&gt; ¬∑ &lt;a href=&quot;https://prettier.io/docs/en/options.html&quot;&gt;Options&lt;/a&gt; ¬∑ &lt;a href=&quot;https://prettier.io/docs/en/cli.html&quot;&gt;CLI&lt;/a&gt; ¬∑ &lt;a href=&quot;https://prettier.io/docs/en/api.html&quot;&gt;API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://prettier.io/playground/&quot;&gt;Playground&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Badge&lt;/h2&gt; 
&lt;p&gt;Show the world you‚Äôre using &lt;em&gt;Prettier&lt;/em&gt; ‚Üí &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square&quot; alt=&quot;code style: prettier&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/prettier/prettier/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;üìù Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;ÌïúÍµ≠Ïñ¥&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;Êó•Êú¨Ë™û&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Fran√ßais&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Espa√±ol&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Portugu√™s&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;–†—É—Å—Å–∫–∏–π&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;T√ºrk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md&quot;&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‚òù Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan‚Äôs theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal‚Äôs Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner‚Äôs method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton‚Äôs method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui œÄ Algorithm&lt;/a&gt; - approximate œÄ calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher‚ÄìYates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - ‚Äú0/1‚Äù and ‚ÄúUnbound‚Äù ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - ‚ÄúBrute Force‚Äù and ‚ÄúDynamic Programming‚Äù (Kadane‚Äôs) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth‚ÄìMorris‚ÄìPratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan‚Äôs algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury‚Äôs algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju‚Äôs algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal‚Äôs Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight‚Äôs Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal‚Äôs Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal‚Äôs Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&quot;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight‚Äôs Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In case if linting or testing is failing try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;‚ñ∂ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;p&gt;| Big O Notation | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements | | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì‚Äì | | &lt;strong&gt;O(1)&lt;/strong&gt; | 1 | 1 | 1 | | &lt;strong&gt;O(log N)&lt;/strong&gt; | 3 | 6 | 9 | | &lt;strong&gt;O(N)&lt;/strong&gt; | 10 | 100 | 1000 | | &lt;strong&gt;O(N log N)&lt;/strong&gt; | 30 | 600 | 9000 | | &lt;strong&gt;O(N^2)&lt;/strong&gt; | 100 | 10000 | 1000000 | | &lt;strong&gt;O(2^N)&lt;/strong&gt; | 1024 | 1.26e+29 | 1.07e+301 | | &lt;strong&gt;O(N!)&lt;/strong&gt; | 3628800 | 9.3e+157 | 4.02e+2567 |&lt;/p&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;p&gt;| Data Structure | Access | Search | Insertion | Deletion | Comments | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì | :‚Äî‚Äì‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äì‚Äì‚Äì‚Äì | | &lt;strong&gt;Array&lt;/strong&gt; | 1 | n | n | n | | | &lt;strong&gt;Stack&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Queue&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Linked List&lt;/strong&gt; | n | n | 1 | n | | | &lt;strong&gt;Hash Table&lt;/strong&gt; | - | n | n | n | In case of perfect hash function costs would be O(1) | | &lt;strong&gt;Binary Search Tree&lt;/strong&gt; | n | n | n | n | In case of balanced tree costs would be O(log(n)) | | &lt;strong&gt;B-Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Red-Black Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;AVL Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Bloom Filter&lt;/strong&gt; | - | 1 | 1 | - | False positives are possible while searching |&lt;/p&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;p&gt;| Name | Best | Average | Worst | Memory | Stable | Comments | | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | :‚Äî‚Äî‚Äî‚Äì‚Äì: | :‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì: | :‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äî‚Äì‚Äì: | :‚Äì‚Äì‚Äì‚Äì | | &lt;strong&gt;Bubble sort&lt;/strong&gt; | n | n&lt;sup&gt;2&lt;/sup&gt; | n&lt;sup&gt;2&lt;/sup&gt; | 1 | Yes | | | &lt;strong&gt;Insertion sort&lt;/strong&gt; | n | n&lt;sup&gt;2&lt;/sup&gt; | n&lt;sup&gt;2&lt;/sup&gt; | 1 | Yes | | | &lt;strong&gt;Selection sort&lt;/strong&gt; | n&lt;sup&gt;2&lt;/sup&gt; | n&lt;sup&gt;2&lt;/sup&gt; | n&lt;sup&gt;2&lt;/sup&gt; | 1 | No | | | &lt;strong&gt;Heap sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | 1 | No | | | &lt;strong&gt;Merge sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n | Yes | | | &lt;strong&gt;Quick sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&lt;sup&gt;2&lt;/sup&gt; | log(n) | No | Quicksort is usually done in-place with O(log(n)) stack space | | &lt;strong&gt;Shell sort&lt;/strong&gt; | n&amp;nbsp;log(n) | depends on gap sequence | n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt; | 1 | No | | | &lt;strong&gt;Counting sort&lt;/strong&gt; | n + r | n + r | n + r | n + r | Yes | r - biggest number in array | | &lt;strong&gt;Radix sort&lt;/strong&gt; | n * k | n * k | n * k | n + k | Yes | k - length of longest key |&lt;/p&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ‚ù§Ô∏èÔ∏è &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;‚àë = 0&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ÑπÔ∏è A few more &lt;a href=&quot;https://trekhleb.dev/projects/&quot;&gt;projects&lt;/a&gt; and &lt;a href=&quot;https://trekhleb.dev/blog/&quot;&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href=&quot;https://trekhleb.dev&quot;&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Ebazhanov/linkedin-skill-assessments-quizzes</title>
      <link>https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes</link>
      <description>&lt;p&gt;Full reference of LinkedIn answers 2021 for skill assessments, LinkedIn test, questions and answers (aws-lambda, rest-api, javascript, react, git, html, jquery, mongodb, java, css, python, machine-learning, power-point) linkedin excel test l√∂sungen, linkedin machine learning test&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Linkedin Quiz Answers, Skill Assessments Test&lt;/h2&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#contributors-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/all_contributors-393-orange.svg?style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This repository is for those looking for answers to the LinkedIn assessment quiz questions or willing to help others by contributing to the tests. Or possibly you would like to create your first pull request and be added as a contributor. Whatever is your goal - you are always welcome here! Feel free to use &lt;a href=&quot;https://www.grammarly.com/&quot;&gt;online grammar checker&lt;/a&gt; when you contribute!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Announcement:&lt;/h4&gt; 
&lt;p&gt;if you want to meet each other or discuss quiz related problems join the &lt;code&gt;Discord&lt;/code&gt; chat&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/XUccFRvUfM&quot;&gt;&lt;img src=&quot;https://invidget.switchblade.xyz/XUccFRvUfM?theme=light&quot; alt=&quot;Join our Discord server!&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| Linkedin-quiz-questions | Translation | | Status | Your resource for answers. In case you have doubts please contact this person or add him to review your PR. | | ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî‚Äî‚Äî | ‚Äî‚Äî‚Äî‚Äì‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-acrobat/adobe-acrobat-quiz.md&quot;&gt;Adobe-Acrobat&lt;/a&gt; | | =&amp;gt; 15 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-illustrator/adobe-illustrator-quiz.md&quot;&gt;Adobe-Illustrator&lt;/a&gt; | | =&amp;gt; 51 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-in-design/adobe-in-design-quiz.md&quot;&gt;Adobe-InDesign&lt;/a&gt; | | =&amp;gt; 3 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-lightroom/adobe-lightroom-quiz.md&quot;&gt;Adobe-Lightroom&lt;/a&gt; | | =&amp;gt; 15 questions | =&amp;gt; 14 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-photoshop/adobe-photoshop-quiz.md&quot;&gt;Adobe-Photoshop&lt;/a&gt; | | =&amp;gt; 36 questions | =&amp;gt; 36 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-premiere-pro/adobe-premiere-pro-quiz.md&quot;&gt;Adobe Premiere Pro&lt;/a&gt; | | =&amp;gt; 47 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/agile-methodologies/agile-methodologies-quiz.md&quot;&gt;Agile Methodologies&lt;/a&gt; | | =&amp;gt; 76 questions | =&amp;gt; 76 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/android/android-quiz.md&quot;&gt;Android&lt;/a&gt; | | =&amp;gt; 44 questions | =&amp;gt; 40 answers | &lt;a href=&quot;https://github.com/surajsahani&quot;&gt;@surajsahani&lt;/a&gt;, &lt;a href=&quot;https://github.com/mr-shoxruxbek&quot;&gt;@mr-shoxruxbek&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/angular/angular-quiz.md&quot;&gt;Angular&lt;/a&gt; | | =&amp;gt; 32 questions | =&amp;gt; 32 answers | &lt;a href=&quot;https://github.com/vanekbr&quot;&gt;@vanekbr&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/autocad/autocad-quiz.md&quot;&gt;AutoCAD&lt;/a&gt; | | =&amp;gt; 32 questions | =&amp;gt; 32 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/aws/aws-quiz.md&quot;&gt;AWS&lt;/a&gt; | | =&amp;gt; 38 questions | =&amp;gt; 36 answers | &lt;a href=&quot;https://github.com/jokerkeny&quot;&gt;@jokerkeny&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/aws-lambda/aws-lambda-quiz.md&quot;&gt;AWS-Lambda&lt;/a&gt; :fire: | | =&amp;gt; 44 questions | =&amp;gt; 44 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/bash/bash-quiz.md&quot;&gt;Bash&lt;/a&gt; | | =&amp;gt; 53 questions | =&amp;gt; 53 answers | &lt;a href=&quot;https://github.com/D4RIO&quot;&gt;@D4RIO&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c%23/c-sharp-quiz.md&quot;&gt;C#&lt;/a&gt; | | =&amp;gt; 53 questions | =&amp;gt; 53 answers | &lt;a href=&quot;https://github.com/LiviuSosu&quot;&gt;@LiviuSosu&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c%2B%2B/c%2B%2Bquiz.md&quot;&gt;C++&lt;/a&gt; | | =&amp;gt; 62 questions | =&amp;gt; 62 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c-(programming-language)/c-quiz.md&quot;&gt;C (Programming Language)&lt;/a&gt; | | =&amp;gt; 28 questions | =&amp;gt; 28 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/css/css-quiz.md&quot;&gt;CSS&lt;/a&gt; | | =&amp;gt; 77 questions | =&amp;gt; 77 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/django/django-quiz.md&quot;&gt;Django&lt;/a&gt; | | =&amp;gt; 48 questions | =&amp;gt; 48 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/dotnet-framework/dotnet-framework-quiz.md&quot;&gt;.NET Framework&lt;/a&gt; | | =&amp;gt; 37 questions | =&amp;gt; 34 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/eclipse/eclipse-quiz.md&quot;&gt;Eclipse&lt;/a&gt; | | =&amp;gt; 22 questions | =&amp;gt; 15 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/front-end-development/front-end-development-quiz.md&quot;&gt;Front-end Development&lt;/a&gt; | | =&amp;gt; 34 questions | =&amp;gt; 32 answers | &lt;a href=&quot;https://github.com/vanekbr&quot;&gt;@vanekbr&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/git/git-quiz.md&quot;&gt;Git&lt;/a&gt; :star: | | =&amp;gt; 92 questions | =&amp;gt; 92 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/google-analytics/google-analytics-quiz.md&quot;&gt;Google Analytics&lt;/a&gt; | | =&amp;gt; 65 questions | =&amp;gt; 45 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/google-cloud-platform/gcp-quiz.md&quot;&gt;Google Cloud Platform (GCP)&lt;/a&gt; | | =&amp;gt; 27 questions | =&amp;gt; 27 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/hadoop/hadoop-quiz.md&quot;&gt;Hadoop&lt;/a&gt; | | =&amp;gt; 31 questions | =&amp;gt; 18 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/html/html-quiz.md&quot;&gt;HTML&lt;/a&gt; | | =&amp;gt; 62 questions | =&amp;gt; 62 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/java/java-quiz.md&quot;&gt;Java&lt;/a&gt; | | =&amp;gt; 65 questions | =&amp;gt; 65 answers | &lt;a href=&quot;https://github.com/sumanas27&quot;&gt;@sumanas27&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/javascript/javascript-quiz.md&quot;&gt;Javascript&lt;/a&gt; | | =&amp;gt; 70 questions | =&amp;gt; 70 answers | &lt;a href=&quot;https://github.com/taletski&quot;&gt;@taletski&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/jquery/jquery-quiz.md&quot;&gt;jQuery&lt;/a&gt; :open_mouth: | | =&amp;gt; 50 questions | =&amp;gt; 50 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/json/json-quiz.md&quot;&gt;JSON&lt;/a&gt; | | =&amp;gt; 51 questions | =&amp;gt; 51 answers | &lt;a href=&quot;https://github.com/iHamzaKhanzada&quot;&gt;@iHamzaKhanzada&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/kotlin/kotlin-quiz.md&quot;&gt;Kotlin&lt;/a&gt; | | =&amp;gt; 44 questions | =&amp;gt; 34 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/linux/linux-assesment.md&quot;&gt;Linux&lt;/a&gt; | | =&amp;gt; 34 questions | =&amp;gt; 30 answers | &lt;a href=&quot;https://github.com/D4RIO&quot;&gt;@D4RIO&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/machine-learning/machine-learning-quiz.md&quot;&gt;Machine Learning&lt;/a&gt; | | =&amp;gt; 70 questions | =&amp;gt; 70 answers | &lt;a href=&quot;https://github.com/aaronwangj&quot;&gt;@aaronwangj&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/matlab/matlab-quiz.md&quot;&gt;MATLAB&lt;/a&gt; | | =&amp;gt; 45 questions | =&amp;gt; 45 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/maven/maven-quiz.md&quot;&gt;Maven&lt;/a&gt; :fire: | | =&amp;gt; 44 questions | =&amp;gt; 44 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-access/microsoft-access.md&quot;&gt;Microsoft Access&lt;/a&gt; | | =&amp;gt; 26 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-azure/microsoft-azure-quiz.md&quot;&gt;Microsoft Azure&lt;/a&gt; | | =&amp;gt; 44 questions | =&amp;gt; 45 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-excel/microsoft-excel-quiz.md&quot;&gt;Microsoft Excel&lt;/a&gt; | &lt;kbd&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-excel/microsoft-excel-quiz-de.md&quot;&gt;&lt;img title=&quot;Deutsch&quot; alt=&quot;Deutsch&quot; src=&quot;https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/de.svg?sanitize=true&quot; width=&quot;22&quot;&gt;&lt;/a&gt;&lt;/kbd&gt; | =&amp;gt; 52 questions | =&amp;gt; 52 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-outlook/microsoft-outlook-quiz.md&quot;&gt;Microsoft Outlook&lt;/a&gt; | | =&amp;gt; 12 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-power-bi/microsoft-power-bi-quiz.md&quot;&gt;Microsoft Power BI&lt;/a&gt; | | =&amp;gt; 26 questions | =&amp;gt; 23 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-power-point/microsoft-power-point-quiz.md&quot;&gt;Microsoft Power Point&lt;/a&gt; | | =&amp;gt; 38 questions | =&amp;gt; 38 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-project/microsoft-project-quiz.md&quot;&gt;Microsoft Project&lt;/a&gt; | | =&amp;gt; 41 questions | =&amp;gt; 41 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-word/microsoft-word-quiz.md&quot;&gt;Microsoft Word&lt;/a&gt; | | =&amp;gt; 54 questions | =&amp;gt; 52 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/mongodb/mongodb-quiz.md&quot;&gt;MongoDB&lt;/a&gt; | | =&amp;gt; 54 questions | =&amp;gt; 54 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/mysql/mysql-quiz.md&quot;&gt;MySQL&lt;/a&gt; | | =&amp;gt; 68 questions | =&amp;gt; 68 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/node.js/node.js-quiz.md&quot;&gt;node.js&lt;/a&gt; | | =&amp;gt; 41 questions | =&amp;gt; 41 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/nosql/nosql-quiz.md&quot;&gt;NoSQL&lt;/a&gt; | | =&amp;gt; 43 questions | =&amp;gt; 43 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/objective-c/objective-c-quiz.md&quot;&gt;objective-c&lt;/a&gt; | | =&amp;gt; 33 questions | =&amp;gt; 31 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/oop/object-oriented-programming-quiz.md&quot;&gt;OOP&lt;/a&gt; | | =&amp;gt; 56 questions | =&amp;gt; 56 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/php/php-quiz.md&quot;&gt;PHP&lt;/a&gt; | | =&amp;gt; 34 questions | =&amp;gt; 34 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/python/python-quiz.md&quot;&gt;Python&lt;/a&gt; | | =&amp;gt; 67 questions | =&amp;gt; 67 answers | &lt;a href=&quot;https://github.com/tik9&quot;&gt;@tik9&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/quickbooks/quickbooks-quiz.md&quot;&gt;QuickBooks&lt;/a&gt; | | =&amp;gt; 46 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/r/r-quiz.md&quot;&gt;R&lt;/a&gt; | | =&amp;gt; 29 questions | =&amp;gt; 29 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/react/reactjs-quiz.md&quot;&gt;React.js&lt;/a&gt; :rose: | | =&amp;gt; 52 questions | =&amp;gt; 52 answers | &lt;a href=&quot;https://github.com/RobTables&quot;&gt;@RobTables&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/rest-api/rest-api-quiz.md&quot;&gt;REST API&lt;/a&gt; :+1: | | =&amp;gt; 52 questions | =&amp;gt; 51 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/ruby-on-rails/ruby-on-rails-quiz.md&quot;&gt;Rubi on Rails&lt;/a&gt; :+1: | | =&amp;gt; 24 questions | =&amp;gt; 4 answers | &lt;a href=&quot;https://github.com/gudata&quot;&gt;@gudata&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/scala/scala-quiz.md&quot;&gt;Scala&lt;/a&gt; | | =&amp;gt; 25 questions | =&amp;gt; 25 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/seo/search-engine-optimization-quiz.md&quot;&gt;Search Engine Optimization (SEO)&lt;/a&gt; | | =&amp;gt; 29 questions | =&amp;gt; 28 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/sharepoint/sharepoint-quiz.md&quot;&gt;SharePoint&lt;/a&gt; | | =&amp;gt; 29 questions | =&amp;gt; 29 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/spring-framework/spring-framework-quiz.md&quot;&gt;Spring Framework&lt;/a&gt; | | =&amp;gt; 15 questions | =&amp;gt; 15 answers | &lt;a href=&quot;https://github.com/sumanas27&quot;&gt;@sumanas27&lt;/a&gt;, &lt;a href=&quot;https://github.com/rradfar&quot;&gt;@rradfar&lt;/a&gt; | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/swift/swift-quiz.md&quot;&gt;Swift&lt;/a&gt; | | =&amp;gt; 70 questions | =&amp;gt; 70 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/t-sql/t-sql-quiz.md&quot;&gt;Transact-SQL (T-SQL)&lt;/a&gt; | | =&amp;gt; 28 questions | =&amp;gt; 28 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/unity/unity-quiz.md&quot;&gt;Unity&lt;/a&gt; | | =&amp;gt; 38 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/vba/vba-quiz.md&quot;&gt;Visual Basic for Applications (VBA)&lt;/a&gt; | | =&amp;gt; 11 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/visio/visio-quiz.md&quot;&gt;Visio&lt;/a&gt; | | =&amp;gt; 32 questions | =&amp;gt; 0 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/windows-server/windows-server-quiz.md&quot;&gt;Windows Server&lt;/a&gt; | | =&amp;gt; 46 questions | =&amp;gt; 44 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/wordpress/wordpress-quiz.md&quot;&gt;WordPress&lt;/a&gt; | | =&amp;gt; 55 questions | =&amp;gt; 39 answers | | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/xml/xml-quiz.md&quot;&gt;XML&lt;/a&gt; | | =&amp;gt; 21 questions | =&amp;gt; 19 answers | |&lt;/p&gt; 
&lt;h2&gt;Format&lt;/h2&gt; 
&lt;p&gt;We recommend formatting files using &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; code formatter. Prettier comes installed with the IDE &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/code.visualstudio.com&quot;&gt;Vscode&lt;/a&gt; which we recommend for preparing the md files. It works on all OS. If you want to run it independently, get &lt;strong&gt;npm&lt;/strong&gt; and:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run format
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Ebazhanov&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/13170022?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evgenii&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ebazhanov&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Ebazhanov&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ethereum.stackexchange.com/users/38531/monkrus&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/12500447?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergei Stadnik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=monkrus&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#fundingFinding-monkrus&quot; title=&quot;Funding Finding&quot;&gt;üîç&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#ideas-monkrus&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/santhosh-techie&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/29485255?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Santhosh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=santhosh-techie&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/iamjake-dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/65621534?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jacob Dsa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=iamjake-dev&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-iamjake-dev&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://aaronmeese.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/17814535?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron Meese&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ajmeese7&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-ajmeese7&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/arqarq&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/43341071?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;arqarq&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=arqarq&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-arqarq&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/amitykaran&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/23481557?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amit Yadav&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amitykaran&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-amitykaran&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://creator.geekart.club/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18037133?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Javokhir Nazarov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nazarov7mu&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Nazarov7mu&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/saurav1423&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/55906348?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;saurav kumar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-saurav1423&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Chetan11-dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/53407137?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chetan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Chetan11-dev&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shekari-ah&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/61600246?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amir Hossein Shekari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-shekari-ah&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-shekari-ah&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shekari-ah&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SergDaut&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/65856306?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SergDaut&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SergDaut&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/pramaniknilotpal/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/33095476?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nilotpal Pramanik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-goodday451999&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=goodday451999&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-goodday451999&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#business-goodday451999&quot; title=&quot;Business development&quot;&gt;üíº&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://abhisaphire.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/43245214?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abhishek Kumar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-AbhiSaphire&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.facebook.com/monu.gupta.14855377&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/42869855?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Monu Gupta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-gmonu&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kartikeyaGUPTA45&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/55397207?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;KARTIKEYA GUPTA&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kartikeyaGUPTA45&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-kartikeyaGUPTA45&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kenkyusha&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/22096048?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kenkyusha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kenkyusha&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-kenkyusha&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/juandavidtowers&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/58567225?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;juandavidtowers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=juandavidtowers&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-juandavidtowers&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cyber-netics&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/67401984?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cyber-netics&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cyber-netics&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-cyber-netics&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jtrisw&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/67442001?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jtrisw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jtrisw&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-jtrisw&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/renregalado&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/15017921?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Renato Regalado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ingenium21&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-ingenium21&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://elixiumnetwork.org/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19564531?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matthew&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=fantypants&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-fantypants&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/roplayer&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/129923?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jan S.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=roplayer&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-roplayer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/igielskv&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7470561?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manoli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=igielskv&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-igielskv&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/faraztanveer&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/23014681?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Faraz tanveer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=faraztanveer&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-faraztanveer&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mohnishkarri&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/60459557?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mohnishkarri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mohnishkarri&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-mohnishkarri&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mohnishkarri&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andyzhu&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/171831?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;andyzhu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=andyzhu&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-andyzhu&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kushvishal&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/67946755?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vishal Kushwah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kushvishal&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-kushvishal&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/7fold&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/33958646?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yurii Yakymenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=7fold&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-7fold&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.thetechrix.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/19845881?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Swetabh Suman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Swetabhsuman8&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Swetabhsuman8&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/theInvincible&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/60701544?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AJAY DANDGE&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=theInvincible&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-theInvincible&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mehmeteyesin&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5034086?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mehmet Yesin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mehmeteyesin&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lok0613&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6286158?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lok Chun Wai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-lok0613&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/adriadejuan&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/59417678?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adria de Juan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-adriadejuan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gl-man&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/29589220?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;GL-Man&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-gl-man&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Jheel-patel&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/50559602?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jheel Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Jheel-patel&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://wsameer.github.io/v1/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8468992?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sameer Waskar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-wsameer&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alexander-e-andrews&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/45926661?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexander Andrews&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-alexander-e-andrews&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/abmaxwell/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/25352305?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexander Maxwell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-abmaxwell&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SlavaSD&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/38739299?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Slava&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SlavaSD&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mayurbiw&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/20475960?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mayur Khatri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mayurbiw&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Mascantosh&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/38609392?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mascantosh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Mascantosh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Mascantosh&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#talk-Mascantosh&quot; title=&quot;Talks&quot;&gt;üì¢&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#ideas-Mascantosh&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/kivancenesbeser/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/16528400?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kivanc Enes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-kivancbeser&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/ritika-das-ece/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/61988162?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ritika Das&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Ritika-Das&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Zer07793&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/68774399?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zer07793&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Zer07793&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cheungdzinyung&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/24264186?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Cheung&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-cheungdzinyung&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sadhac&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/35103750?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sadha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sadhac&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tainenko&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/31752048?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;tainenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-tainenko&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tainenko&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/github-star-coder&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/68719147?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;github-star-coder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-github-star-coder&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/danilotecoliveira&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8810413?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Danilo Oliveira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-danilotecoliveira&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lordeko&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5224614?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lordeko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-lordeko&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TheShubham-K&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/52125841?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shubham Kumar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-TheShubham-K&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TheShubham-K&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/testtree&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/69110357?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;testtree&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-testtree&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cherylli&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/6191116?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cheryl Murphy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-cherylli&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cherylli&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/TechieTom&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/342573?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bipin Thomas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-TechieTom&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aHishamm&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/40188935?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abdulrahman Hisham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-aHishamm&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/dakshitha-dissanayaka-099a09143/?originalSubdomain=lk&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/45692186?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dakshitha Dissanayaka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Dakshitha96&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://badrkac.github.io&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/31140256?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;BADR KACIMI&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-BADRKAC&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://naivekid.me/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/9972355?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-DarkAlexWang&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/maximlangman&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/69239194?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maxim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-maximlangman&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/GordonGrant&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/69278254?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;GordonGrant&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-GordonGrant&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GordonGrant&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://tirufat.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/38384199?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ephrem Demelash&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ephremdeme&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JonOrcutt&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/14285933?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JonOrcutt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-JonOrcutt&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/topdev10&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/44815224?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;topdev10&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-topdev10&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cookwellwebsite&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/67667331?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cookwellwebsite&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-cookwellwebsite&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/xren935&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/59517115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;xren935&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-xren935&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nemo369&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5106483?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nemo Frenkel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-nemo369&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.hackerrank.com/mdsaifalam96&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/38750964?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MD SAIF ALAM&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mdsaifalam96&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/borosilva&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/16139435?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Boris L√≥pez Araya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-borosilva&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LarryChiem&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/15273129?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Larry Chiem&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-LarryChiem&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bilal966&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8384741?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Muhammad Bilal Ilyas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-bilal966&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://alimilani.ir&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/59066012?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AliMilani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-AliMilani&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AliMilani&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://surajsahani.github.io/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22853459?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Suraj Sahani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-surajsahani&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://medium.com/@flyingSquirrel&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/43737436?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;FlyingSquirrel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-flyingSquirrel-dev&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ericktijerou.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/17746153?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erick Tijero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ericktijerou&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Jaskaran121&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/35613378?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaskaran Kukreja&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Jaskaran121&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mlito&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5511762?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MichaelL&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mlito&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MagicLegend&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3169104?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MagicLegend&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-MagicLegend&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dkbearsong&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/58266063?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dereck Bearsong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-dkbearsong&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/pappu-kumar-pashi-75977a172/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/46879554?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pappu Kumar Pashi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-PappuKP&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kishore93&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/12965564?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Venkata Kishore Tavva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-kishore93&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rafattouqir&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2104659?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rafat Touqir Rafsun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-rafattouqir&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.scikn.in&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/53991169?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Snehesh Dutta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Sneheshdutta&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://tik9.github.io/cv&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3178925?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Timo K√∂rner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-tik9&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tik9&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alexxxan&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/70323867?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;alexxxan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-alexxxan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/GGJason&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8362482?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;GGJason&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-GGJason&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lewing00&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/46617523?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;LeeAnna Ewing&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-lewing00&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#ideas-lewing00&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/jyotwal&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/19168650?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kamal Jyotwal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-kamaljyotwal&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Bob-Johns&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/71194583?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bob-Johns&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Bob-Johns&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Bob-Johns&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Bob-Johns&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yunussalmanlyit&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/61629690?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yunussalmanlyit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-yunussalmanlyit&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yunussalmanlyit&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/chilcot&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/62221068?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;chilcot&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-chilcot&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chilcot&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jackyli-work&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/54344547?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jacky Li&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jackyli-work&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-jackyli-work&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jackyli-work&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sarthaktrivedi99&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4245783?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sarthak Trivedi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sarthaktrivedi99&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ayushaggarwal.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/17214678?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ayush Aggarwal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ayushagg31&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ayushagg31&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nicballarini&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13786995?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nic Ballarini&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-nicballarini&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://blogs.dotnethell.it/ciupaz/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3354890?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luigi Zambetti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-LuigiZambetti&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LuigiZambetti&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/govindhaswin&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/47293468?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;govindhaswin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-govindhaswin&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/royadityak94&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/57421832?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Addy Roy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=royadityak94&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-royadityak94&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dev-akshat/dev-akshat&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/43572179?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Akshat Tamrakar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-dev-akshat&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dev-akshat&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sai-github&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/9116255?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sai Bhargava Ramu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sai-github&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://youtube.com/c/gurkankaraman&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/40955470?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gurkan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GHasanKaraman&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://spencer-hayes.me/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/24394743?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Spencer Hayes-Laverdiere&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shaye059&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://linkedin.com/in/aniketsoni/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/47126963?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aniket Soni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aniketsoni1&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tanmay5792&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/71548736?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;tanmay5792&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tanmay5792&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/dina-taklit/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/20540072?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dina Taklit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DinaTaklit&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-DinaTaklit&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-DinaTaklit&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dushyantsingh-ds&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/55306442?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dushyant Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Dushyantsingh-ds&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LeoMajorR&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/35331954?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ravi Prakash Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LeoMajorR&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/joshinihal&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/60462831?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nihal Joshi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=joshinihal&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/klages&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7157817?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guy Klages&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=guyklages&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ac121102&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/66919962?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arvind&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ac121102&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ac121102&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mujeeb91&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/4310777?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mujeeb91&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mujeeb91&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/joserca&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/56326917?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;joserca&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-joserca&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=joserca&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://prateekagrawaliiit.github.io/personal-website/index&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/65390045?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Prateek Agrawal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=prateekagrawaliiit&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SarahTeoh&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/28722169?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Teoh Tze Chuin(„Çµ„É©)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SarahTeoh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SarahTeoh&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://xybervenom.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/40491811?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jayant Jain&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=xybervenom&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ayushsahu1999&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/46241471?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ayush Sahu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ayushsahu1999&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://greenglow123.wordpress.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/43813666?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hridya Krishna R&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hridyakrishna&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://rahbal.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5176514?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rahul Bali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rahbal&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-rahbal&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DevHabit&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3051782?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;S.ZHeng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-DevHabit&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DevHabit&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#business-DevHabit&quot; title=&quot;Business development&quot;&gt;üíº&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shriyaMadan&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/38863530?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shriya Madan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-shriyaMadan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shriyaMadan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mahalrupi&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/31862642?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mahalrupi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mahalrupi&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LucasLermagne&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/60604364?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Lermagne&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-LucasLermagne&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jadeutsch&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/24517053?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jeff Deutsch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jadeutsch&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jadeutsch&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Betoxx1&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/20777308?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Betoxx1&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Betoxx1&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Wingman4l7&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1383561?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wingman4l7&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Wingman4l7&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MarespTech&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/62226552?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin Espericueta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-MarespTech&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://mh-tahir.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/58627780?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mh-Tahir&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Mh-Tahir&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ZdravekSprite&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/52032768?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zdravko ≈†plajt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ZdravekSprite&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ZdravekSprite&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Ms3105&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/68704852?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ms3105&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Ms3105&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ms3105&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Ms3105&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sidhesware3298&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/56552115?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ambika Sidhesware&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sidhesware3298&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mundoguero&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1318156?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mundoguero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mundoguero&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Darkus24&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/72884834?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Darkus24&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Darkus24&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Sou-786&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/63981549?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sou-786&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-Sou-786&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Sou-786&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/banurekhaMohan279&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/21097764?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Banurekha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-banurekhaMohan279&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ShiraStarL&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/37556795?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ShiraStarL&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ShiraStarL&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mozgit&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2301052?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ilya Komarov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mozgit&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DemigodMs&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/72858244?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;DemigodMs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-DemigodMs&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DemigodMs&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rapunzel127&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/44580953?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mekha Hridya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-rapunzel127&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#fundingFinding-rapunzel127&quot; title=&quot;Funding Finding&quot;&gt;üîç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.andreysafonov.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/6531389?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrey Safonov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-andreysaf&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#fundingFinding-andreysaf&quot; title=&quot;Funding Finding&quot;&gt;üîç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tommasopifferi.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1112539?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tommaso&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-neslinesli93&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=neslinesli93&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jessicasalbert&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/66483878?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jessica Salbert&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jessicasalbert&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jessicasalbert&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JAYISAWSM&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/32494701?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JAYANTH DOLAI&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JAYISAWSM&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-JAYISAWSM&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/silverstroom&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/43572178?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;silverstroom&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=silverstroom&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-silverstroom&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#business-silverstroom&quot; title=&quot;Business development&quot;&gt;üíº&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://furkansayim.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3766764?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Furkan Sayƒ±m&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=xShuden&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-xShuden&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.sukumarc.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/9497448?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sukumar Chandrasekaran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sukumarc&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/98yejin&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30521748?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yejin Park&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-98yejin&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=98yejin&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/alinooshabadi&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/646788?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ali Nooshabadi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-alinooshabadi&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/imitavor&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/73336620?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;imitavor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-imitavor&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=imitavor&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://salihkilicli.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/42879163?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Salih Kilicli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-salihkilicli&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=salihkilicli&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/srmeneses&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/11792508?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcelo Meneses&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-srmeneses&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=srmeneses&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tonchique&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/36279559?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anton Krekotun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-tonchique&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#maintenance-tonchique&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-tonchique&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tonchique&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tonchique&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#business-tonchique&quot; title=&quot;Business development&quot;&gt;üíº&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/arnavsarmagatechgrad/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/12614627?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arnav Sarma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=asarma2012&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#example-asarma2012&quot; title=&quot;Examples&quot;&gt;üí°&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-asarma2012&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/meghatiku&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/43341228?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;meghatiku&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=meghatiku&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-meghatiku&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/anshu-trivedi-501a7b146/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/47869948?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anshu Trivedi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-AnshuTrivedi&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://taylordorsett.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/16449771?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Taylor Dorsett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TaylorOD&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-TaylorOD&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-TaylorOD&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://blog.havit.web.id/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/17120764?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Havit Rovik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=haruelrovix&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pushpapune&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/73734199?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pushpapune&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pushpapune&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-pushpapune&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rradfar&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/31255934?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ramtin Radfar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-rradfar&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#ideas-rradfar&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;ü§î&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#business-rradfar&quot; title=&quot;Business development&quot;&gt;üíº&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#financial-rradfar&quot; title=&quot;Financial&quot;&gt;üíµ&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rradfar&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-rradfar&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#question-rradfar&quot; title=&quot;Answering Questions&quot;&gt;üí¨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.abdulmajeedisa.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/44467524?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abdulmajeed Isa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amajai&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-amajai&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vikassaxena02&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/25317029?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vikassaxena02&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-vikassaxena02&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/RobTables&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/52382103?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RobTables&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-RobTables&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RobTables&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#business-RobTables&quot; title=&quot;Business development&quot;&gt;üíº&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Daniboy370&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/46421909?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Daniboy370&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Daniboy370&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#business-Daniboy370&quot; title=&quot;Business development&quot;&gt;üíº&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#fundingFinding-Daniboy370&quot; title=&quot;Funding Finding&quot;&gt;üîç&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/zaahidali/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/37751705?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zahid Ali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=zaahidali&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-zaahidali&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SuperGuy10&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/13461705?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chad Chai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SuperGuy10&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SuperGuy10&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://marcobiedermann.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/5244986?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marco Biedermann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=marcobiedermann&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-marcobiedermann&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#business-marcobiedermann&quot; title=&quot;Business development&quot;&gt;üíº&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#ideas-marcobiedermann&quot; title=&quot;Ideas, Planning, &amp;amp; Feedback&quot;&gt;ü§î&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/srinidhimurthy&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10862228?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Srinidhi Murthy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-srinidhimurthy&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Hephaest&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/37981444?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miao Cai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Hephaest&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Hephaest&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dioniciodiaz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/26011982?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dionicio Diaz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-dioniciodiaz&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dioniciodiaz&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mirmpro&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/14123130?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mir Monoarul Alam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mirmpro&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.shawnohn.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/16888656?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shawn Ohn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shawnohn&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-shawnohn&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://amanbolat.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/15110242?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amanbolat Balabekov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-amanbolat&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amanbolat&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/black-mamba-code&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/74553558?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;black-mamba-code&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=black-mamba-code&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Jian-forks&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/59821548?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jian-forks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Jian-forks&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Jian-forks&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://shivani30594.wixsite.com/shivani30594&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/10483979?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;shivani patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-shivani30594&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Akash-chowrasia&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/47868444?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Akash Chowrasia&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Akash-chowrasia&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yairg98&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/57117865?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yairg98&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-yairg98&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jaygajjar.tk/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/57590688?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jay Gajjar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-j-j-gajjar&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/coolerbooler&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/74932465?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;coolerbooler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=coolerbooler&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jinnatul.github.io/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/31995155?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Md Zinnatul Islam Morol&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jinnatul&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shresthashok550&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/67057717?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;shresthashok550&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-shresthashok550&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shresthashok550&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://alanpallath.codes/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/17932700?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alan Pallath&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=a1764879&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/adrianjw/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/55360387?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrian Wong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adrianjw&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vsDizzy&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/5798340?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vsDizzy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vsDizzy&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-vsDizzy&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://facebook.com/fcuadillera&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/17181425?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frex Cuadillera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-frexcuadillera&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=frexcuadillera&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ashish570&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/61080406?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ashish570&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ashish570&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ashish570&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ruchpeanuts&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/29301900?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ruchpeanuts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ruchpeanuts&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ruchpeanuts&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Artmasque&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/23199407?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Artmasque&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Artmasque&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Artmasque&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://amaje.ir&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/15340704?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amirhossein Mojiri Foroushani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-amirmojiry&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/for&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7262123?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;for&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=for&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lukee1234&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/61923182?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-lukee1234&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lukee1234&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://sites.google.com/site/espinozahg/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/9592831?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hector Espinoza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-espinozahg&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/adrianbuenfil/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/71770394?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adri√°n Buenfil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-AdrianBuenfil&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AdrianBuenfil&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://amitravikumar.github.io/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/43449014?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amit Kumar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-amitravikumar&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://None&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/37182137?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;schoppfe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-schoppfe&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=schoppfe&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aamllc&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/75911712?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sofiyal C&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-aamllc&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aamllc&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/spitlisk&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/43657878?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;spitlisk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=spitlisk&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-spitlisk&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/pravin--sharma&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32671972?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;PRAVIN SHARMA&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-pravin-sharma&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/NIDZAAA1&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/58033073?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;NIDZAAA1&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-NIDZAAA1&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NIDZAAA1&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JohnMai1994&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/44597440?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Mai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-JohnMai1994&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JohnMai1994&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://soso-cod3v.tistory.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/43427380?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kimsoyeong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-kimsoyeong&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/donaghosh&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/30055109?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dona Ghosh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=donaghosh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ryanhill1&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/46977852?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Hill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ryanhill1&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ryanhill1&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/j42z&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/30728262?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;j42z&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-j42z&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=j42z&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ashishsangale&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/39612240?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ashish Sangale&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ashishsangale&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ashishsangale&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://derekyang.netlify.app&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/55335639?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Derek Yang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-baymax88&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=baymax88&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mohsinmsm&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/63414742?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mohsinmsm&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mohsinmsm&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mohsinmsm&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/gokulakrishnan-velu-43289174/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/65799732?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gokulkrish2302&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gokulkrish2302&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Bhaavishek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/49985195?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bhaavishek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Bhaavishek&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Bhaavishek&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/a401120174&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/39911137?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Louis Liao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-a401120174&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sengc92&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/63807395?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sengc92&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sengc92&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sengc92&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/amarvin&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/10762127?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Marvin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-amarvin&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/balkrishna-bhatt-1b2830131/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/28816472?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Balkrishna Bhatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-BalkrishnaBhatt&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BalkrishnaBhatt&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://lavrinovicius.lt&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/24303281?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evaldas Lavrinoviƒçius&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-xTheEc0&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=xTheEc0&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.facebook.com/erchegyia&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/17572418?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adam Erchegyi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-erchegyia&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=erchegyia&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://trumanhung.tech&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7915216?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Truman Hung&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-trumanhung&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=trumanhung&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://romanzamoracarrerascv.s3-website-eu-west-1.amazonaws.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/71715749?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;rzamora11&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-rzamora11&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gaurav0224&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/37846341?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;gaurav0224&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-gaurav0224&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cockyb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/56942459?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lee GyeongJun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-cockyb&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://miroslawlis.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/8983142?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mirek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-miroslawlis&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=miroslawlis&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/surajm245&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/11998757?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;surajm245&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-surajm245&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ArisLaode&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/21226377?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ArisLaode&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ArisLaode&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ArisLaode&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/RaviDhoriya&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6481302?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RaviDhoriya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-RaviDhoriya&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RaviDhoriya&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sarai-84&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/77579381?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sarai-84&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sarai-84&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sarai-84&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vishnudamwala.netlify.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4034728?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vishnu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-cooldashing24&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev-mdminhaj.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/64159776?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Muhammad Minhaj&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dev-mdminhaj&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://chandrikadeb7.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/29686102?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chandrika Deb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-chandrikadeb7&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chandrikadeb7&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Gitgit101-bit&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/52999282?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gitgit101-bit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Gitgit101-bit&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Gitgit101-bit&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://gamejolt.com/@hedi-sellami&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/24782334?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hedi Sellami&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hedi-sel&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-hedi-sel&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/saurabhvaish93&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/57400294?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;saurabhvaish93&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=saurabhvaish93&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-saurabhvaish93&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.upwork.com/fl/nikolabegovic&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34249215?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikola Begovic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BegovicNikola&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-BegovicNikola&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nkhs&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/29690436?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nkhs&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-nkhs&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://medium.com/@manueldepaz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2047107?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manuel Eusebio de Paz Carmona&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Pelirrojo&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Basim108&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11601933?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Basim Al-Jawahery&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Basim108&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Basim108&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AhmedRaja1&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/52793181?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RAJA AHMED&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-AhmedRaja1&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AhmedRaja1&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://bloggercls8e.appspot.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8018018?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abhik Lodh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=abhiklodh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mdPial&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43095489?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Md. Pial Ahamed&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mdPial&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mdPial&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://hassanshahzad.urspace.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37936447?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hassan Shahzad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HassanShahzad7&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-HassanShahzad7&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/christiansgesp&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43465304?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christian Sosa Gago&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=christiansgesp&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/HrHasnai&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60227425?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hasnain Rasheed&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HrHasnai&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-HrHasnai&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/T-Radford&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46270573?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;T-Radford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=T-Radford&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dahiyashish&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/38746838?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dahiyashish&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dahiyashish&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-dahiyashish&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Rahulsharma468&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/52377774?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RahulSharma468&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Rahulsharma468&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Rahulsharma468&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.facebook.com/Muangthai.sriracha&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13193747?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jumpod Plekhongthu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Pjumpod&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Pjumpod&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/thomasyoung-audet&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8418461?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas Young-Audet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=thomasyoung-audet&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-thomasyoung-audet&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/VinayagamBabu&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78416322?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;VinayagamBabu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=VinayagamBabu&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-VinayagamBabu&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/deniz-ko%C3%A7-780090104/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/74410580?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Deniz Ko√ß&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kocdeniz&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-kocdeniz&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.azhark.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20738252?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Azhar Khan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adminazhar&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-adminazhar&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-adminazhar&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adminazhar&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#data-adminazhar&quot; title=&quot;Data&quot;&gt;üî£&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#maintenance-adminazhar&quot; title=&quot;Maintenance&quot;&gt;üöß&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.jacobryanshort.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46907893?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jacob Short&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jrshort89&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jrshort89&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Uchimura85&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/29099918?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Uchimura85&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Uchimura85&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Uchimura85&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lnugraha&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32232486?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leo Nugraha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lnugraha&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-lnugraha&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/mujtabamehdi9/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14287838?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mujtaba Mehdi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mujjazi&quot; title=&quot;Documentation&quot;&gt;üìñ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#content-mujjazi&quot; title=&quot;Content&quot;&gt;üñã&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Jim-ds&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/63148414?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jim-ds&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Jim-ds&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Jim-ds&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kariot.me&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/35885296?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sreehari K&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kariot&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-kariot&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/flomz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24940563?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Florian Martinez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=flomz&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-flomz&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aaronwangj&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/56976471?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aaronwangj&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-aaronwangj&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/apoage&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11403095?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;apoage&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-apoage&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jasperan.life&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20752424?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ignacio Guillermo Martinez &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jasperan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jasperan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AirlineDog&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/72792044?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AirlineDog&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-AirlineDog&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AirlineDog&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://mekelilyasa.now.sh&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/55347344?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mekel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-retr00exe&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=retr00exe&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/hasan-mosharrof/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22551167?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;hmosharrof&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-hmosharrof&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hmosharrof&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/behnam-emamian/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9818491?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ben Emamian&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Behnam-Emamian&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Behnam-Emamian&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/babeshark&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78000734?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;babeshark&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=babeshark&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-babeshark&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LeonardoJaques&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28495699?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leonardo Jaques&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LeonardoJaques&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-LeonardoJaques&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://sapkarian.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51930811?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stefanos Apkarian&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Stefanosapk&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Stefanosapk&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/albayrakayhan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53487182?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ayhan Albayrak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=albayrakayhan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-albayrakayhan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/kidus-tekeste-713261a7/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18373774?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;KidusMT&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KidusMT&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-KidusMT&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/hectormarroquin20&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/73187722?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;hectormarroquin20&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hectormarroquin20&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-hectormarroquin20&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Edelweiss35&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45229901?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Edelweiss35&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Edelweiss35&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Edelweiss35&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mihai-db&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23072513?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MihaiD&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mihai-db&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mihai-db&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AnveshReddyAnnem&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/57712430?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AnveshReddyAnnem&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AnveshReddyAnnem&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-AnveshReddyAnnem&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/devhyunjae&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12890257?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hyunjae Park&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=devhyunjae&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-devhyunjae&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rajivalbino&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19399225?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rajiv Albino&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rajivalbino&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-rajivalbino&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/atishaykhare&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26501132?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Atishay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=atishaykhare&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/yusuf-naheem/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71137409?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yusuf Naheem&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Yusuf1n&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/windusayles&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/70447880?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Windu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-windusayles&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=windusayles&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Superv1sor&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71970927?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Superv1sor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Superv1sor&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Superv1sor&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SpaceMuffinn&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25411672?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Karine (:&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SpaceMuffinn&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SpaceMuffinn&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://logophilia.top/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/80007889?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eduard Pech&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SimStim&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SimStim&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jjeshwani&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53613241?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jjeshwani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jjeshwani&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jjeshwani&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nullfx&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/324971?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steve&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-nullfx&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nullfx&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aohslund&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43076374?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aleigh Ohslund&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aohslund&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/sumanabhinav&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20538074?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abhinav Suman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sumanabhi&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sumanabhi&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ehte5hamxa.web.app&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/41139956?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hamza Ehtesham Farooq&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-EhtesHamXa&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=EhtesHamXa&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/IamNotPeterPan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/80295779?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;IamNotPeterPan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=IamNotPeterPan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#financial-IamNotPeterPan&quot; title=&quot;Financial&quot;&gt;üíµ&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-IamNotPeterPan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Cetger&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31896026?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cetger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Cetger&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pkonopacki1&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17990597?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pkonopacki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-pkonopacki1&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jokerkeny&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10593391?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yang Yang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jokerkeny&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jokerkeny&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mshoaibsarwar&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/41059724?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Muhammad Shoaib Sarwar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mshoaibsarwar&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://omurilo.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1813234?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Murilo Henrique&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=omurilo&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-omurilo&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/emilianoalvz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/79676937?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;emilianoalvz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-emilianoalvz&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=emilianoalvz&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.ratepay.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34478920?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sumana Saha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sumanas27&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sumanas27&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Yurii17K&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/56108535?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yurii17K&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Yurii17K&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Yurii17K&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rpshbhandari&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/67644582?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rupesh Bhandari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-rpshbhandari&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rpshbhandari&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/salmos3718&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/80355019?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;salmos3718&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=salmos3718&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/baker-jr-john/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71906203?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Baker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-baker-jr-john&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=baker-jr-john&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SanjaySathiraju&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/80937013?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SanjaySathiraju&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SanjaySathiraju&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SanjaySathiraju&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/DKabashi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/48384060?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Donat Kabashi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-DKabashi&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://arulprasadj.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11359760?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arul Prasad J&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-arulprasadj&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=arulprasadj&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://chenpost.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8637045?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Qi Chen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-swordwielder&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=swordwielder&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/maksym-dmyterko-00598816a/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53152792?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maksym Dmyterko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-tehcGuy&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tehcGuy&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ilovepullrequests&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/79510995?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ilovepullrequests&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ilovepullrequests&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/samiramaleki&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76865385?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;samiramaleki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-samiramaleki&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=samiramaleki&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nikitamahoviya&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43717626?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;NIKITA MAHOVIYA&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nikitamahoviya&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.myappmemo.online&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8102337?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jesuisdev.Net&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-wth-mvp-s&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wth-mvp-s&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AshNaz87&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20570746?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ashraf Nazar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-AshNaz87&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://pk.linkedin.com/in/naveed99&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5438968?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Naveed Ahmad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-naveedahmad99&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Nakzz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9344972?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ajmain Naqib&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Nakzz&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nakzz&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://tingreavinash.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/39552348?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Avinash Tingre&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tingreavinash&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-tingreavinash&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nicktids&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26164799?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;nicktids&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-nicktids&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.kietdinh.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/52475783?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Keith Dinh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KeithDinh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-KeithDinh&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andreeferreira&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49101040?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andr√© Ferreira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=andreeferreira&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-andreeferreira&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/eliottkespi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/38857833?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;eliottkespi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=eliottkespi&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-eliottkespi&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/praveenpno&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11199918?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;praveenpno&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=praveenpno&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-praveenpno&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vitowidigdo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/35423212?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vitowidigdo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vitowidigdo&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-vitowidigdo&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://idevesh.in&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/63795693?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Devesh Pratap Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=idevesh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-idevesh&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/D4RIO&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14243?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dario Rodriguez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=D4RIO&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-D4RIO&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ShidiDaisy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13568966?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;charmander_didi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ShidiDaisy&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ShidiDaisy&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/PHBasin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60905941?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;PHBasin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PHBasin&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-PHBasin&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://in.linkedin.com/in/ritvik92&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9117019?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ritvik Singh Chauhan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=s3c-d43m0n&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-s3c-d43m0n&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://riyamathew-11.github.io/riyapmathew2000/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60656677?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Riya P Mathew&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RiyaMathew-11&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-RiyaMathew-11&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/stephanie-cherubin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26418542?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stephanie Cherubin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=StephanieCherubin&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-StephanieCherubin&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BenitesGui&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12888298?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;BenitesGui&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BenitesGui&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-BenitesGui&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/FarikBear&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/35699679?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;FarikBear&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=FarikBear&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-FarikBear&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/dmytrohavrilov/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25771771?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmytro Havrilov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gavrilow&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-gavrilow&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://youtube.com/right2trick&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17097240?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Parvesh Monu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Parveshdhull&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Parveshdhull&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/users/990070/dipen-panchasara&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1386724?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dipen Panchasara&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DipenPanchasara&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-DipenPanchasara&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.gudasoft.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25951?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;gudata&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-gudata&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gudata&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gawadeditor&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11796330?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;gawadeditor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gawadeditor&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-gawadeditor&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/taletski&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25644093?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kirill Taletski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-taletski&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=taletski&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://saajan.work&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2259377?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Saajan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Saajan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Saajan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.silicons.studio&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66439372?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kushagra S&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-skushagra&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=skushagra&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/oanhgle&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62354718?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oanh Le&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-oanhgle&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=oanhgle&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/fmedv&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28409749?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frane Medvidoviƒá&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-fmedv&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=fmedv&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://cixtor.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1933999?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yorman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-cixtor&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cixtor&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.billpwchan.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25129943?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bill Chan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-billpwchan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=billpwchan&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://pratiklomte1412.pythonanywhere.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66465662?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pratik Lomte&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-PratikLomte&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PratikLomte&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shenlong2010&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/57968871?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;LOC LAM&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-shenlong2010&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shenlong2010&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Tusar6701&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/64353205?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;TUSAR RANJAN MAHAPATRA&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Tusar6701&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BhargavKanjarla&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/58546127?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;BhargavKanjarla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BhargavKanjarla&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://karel.be&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10829524?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Karel De Smet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=snakehead007&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-snakehead007&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sidisan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/83332740?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sidisan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-sidisan&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ygnzayarphyo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32730630?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ygnzayarphyo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ygnzayarphyo&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ygnzayarphyo&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/svansteelandt&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34523482?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;svansteelandt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=svansteelandt&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Kebechet&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37485681?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kebechet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Kebechet&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/danie007&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50566479?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Selvan D&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-danie007&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=danie007&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.MahdiRazavi.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6397404?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mahdi Razavi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-M-Razavi&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=M-Razavi&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://the-coding-lab.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/56223902?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Niklas Tiede&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NiklasTiede&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-NiklasTiede&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/narutubaderddin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43589046?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;narutubaderddin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=narutubaderddin&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-narutubaderddin&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dylanhoodportfoliowebsite.web.app/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66035537?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dylandhood&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dylanhood&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nero002&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/38027375?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dheeraj Gupta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nero002&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.yellowduck.be&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/74731?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pieter Claerhout&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pieterclaerhout&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-pieterclaerhout&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://shivam48972.github.io/portfolio/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53830298?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shivam Agnihotri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shivam48972&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/RanjithReddy-Narra&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76155807?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RanjithReddy-Narra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RanjithReddy-Narra&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/NikkiW96&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43293583?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikita Wadhwani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-NikkiW96&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NikkiW96&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rsholokh&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/67190621?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;rsholokh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rsholokh&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-rsholokh&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://salislab.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26147572?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ayaan Hossain&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ayaanhossain&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ayaanhossain&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rajeshswarna123&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25494087?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rajesh Swarna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rajeshswarna123&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/denizetkar&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25102252?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Deniz Etkar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-denizetkar&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=denizetkar&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pro335&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78080037?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pro335&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pro335&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-pro335&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jakub-radzik.ovh&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42437524?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jakub Radzik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=radzikoska123&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-radzikoska123&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/iHamzaKhanzada&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/34980386?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hamza Khanzada&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=iHamzaKhanzada&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/arnonrdp&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26576201?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ARNON&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-arnonrdp&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/viksin19&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/52523831?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vikram Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=viksin19&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://shohruh.maxmudov@mail.ru&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/41718373?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shoxruxbek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mr-shoxruxbek&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aamita96&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31533685?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amit Khatri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aamita96&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-aamita96&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/sardarwaliullah/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62393901?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wali Ullah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SABERGLOW&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SABERGLOW&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/amit11794&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/63143298?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amit11794&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amit11794&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-amit11794&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/metis-macys-66898&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30054892?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;metis-macys-66898&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=metis-macys-66898&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-metis-macys-66898&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/faisalmaqbool94&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32066661?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Faisal Maqbool&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-faisalmaqbool94&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=faisalmaqbool94&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kneeraj.netlify.app&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/33743260?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kumar Neeraj&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KNeeraj038&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-KNeeraj038&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mauriziomarini&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16784058?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maurizio Marini&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mauriziomarini&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mauriziomarini&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SaketKothari&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/81709725?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Saket Kothari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-SaketKothari&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SaketKothari&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/szymon-zborowski&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22434824?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Szymon Zborowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-ZoltePudeleczko&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ZoltePudeleczko&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/iks3000&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5254318?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;iks3000&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-iks3000&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=iks3000&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ehcan.ir&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17311943?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ehsan Seyedi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Ehcaning&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ehcaning&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vanekbr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9375213?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vanekbr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-vanekbr&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vanekbr&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Princy04&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/47716901?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Princy_M&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Princy04&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Princy04&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.shijiezhou.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28111591?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shijie Zhou&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-shijiezhou1&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shijiezhou1&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lakshyamcs16&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32986427?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lakshyamcs16&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-lakshyamcs16&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lakshyamcs16&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://facco.tk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54476134?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Filippo Facco&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-facco1&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=facco1&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mendel5&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/60322520?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mendel5&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-mendel5&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mendel5&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dandrok&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46764643?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patryk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-dandrok&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dandrok&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/VishwaSangani&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46647788?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;VishwaSangani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-VishwaSangani&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=VishwaSangani&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://yzAlvin.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14051545?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alvin Zhao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-yzAlvin&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yzAlvin&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lazargugleta.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37106022?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lazar Gugleta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-lazargugleta&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lazargugleta&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vmicho&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66125746?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;vmicho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-vmicho&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vmicho&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/theExicuter&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45738492?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sikandar Ali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-theExicuter&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=theExicuter&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://therajababu.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18283763?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Raja Babu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-therajababu&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=therajababu&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/faizajahanzeb&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/47185146?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;faizajahanzeb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=faizajahanzeb&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Guil-AiT&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/68529315?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guil_AiT&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Guil-AiT&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/kushal-das-7337421a9/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61356005?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kushal Das&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Kushal997-das&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Kushal997-das&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Luismi74&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15695141?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luis Bonilla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-Luismi74&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Luismi74&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jovan1013&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/71839993?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jovan1013&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#design-jovan1013&quot; title=&quot;Design&quot;&gt;üé®&lt;/a&gt; &lt;a href=&quot;https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jovan1013&quot; title=&quot;Code&quot;&gt;üíª&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/Ebazhanov/linkedin-quiz-assessments&quot;&gt;&lt;img src=&quot;https://starchart.cc/Ebazhanov/linkedin-quiz-assessments.svg?sanitize=true&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>poteto/hiring-without-whiteboards</title>
      <link>https://github.com/poteto/hiring-without-whiteboards</link>
      <description>&lt;p&gt;‚≠êÔ∏è Companies that don&#39;t have a broken hiring process&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hiring Without Whiteboards&lt;/h1&gt; 
&lt;p&gt;A list of companies (or teams) that don‚Äôt do ‚Äúwhiteboard‚Äù interviews. ‚ÄúWhiteboards‚Äù is used as a metaphor, and is a &lt;em&gt;symbol&lt;/em&gt; for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad ‚Äì CS trivia questions are. Using sites like HackerRank/LeetCode &lt;em&gt;probably&lt;/em&gt; fall into a similar category.&lt;/p&gt; 
&lt;p&gt;The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) &lt;a href=&quot;https://raw.githubusercontent.com/poteto/hiring-without-whiteboards/master/RECOMMENDATIONS.md&quot;&gt;our recommendations&lt;/a&gt; for ways to conduct better interviews.&lt;/p&gt; 
&lt;h3&gt;tl;dr&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussing a real world problem (with or without whiteboard) is üëç&lt;/li&gt; 
 &lt;li&gt;Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is üëé&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dhh/status/834146806594433025?lang=en&quot;&gt;&lt;img src=&quot;https://i.imgur.com/xJV6cF4.png&quot; width=&quot;500&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to be added.&lt;/p&gt; 
&lt;h3&gt;Duds&lt;/h3&gt; 
&lt;p&gt;If you‚Äôve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to remove them from this list.&lt;/p&gt; 
&lt;h3&gt;I want to search/sort/filter/group by X!&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://airtable.com/shr3eGPDm3wGjT2gA&quot;&gt;Airtable&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the &lt;a href=&quot;https://github.com/poteto/hww-api&quot;&gt;API here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also check out &lt;a href=&quot;https://nowhiteboards.io&quot;&gt;No Whiteboards&lt;/a&gt; to search for jobs at these companies.&lt;/p&gt; 
&lt;h3&gt;Discussion and other reads&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussion 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13874026&quot;&gt;HackerNews (2017)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=23981795&quot;&gt;HackerNews (2020)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview&quot;&gt;Finding a better alternative to the whiteboard interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;A - C&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/abstract/jobs&quot;&gt;Abstract&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accenture.com/us-en/careers&quot;&gt;Accenture&lt;/a&gt; | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accredible.com/careers&quot;&gt;Accredible&lt;/a&gt; | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://acko.com&quot;&gt;Acko&lt;/a&gt; | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.acumenci.com/joinourteam&quot;&gt;Acumen&lt;/a&gt; | London, UK | Small take home test, and sit in on some sprint rituals on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adhoc.team&quot;&gt;Ad Hoc&lt;/a&gt; | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adaface.com&quot;&gt;Adaface&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adcellerant.com/career&quot;&gt;AdCellerant&lt;/a&gt; | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.addstones.com&quot;&gt;Addstones&lt;/a&gt; | Paris, FR / Singapore, SG / Bucharest, RO / London, UK | Multiple interviews, discussion of technical background and experiences. Sometimes we do a on-site unsupervised small exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adevait.com&quot;&gt;Adeva&lt;/a&gt; | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adex.network&quot;&gt;AdEx Network&lt;/a&gt; | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryadhawk.com/jobs&quot;&gt;AdHawk&lt;/a&gt; | New York, NY / Remote | Intro phone call with HR, second conversation with AdHawk engineer, and final pairing interview with AdHawk engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getadmiral.com&quot;&gt;Admiral&lt;/a&gt; | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adnymics.com&quot;&gt;Adnymics&lt;/a&gt; | Munich, DE | Take home project, then work with the team for a day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://adthena.com&quot;&gt;Adthena&lt;/a&gt; | London, UK | Takehome project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/adwyze/jobs&quot;&gt;AdWyze&lt;/a&gt; | Bangalore, India | Short takehome project + (for fulltime) onsite pairing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aerofs.com/company/careers&quot;&gt;AeroFS&lt;/a&gt; | San Francisco, CA | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ageno.pl&quot;&gt;Ageno&lt;/a&gt; | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/agilemd/jobs&quot;&gt;AgileMD&lt;/a&gt; | San Francisco, CA | Takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careersatagoda.com/departments/technology&quot;&gt;Agoda&lt;/a&gt; | Bangkok, Thailand | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aimotive.com/career/&quot;&gt;AImotive&lt;/a&gt; | Budapest, Hungary | Small take-home project, then in-person interview about technical background&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airbrake.io&quot;&gt;Airbrake&lt;/a&gt; | San Francisco, CA / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airtable.com/careers&quot;&gt;Airtable&lt;/a&gt; | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://aiwip.com&quot;&gt;Aiwip&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/meetalbert/&quot;&gt;Albert&lt;/a&gt; | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/careers&quot;&gt;Algolia&lt;/a&gt; | Paris, France / San Francisco, CA | Takehome project &amp;amp; Onsite discussions and presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.allaboutapps.at/jobs&quot;&gt;all about apps GmbH&lt;/a&gt; | Vienna, Austria | 2-phase technical discussion &amp;amp; examination with department heads and management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://allegro.pl/praca&quot;&gt;Allegro&lt;/a&gt; | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alluvium.io&quot;&gt;Alluvium&lt;/a&gt; | Brooklyn, NY | Take-home assignment, on-site review dovetailing into collaborative project planning for extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alluxi.mx&quot;&gt;Alluxi&lt;/a&gt; | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.almabase.com/careers#believe&quot;&gt;Almabase&lt;/a&gt; | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.alphasights.com&quot;&gt;AlphaSights&lt;/a&gt; | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amagi.io&quot;&gt;AMAGI&lt;/a&gt; | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/amino-payments/jobs/&quot;&gt;Amino Payments&lt;/a&gt; | Philadelphia, PA | Real-world technical design and problem discussion, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gastrograph.com&quot;&gt;Analytical Flavor Systems&lt;/a&gt; | Manhattan, New York | Code sample or take-home project, both with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.angaza.com/careers/&quot;&gt;Angaza&lt;/a&gt; | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://animech.com/join-us&quot;&gt;Animech&lt;/a&gt; | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.anyfin.com&quot;&gt;Anyfin&lt;/a&gt; | Stockholm, Sweden | Takehome project &amp;amp; Onsite discussions and presentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apolloagriculture.com&quot;&gt;Apollo Agriculture&lt;/a&gt; | Nairobi, Kenya/Remote | Takehome project or Worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.beapplied.com&quot;&gt;Applied&lt;/a&gt; | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/arachnys/jobs/220465-software-engineer&quot;&gt;Arachnys&lt;/a&gt; | London, UK | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aragon.one/#jobs&quot;&gt;Aragon One&lt;/a&gt; | Remote | Culture-first interview, take home technical challenge, technical interviews, and finally a compensated onsite trial week working on a real project that will be shipped&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://artemisag.com&quot;&gt;Artemis&lt;/a&gt; | Remote | An initial non-technical half-hour screening call, followed by 3 one-hour pairing sessions on a take-home project that you build yourself using either Ruby or JavaScript (or any Ruby or JavaScript framework). Senior candidates may also be required to review an example pull request as the final round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://articulate.com/company/careers&quot;&gt;Articulate&lt;/a&gt; | Remote | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.artsy.net/jobs#engineering&quot;&gt;Artsy&lt;/a&gt; | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.asidatascience.com/careers&quot;&gt;ASI Data Science&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.asos.com/epostings/index.cfm?fuseaction=app.jobsearch&amp;amp;company_id=30071&amp;amp;version=1&amp;amp;byBusinessUnit=5&quot;&gt;ASOS&lt;/a&gt; | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software crafstmanship principles and design decisions, in-person freestyle architecture walk-through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.ataccama.com&quot;&gt;Ataccama&lt;/a&gt; | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atech.media&quot;&gt;aTech Media&lt;/a&gt; | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atlan.com&quot;&gt;Atlan&lt;/a&gt; | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you‚Äôre applying to. Then as the final step, a call with one of the founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auraframes.com/jobs?gh_src=2ef5cfa32&quot;&gt;Aura Frames&lt;/a&gt; | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aurorasolar.com/careers&quot;&gt;Aurora Solar&lt;/a&gt; | San Francisco, CA | Our process: 1) Initial phone call 2) 1 hour take home project in CoderPad along with a few essay questions relating to JavaScript, testing, etc. 3) Remote pairing session solving a problem similar to day to day work. 4) In-person interview with additional pairing exercise done on a laptop as well as culture interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/how-we-hire-engineers&quot;&gt;Auth0&lt;/a&gt; | Bellevue, WA / Buenos Aires, Argentina / Remote | Series of interviews, go over technical background and past experiences, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.auto1-group.com/jobs&quot;&gt;Auto1&lt;/a&gt; | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://automattic.com/work-with-us&quot;&gt;Automattic&lt;/a&gt; | Remote | short take-home real-world task, then a few weeks-long real-world, part-time, and paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AutoScout24/hiring&quot;&gt;AutoScout24&lt;/a&gt; | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://avant.com/jobs&quot;&gt;Avant&lt;/a&gt; | Chicago, IL | Pair programming interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avarteq.com/career&quot;&gt;Avarteq GmbH&lt;/a&gt; | Berlin, Germany / Saarbr√ºcken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avocarrot.com/company&quot;&gt;Avocarrot&lt;/a&gt; | Athens, Greece | on-site real world problem discussion and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axelerant.com/careers&quot;&gt;Axelerant&lt;/a&gt; | Remote | Take-home project, interviews with hr and engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://axiacore.com&quot;&gt;Axiacore&lt;/a&gt; | Bogota, Colombia | We talk about on how is your process when solving problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axios.com/careers&quot;&gt;Axios&lt;/a&gt; | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/b12#.WMlLfRIrJTa&quot;&gt;B12&lt;/a&gt; | New York, NY | Take-home exercises and pair-programming with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://somos.b2wdigital.com/bit&quot;&gt;B2W Digital&lt;/a&gt; | Rio de Janeiro, Brazil; S√£o Paulo, Brazil | Time-boxed coding exercise at home, on-site pair programming with engineers and live software architecture challenges based on real situations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Babylonpartners/iOS-Interview-Demo&quot;&gt;Babylon Health iOS Team&lt;/a&gt; | London, UK | Take-home project, on-site presentation and discussion, design and product interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://workatbackbase.com&quot;&gt;Backbase&lt;/a&gt; | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/backbone-plm/jobs&quot;&gt;Backbone&lt;/a&gt; | Boulder, CO | Initial phone screening to determine general fit, take-home project, finally an on-site where we discuss your take-home project and you meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.badi.com&quot;&gt;Badi&lt;/a&gt; | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://team.badoo.com/jobs&quot;&gt;Badoo&lt;/a&gt; | London, UK | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career012.successfactors.eu/sfcareer/jobreqcareer?jobId=46145&amp;amp;company=BAE&quot;&gt;BAE Systems Applied Intelligence&lt;/a&gt; | London, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bakkenbaeck.com/jobs&quot;&gt;Bakken &amp;amp; B√¶ck&lt;/a&gt; | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.balabit.com&quot;&gt;Balabit&lt;/a&gt; | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.barracuda.com/company/careers&quot;&gt;Barracuda View Team&lt;/a&gt; | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basecamp.com/about/jobs&quot;&gt;Basecamp&lt;/a&gt; | Chicago, IL / Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bcredi.gupy.io&quot;&gt;Bcredi&lt;/a&gt; | Curitiba, Brazil | Phone conversations about the company and the opening; remote and on-site team interviews (tech-focused); take-home programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/beam&quot;&gt;Beam Dental&lt;/a&gt; | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://belka.us/lavora-con-no&quot;&gt;Belka&lt;/a&gt; | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bemind.recruitee.com&quot;&gt;Bemind Interactive&lt;/a&gt; | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp;amp; pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bendyworks.com/careers&quot;&gt;Bendyworks&lt;/a&gt; | Madison, WI | Interviews and pair programming on personal projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterment.com/careers&quot;&gt;Betterment&lt;/a&gt; | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterpt.com&quot;&gt;BetterPT&lt;/a&gt; | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and ‚Äúmeet the team‚Äù.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/about-us/careers&quot;&gt;Big Nerd Ranch&lt;/a&gt; | Atlanta, GA &amp;amp; Remote | Interviews and pair programming on an internal project or problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigabid.com/careers&quot;&gt;BigaBid&lt;/a&gt; | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigbinary.com/jobs&quot;&gt;BigBinary&lt;/a&gt; | Remote | Phone discussion with a developer and the CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bioconnect.com/company/careers&quot;&gt;BioConnect&lt;/a&gt; | Toronto, Canada | Take-home assignment &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitexpert.de/karriere&quot;&gt;bitExpert AG&lt;/a&gt; | Mannheim, Germany | Interview with experience based technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitpanda.com/en/career&quot;&gt;Bitpanda&lt;/a&gt; | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitsoflove.be/careers&quot;&gt;Bits of Love&lt;/a&gt; | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitso.com/jobs&quot;&gt;Bitso&lt;/a&gt; | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blackdotsolutions.com&quot;&gt;Blackdot Solutions&lt;/a&gt; | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://bleacherreport.com&quot;&gt;Bleacher Report&lt;/a&gt; | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blendle.homerun.co/?lang=en&quot;&gt;Blendle&lt;/a&gt; | Utrecht, The Netherlands | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blogfoster/join-the-engineering-team&quot;&gt;blogfoster&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bloomworks.digital/software-engineer/&quot;&gt;Bloom Works&lt;/a&gt; | Remote | Discussion, pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluebottlecoffee.com/careers&quot;&gt;Blue Bottle Coffee&lt;/a&gt; | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bluesoft.com.br&quot;&gt;Bluesoft&lt;/a&gt; | S√£o Paulo, Brazil | Takehome project and an interview to evaluate the candidate‚Äôs previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/careers&quot;&gt;Bocoup&lt;/a&gt; | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bonus.ly/careers&quot;&gt;Bonusly&lt;/a&gt; | Boulder, CO | Values &amp;amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookingsync.com/en/jobs&quot;&gt;BookingSync&lt;/a&gt; | Remote | Small takehome project, interviews over skype with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://boomtownroi.com&quot;&gt;BoomTown&lt;/a&gt; | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://botika.ai&quot;&gt;Botika&lt;/a&gt; | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bouvet.no&quot;&gt;Bouvet&lt;/a&gt; | Bergen, Norway | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brainn.co&quot;&gt;brainn.co&lt;/a&gt; | S√£o Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brainstation-23.com&quot;&gt;BrainStation-23&lt;/a&gt; | Dhaka, BD | A practical project followed by series of in-person interview sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://breather.com/jobs&quot;&gt;Breather&lt;/a&gt; | Montreal, Canada | Series of interviews including a conversation about the candidate‚Äôs experience and a technical discussion involving real world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.brightbytes.net/careers&quot;&gt;BrightBytes&lt;/a&gt; | San Francisco, CA | Time-boxed coding exercise at home and on-site pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.brighthr.com/careers&quot;&gt;BrightHR&lt;/a&gt; | Manchester, UK | Telephone conversation, coding exercise at home, on-site pairing with a cultural interview, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/brightwheel/jobs&quot;&gt;brightwheel&lt;/a&gt; | San Francisco, CA | Take home exercise, and systems design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.broadinstitute.org/data-sciences-platform&quot;&gt;Broad Institute‚Äôs Data Sciences Platform&lt;/a&gt; | Cambridge, MA | Phone screen, small take home project, both a technical and non-technical discussion panel, and a panel following up on the take home project walking through the solution and making a modification to the original code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/careers&quot;&gt;BrowserStack&lt;/a&gt; | Mumbai, India; Dublin, Ireland | Initial phone screen with semi-technical questions, two 2-hour assignments based on real problems solved in company (allowed to lookup internet), final interview with EMs/Director.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bubbl.in/about&quot;&gt;Bubblin Superbooks&lt;/a&gt; | Remote | View code, projects, libraries or any other open source story that you have been a part of, a small take-home project with real code occasionally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buffer.com/journey&quot;&gt;Buffer&lt;/a&gt; | Remote | Interviews over video call, code walkthrough of real code focussing on decisions and reasoning, then a 45 day full time, fully paid contract project working on production code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugcrowd.com/about/careers/&quot;&gt;Bugcrowd&lt;/a&gt; | San Francisco, CA / Sydney, NSW | Take home exercise, half-day onsite walking through code, and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.buhlergroup.com&quot;&gt;Buhler Group&lt;/a&gt; | Prague, CZ | Interview with a couple of technical questions. No task needed. Depending on the team there is another round with the guys in the HQ via skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildkite.com/home&quot;&gt;Buildkite&lt;/a&gt; | Remote | No CV required. Anonymized writing assessments. Video chat with founder and future team member about you, the job, and the company. Last video chat is a pair programming for technical roles or more in-depth chat for non-technical roles. Offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bulb.co.uk&quot;&gt;Bulb&lt;/a&gt; | London, UK | Phone screening, followed by a 2-4 hours take home task. If successful, an interview designing a real-world system with two engineers. Following that, two spoken interview stages: the first more behavioural, then leadership &amp;amp; culture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busbud.com/en/careers&quot;&gt;Busbud&lt;/a&gt; | Montreal, Canada | Phone screening, followed by a 2-4 hours take home assignment. If the challenge is a success, on-site or remote interview with team members, including someone who reviewed it, to talk about it and potential next steps if the challenge was a real life task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bustle.com/labs&quot;&gt;Bustle&lt;/a&gt; | New York City, Ny / Remote | Half day pair programming on a task for production or one of our Open Source projects. We‚Äôll also buy you lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busuu.com/jobs&quot;&gt;busuu&lt;/a&gt; | London, UK | Video call to show real code as first stage. In office pair programming, white board real world problem that we‚Äôve encountered before, and history/experience discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buttercms.com&quot;&gt;ButterCMS&lt;/a&gt; | Chicago, IL; Remote | Take home exercise and half-day of pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybox.com/company/careers/&quot;&gt;ByBox&lt;/a&gt; | Remote | Phone interview followed by interview with devs (ideally in person but sometimes Skype) covering technical experience and coding exercise with real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://byu.edu&quot;&gt;BYU OIT&lt;/a&gt; | Provo, UT | Take home programming challenge. Discussion in the interview about solution, among other normal hiring questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.caci.com/ListJobs/All/Search/location/rome/state/ny/country/us&quot;&gt;CACI Rome&lt;/a&gt; | Rome, NY; Remote | Phone interview followed by in-person or Skype screen sharing interview with a coding exercise in either Java, web (Node.js + frontend), or both. Interview format is exclusive to the Rome, NY office and may not be shared by other regional CACI offices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cakesolutions.net/careers&quot;&gt;Cake Solutions&lt;/a&gt; | Manchester, UK; London, UK; New York, NY | Skype / Hangouts / phone call to explain the technical background, current position and set expectations about the salary, relocation, etc; if all good, what to expect next. Then take-home exercise for roughly 4 hours to demonstrate good thinking and ability to pick up new things, explain &amp;amp; document the solution, finishing with pair programming with senior developers (remote or in person); use the code as a talking point around the more difficult things after getting through the simple starter tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/canonical&quot;&gt;Canonical&lt;/a&gt; | London, UK; Austin, TX; Boston, MA; Beijing, China; Shanghai, China; Taipei, Taiwan; Tokyo, Japan; Remote | Review your open source contributions at shortlist stage. 4x60m interviews over Hangouts, each of which is carried out blind (none of the interviewers talk to each other until the final review). The company is fully remote, so there is no on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uk.capgemini.com&quot;&gt;Capgemini UK Java Team&lt;/a&gt; | London, UK; Woking, UK; Bristol, UK; Cardiff, Wales; Birmingham, UK; Manchester, UK; Leeds, UK; Rotherham, UK; Liverpool, UK; Newcastle, UK; Edinburgh, Scotland; Glasgow, Scotland | Technical telephone interview (30 minutes), take-home non-CompSci coding exercise (3-4 hours), face-to-face role-played consulting scenario involving a solution architecture and a delivery plan (two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.caravelo.com/softdev&quot;&gt;Caravelo&lt;/a&gt; | Barcelona, Spain | Take home project, then technical discussion about the code in-person or Skype and hang out with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cartegraph.com/company/careers/&quot;&gt;Cartegraph&lt;/a&gt; | Dubuque, IA / Remote | Phone screen, hiring manager interview, small take-home coding project, and team code review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.carto.com/careers/&quot;&gt;CARTO&lt;/a&gt; | Madrid, Spain | Phone screen, take-home project, team code review/interview, hiring manager interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://casetext.com/jobs&quot;&gt;Casetext&lt;/a&gt; | San Francisco, CA | Submit code sample for review/discussion, contract for one full day (paid)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cashlink.de&quot;&gt;CASHLINK&lt;/a&gt; | Frankfurt, Germany | Skype/phone interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.causeway.com/content/opportunity&quot;&gt;Causeway&lt;/a&gt; | United Kingdom, India | Skype or Telephonic discussion on approaches and experience in regards to solve projects related work, then face to face round to write small solutions to common problems in related field.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centroida.co/contact.html&quot;&gt;Centroida&lt;/a&gt; | Sofia, Bulgaria | Series of interviews, pair programming and take-home projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://chainreaction.io&quot;&gt;Chain.Reaction&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chamatheapp.bamboohr.com/jobs/&quot;&gt;Chama The App&lt;/a&gt; | Amsterdam, The Netherlands | Cultural fit interview, home test, technical interview with the team and then interview with the leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chargify.com/jobs&quot;&gt;Chargify&lt;/a&gt; | San Antonio, TX / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://checkout51.com/jobs&quot;&gt;Checkout 51&lt;/a&gt; | Toronto, Canada | Phone conversation (15-20 minutes) followed by on-site pair programming and discussion focused on understanding decisions made during on-site work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cheerfulgiving.com&quot;&gt;Cheerful&lt;/a&gt; | Denver, CO / Remote | Take home small project which tests the adaptability of the developer with the stack used by the company, followed by a feedback interview (15 min) then a tryout offer (2 weeks / 1 month) or a permanent offer is made depending on the project results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chef.io/careers&quot;&gt;Chef&lt;/a&gt; | Seattle, WA / Remote | Take home small project testing the ability to implement real world problems. Phone/Zoom interviews discussing the said project. Checking if the candidate would be a good cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ctic-inc.com/careers/&quot;&gt;Chesapeake Technology&lt;/a&gt; | Denver, CO / Santa Barbara, CA / Camarillo, CA / Dulles, VA / California, MD / Remote | Phone screen (30 minutes), take home at leisure question based on real development followed by in person review of solution and general technical questions with actual team and opportunity for you to ask questions and provide feedback ( 2-3 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, followed by on-site interview that includes pair programming on actual CircleCI bugs/feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boston.gov/analytics&quot;&gt;City of Boston‚Äôs Analytics Team&lt;/a&gt; | Boston, MA | Take-home project and in-person or phone/Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beta.phila.gov/departments/office-of-open-data-and-digital-transformation/jobs&quot;&gt;City of Philadelphia‚Äôs Office of Open Data &amp;amp; Digital Transformation&lt;/a&gt; | Philadelphia, PA | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.civisanalytics.com/careers&quot;&gt;Civis Analytics&lt;/a&gt; | Chicago, IL | Take-home project and discussion via Skype, followed by pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.cj.com/jobs/category/engineering/&quot;&gt;CJ Affiliate&lt;/a&gt; | Los Angeles, CA &amp;amp; Westlake Village, CA | Phone coding design exercise (no algorithms), followed by an on-site final interview that includes pair programming on a realistic object-oriented design problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clara.com/careers&quot;&gt;Clara Lending&lt;/a&gt; | San Francisco, CA | Phone conversation around technical background and experience, followed by take-home project, pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.clause.io/tag/careers/&quot;&gt;Clause&lt;/a&gt; | Remote | Non-technical interview with Director of Engineering and a member of the engineering team, followed by a technical interview with a cross-section of the team focusing on solution design / architecture and pairing, and an optional chat with the CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/clerkie/jobs&quot;&gt;Clerkie&lt;/a&gt; | San Francisco, CA | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clickmagick.com&quot;&gt;ClickMagick&lt;/a&gt; | Austin, TX / Remote | Phone conversations and examples of Free Software/Open Source work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clippings.com&quot;&gt;Clippings&lt;/a&gt; | Sofia, Bulgaria | Video screening first, then send us code they‚Äôve recently wrote, then technical interview. We could ask questions about the code they wrote at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cwconsult.dk&quot;&gt;Clockwork Consulting&lt;/a&gt; | Copenhagen, Denmark | Interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cloudistics.com/careers&quot;&gt;Cloudistics&lt;/a&gt; | Reston, VA | Multiple interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clubhouse.io/hiring&quot;&gt;Clubhouse&lt;/a&gt; | New York, NY &amp;amp; Remote | Phone interview, followed by onsite discussions and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code-orange.nl&quot;&gt;Code Orange&lt;/a&gt; | Amsterdam, Netherlands | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cogent.co.jp&quot;&gt;Cogent Labs&lt;/a&gt; | Tokyo, Japan | On-site or video call conversation around technical background and experience, followed by take-home project that resembles a problem Cogent Labs solves for. This project will serve as the base of discussion with the developers for the second interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cognitect.com/jobs&quot;&gt;Cognitect, Inc.&lt;/a&gt; | Remote | Phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cognitran.com/employment-opportunities&quot;&gt;Cognitran&lt;/a&gt; | Essex, UK / Szczecin, Poland / Detroit, MI | Skype/phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collabora.com/careers.html&quot;&gt;Collabora&lt;/a&gt; | Cambridge, UK / Montreal, Canada / Remote | On-site or video interview, discussion of technical experience and sometimes approach for tackling a hypothetical problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colonist.io/contribute.html&quot;&gt;Colonist&lt;/a&gt; | Remote | Call-&amp;gt;Solve real product coding assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://combyne.com&quot;&gt;combyne&lt;/a&gt; | Remote / Munich, Germany | Short online technical test, 4-hour take-home project, and culture fit interview with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.compeon.de/karriere&quot;&gt;COMPEON&lt;/a&gt; | Duesseldorf, Germany | Phone interview, followed by onsite discussions and pair programming with our developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://about.cph.org/careers.html&quot;&gt;Concordia Publishing House&lt;/a&gt; | St Louis, MO | Take-home project followed by discussion of it on-site with future teammates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://condenastinternational.com&quot;&gt;Cond√© Nast International&lt;/a&gt; | London, UK | Phone interview, 2 hour take-home project, and on-site with discussion of project, experience, and general technical questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://contactlab.com/en/careers&quot;&gt;Contactlab&lt;/a&gt; | Milan, Italy | Recruiter interview, tech interview (technical background and experiences), both on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://container-solutions.com&quot;&gt;Container Solutions&lt;/a&gt; | Remote; Berlin, Germany; Amsterdam, Netherlands; London, UK | Unbiased process in a nutshell: chat with one of our recruiters, skills assessment and tech assessment, personality assessment which is followed by an interview with one of our occupational psychologists to discuss results. At the end a panel interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentful.com/careers&quot;&gt;Contentful&lt;/a&gt; | Berlin, Germany &amp;amp; SF, USA | Multiple interviews, discussion of technical background &amp;amp; live coding challenge (you can use the internet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentsquare.com/careers&quot;&gt;ContentSquare&lt;/a&gt; | Paris, France | Real-world challenges with open discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.convious.com&quot;&gt;Convious&lt;/a&gt; | Vilnius, Lithuania | Intro interview (video call), followed by a homework assignment, followed by a bit more technical interview discussing homework, technical background, etc. Homework feedback is always provided.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cookpad.com/us&quot;&gt;Cookpad&lt;/a&gt; | Tokyo, Japan; Bristol, UK | Interviews, discussion of technical background and experiences, remotely pair with devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coorpacademy.com&quot;&gt;Coorp Academy&lt;/a&gt; | Paris, France | Technical interview as an open discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coverhound.com&quot;&gt;CoverHound, Inc.&lt;/a&gt; | San Francisco, CA | Open technical discussion, short on-site coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coyoapp.com&quot;&gt;COYO&lt;/a&gt; | Hamburg, Germany | Exemplary take home project in different front- and backend flavors, followed by tech interview &amp;amp; meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://creditkudos.com/jobs&quot;&gt;Credit Kudos&lt;/a&gt; | London, UK | Take-home project and pair programming via Skype or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossbrowsertesting.com&quot;&gt;CrossBrowserTesting&lt;/a&gt; | Memphis, TN | Take home project that resembles a problem support engineers deal with on a daily basis. On-Site interviews in a comfortable environement with a focus on hiring talented people vs exact skill-sets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdstrike.wd5.myworkdayjobs.com/crowdstrikecareers&quot;&gt;CrowdStrike&lt;/a&gt; | Remote | Multiple interviews onsite or remote as appropriate followed by small take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crownstone.rocks/jobs&quot;&gt;Crownstone&lt;/a&gt; | Rotterdam, Netherlands | Technical interaction using previously created Github projects, followed by in-person interview with a focus on someone‚Äôs professional ambition in the short and long term.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cube19.com/work-with-us/&quot;&gt;cube19&lt;/a&gt; | London, UK | Take-home project, then an on-site discussion about the code and previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cultivatehq.com&quot;&gt;Cultivate&lt;/a&gt; | Edinburgh, UK | 30 minute pair-programming screening interview on a simple exercise (remote or in-person). Half day pair programming, with 3 or 4 different team members plus informal chat, typically on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.culturefoundry.com&quot;&gt;Culture Foundry&lt;/a&gt; | Austin, TX | Paid take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.currencytransfer.com&quot;&gt;CurrencyTransfer&lt;/a&gt; | London, UK &amp;amp; Remote | Take-home project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;D - F&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://darksky.net/jobs&quot;&gt;Dark Sky&lt;/a&gt; | Cambridge, MA | Phone interviews and a very short, real paid project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datatheorem.com&quot;&gt;Data Theorem&lt;/a&gt; | Palo Alto, CA; Paris, Fr; Bangladesh, India | Phone interview, then a take home project and finally in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://DataChef.co&quot;&gt;DataChef&lt;/a&gt; | Amsterdam, Netherlands | Video call (technical questions about candidate‚Äôs achievements), take home assignment, cultural fit zoom or face to face with rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.datafleets.com/team&quot;&gt;DataFleets&lt;/a&gt; | San Francisco, CA; New York, NYC; London, UK; Remote | Interviews over video call, remote pair programmming, cultural/team fit with founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datalogue.github.io/recruiting&quot;&gt;Datalogue&lt;/a&gt; | Montreal, Canada | We Ask candidates to contribute meaningfully to an Open source project that reflects the stack they will be working with and send us a link to the PR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datamade.us&quot;&gt;DataMade&lt;/a&gt; | Chicago, IL | After submitting an application, selected applicants are moved on to a round of interviews and will be asked to submit a piece of code for review. If you don‚Äôt have any code you can share, DataMade will provide a short exercise for you to complete. An in-person (or remote) interview will be scheduled to go over your background, what draws you to DataMade, and your code sample.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datascopeanalytics.com/careers/&quot;&gt;Datascope&lt;/a&gt; | Chicago, IL | Take home exploratory data project with public data, discussion about the project via video chat, and in-person office visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datlinq.com/en/vacancies&quot;&gt;Datlinq&lt;/a&gt; | Rotterdam, Netherlands | Take-home project based on actual work on data done by the team and in-person or Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dealtap.ca&quot;&gt;DealTap&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team, and optional pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.defmethod.com&quot;&gt;Def Method&lt;/a&gt; | NYC, NY | Take home test, pair programming with dev on test and client work, receive offer same day as pairing interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliveroo.co.uk/careers&quot;&gt;Deliveroo&lt;/a&gt; | London, UK &amp;amp; Remote | Short take-home project and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliverycenter.gupy.io&quot;&gt;Delivery Center&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Interviews with the team about the company and the opening, with a short take-home project using their main stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://carreiras.deliverymuch.com.br&quot;&gt;Delivery Much&lt;/a&gt; | Florian√≥polis, Brazil &amp;amp; Remote | On-site (and/or remote) interviews about the company and the opening, with a short take-home project for leveling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/dentolo&quot;&gt;Dentolo&lt;/a&gt; | Berlin, Germany | Phone interview with the HR department, take-home project and technical interview to discuss your skill set + general questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.deskbookers.com/en-gb/jobs&quot;&gt;Deskbookers&lt;/a&gt; | Amsterdam, Netherlands | Phone screen, take-home project, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.desmart.com&quot;&gt;DeSmart&lt;/a&gt; | Gdynia, Poland | Technical interview, take-home project and talk about your experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://despark.com&quot;&gt;Despark&lt;/a&gt; | Sofia, Bulgaria &amp;amp; Remote | Culture add interview, sample code review and paid pair programming with team member or take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.detroitlabs.com/careers&quot;&gt;Detroit Labs&lt;/a&gt; | Detroit, MI | Our technical interview starts with a take-home assignment that we will look at during the interview. You‚Äôll walk us though your thought process, add functionality if applicable to the interview, and talk about your experience. We believe that showing us your work in a practical setting is more telling of your abilities and what you will bring to the table, than writing code on a whiteboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.dev.to&quot;&gt;DEV&lt;/a&gt; | Remote | Written application, job-specific questionaire and/or task, team interviews (total interview time under two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developmentseed.org/careers/jobs/&quot;&gt;Development Seed&lt;/a&gt; | Remote / Washington, DC / Lisbon, Portugal / Ayacucho, Peru | Introductory discussion; in-depth technical video interview (no whiteboard, and no live coding); mission &amp;amp; values video interview; onsite (or remote) 1 or 2 days paid working ‚Äúsprint‚Äù in the context of a real project, culminating in a brief presentation of completed sprint work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devfolio.co&quot;&gt;Devfolio&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devsdata.com&quot;&gt;DevsData&lt;/a&gt; | New York, NY; San Francisco, CA; Warsaw, Poland; Frankfurt, Germany; Remote | Video interview, 3-hours take-home assignment, technical video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dg-i.net&quot;&gt;DG-i&lt;/a&gt; | Cologne, Germany | Take-home project and/or discussion on-site about past experiences&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dice.se&quot;&gt;DICE&lt;/a&gt; | Stockholm, Sweden | Take-home project and code review at the on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.di.fm/jobs&quot;&gt;Digitally Imported&lt;/a&gt; | Denver, Colorado &amp;amp; Remote | Video meetings on past experience and high level tech questions, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dixa.com/careers&quot;&gt;Dixa&lt;/a&gt; | Copenhagen, Denmark | Initial phone call. Take-home programming task, then on-site discussion followed by online personality test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.doctolib.fr/jobs&quot;&gt;Doctolib&lt;/a&gt; | Paris, France; Berlin, Germany | Take-home project, on-site interview and work half a day with one of our feature team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doist.com&quot;&gt;Doist&lt;/a&gt; | Remote | Personal interviews with part of the team and a takehome programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dollarshaveclub.com&quot;&gt;Dollar Shave Club&lt;/a&gt; | Venice, California | Phone interview, take-home projects, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://door2door.io&quot;&gt;door2door&lt;/a&gt; | Berlin, Germany | Take home challenge + on-site interview + trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doordash.com/careers&quot;&gt;DoorDash :runner::dash:&lt;/a&gt; | San Francisco, CA | Take home project + an on-site interview building off the project!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1fC_-liTPpYQOoE_5iKj0O3AwSdPggQGnOsjUKahfbkQ/edit?usp=sharing&quot;&gt;Draft Fantasy&lt;/a&gt; | Tel Aviv, Israel | Talk about past experience and what the developer has actually built as well as pair programming or a programming exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draftbit.com&quot;&gt;Draftbit&lt;/a&gt; | Remote | Phone screening, take-home assignment based on an old project; pair programming and interview with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drawbotics.com/en/join-us&quot;&gt;Drawbotics&lt;/a&gt; | Brussels, Belgium | Take-home project, bootcamp on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drchrono.com/careers&quot;&gt;drchrono&lt;/a&gt; | Mountain View, CA | Hackerrank test (but not CS trivia, it‚Äôs real product problems) &amp;amp; on-site/take-home project w/ presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivy.com&quot;&gt;Drivy&lt;/a&gt; | Paris, France | Phone screening followed by a take-home assignment, ‚ÄúResume‚Äù interview, technical interview, product interview, interview with another team, finalizing the hire&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drizly.com&quot;&gt;Drizly&lt;/a&gt; | Remote | Phone screen, Blind take-home assignment, hiring manager interview, technical code pair interview, panel interview with sales, product, engineering and other stake holders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dronedeploy.com/careers.html&quot;&gt;DroneDeploy&lt;/a&gt; | San Francisco, CA | Pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.droneseed.co/jobs/&quot;&gt;DroneSeed&lt;/a&gt; | Seattle, WA | Take home assignment of a real problem we‚Äôve worked on, group code review in subsequent interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.dubizzle.com/uae/job-vacancies&quot;&gt;dubizzle&lt;/a&gt; | Dubai, UAE | Take home assignment, general technical questions, pair programming with engineers or tech leads&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://duckduckgo.com/hiring&quot;&gt;DuckDuckGo&lt;/a&gt; | Remote | Up to two paid projects and video call interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-accent.com&quot;&gt;E-accent&lt;/a&gt; | Hilversum, Netherlands; Remote | Skype conversation, take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://easytaxi.com.br&quot;&gt;Easy Taxi&lt;/a&gt; | S√£o Paulo, Brazil | Take-home project, interview to evaluate the candidate‚Äôs previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eaze.com/careers&quot;&gt;Eaze&lt;/a&gt; | San Francisco, CA | Take home project, on-site interview building off of the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ebayinc.com/join-our-team/start-your-search/find-jobs-by-location/detail/germany&quot;&gt;eBay Kleinanzeigen&lt;/a&gt; | Berlin, Germany | 45 mins technical phone interview, take-home project/review, on-site interview including pair programming with team lead and agile interview with product manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ecaresoft.com&quot;&gt;Ecaresoft&lt;/a&gt; | Monterrey, Mexico | Cultural fit session and Predictive Index test with recruiter, best piece of code review and technical interview with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://echobind.com/culture&quot;&gt;Echobind&lt;/a&gt; | Boston, MA; Remote | Meet the entire team, share examples of previous work and pair with one team member&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.edenspiekermann.com&quot;&gt;Edenspiekermann&lt;/a&gt; | Amsterdam, Netherlands / Berlin, Germany / Los Angeles, CA / San Francisco, CA / Singapore, Singapore | On-site chat about skills and past experiences, review some code samples or a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ef.com&quot;&gt;EF Education First&lt;/a&gt; | London, UK; Boston, MA | Short phone interview, take-home project, discussion of project and real world engineering problems, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eidu.com&quot;&gt;Eidu&lt;/a&gt; | Berlin, Germany | Take-home project, discussion of results with team, and test days with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elnino.tech&quot;&gt;El Ni√±o&lt;/a&gt; | Enschede, The Netherlands; The Hague, The Netherlands | On-site chat about the candidate experience and the company followed by a trial day relevant for the role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.elpassion.com&quot;&gt;El Passion&lt;/a&gt; | Warsaw, Poland | Take-home project, interview to 1) discuss delivered solution and 2) previous projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.electricpulp.com&quot;&gt;Electric Pulp&lt;/a&gt; | Sioux Falls, SD, USA | Phone interviews with leadership team and technical team leads. We are a tight knit team, so emphasis on a great personal fit is as important as technical prowess.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elements.nl/careers&quot;&gt;Elements Interactive&lt;/a&gt; | Almere, The Netherlands &amp;amp; Barcelona, Spain | Take-home project &amp;amp; discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ellucian.com/About-Us/Careers/&quot;&gt;Ellucian&lt;/a&gt; | Reston, VA, USA | Discussion of real world problems (from resume, if possible)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elmah.io&quot;&gt;elmah.io&lt;/a&gt; | Aarhus, Denmark / Remote | Discussion about code and looking at hobby projects (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elvie.com&quot;&gt;Elvie&lt;/a&gt; | London, England | Discussing real code, pairing and a paid day to see how you work with the team. No coding for free or time-restricted take-home projects, code challenges or abstract algorithm tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://goo.gl/N7SMKl&quot;&gt;eMarketer&lt;/a&gt; | New York, NY | Short phone interview, then come in and meet the team, check out our space, and have a discussion with team members about real-world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emarsys.com&quot;&gt;Emarsys&lt;/a&gt; | Budapest, Hungary | Take-home project (small, 1-2 days to solve), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emergentsoftware.net&quot;&gt;Emergent Software&lt;/a&gt; | Minneapolis, MN | Phone intro, discuss recent project, short take home project (4h max) with code review, real world open ended questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.endava.com/en/Careers&quot;&gt;Endava&lt;/a&gt; | Belgrade, Serbia; Bucharest, Romania; Chisinau, Moldova; Cluj-Napoca, Romania; Iasi, Romania; Pitesti, Romania; Skopje, Macedonia; Sofia, Bulgaria; Frankfurt, Germany; Glasgow, Scotland; Hilversum, Netherlands; London, UK; Oxford, UK; Bogota, Colombia; Atlanta, GA; New Jersey, NJ; New York, NY | On-site discussion about previous experience and technical questions about the target technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.engelvoelkers.com/en/tech/&quot;&gt;Engel &amp;amp; V√∂lkers Technology&lt;/a&gt; | Hamburg, Germany | Remote technical interview with an Engineering Manager, followed by a practical coding challenge implemented in 5 hours, ending with a technical discussion with the team on the produced code either remotely or on-site based on geographical practicality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enhancv.com/about.html&quot;&gt;Enhancv&lt;/a&gt; | Sofia, Bulgaria | Talk is cheap, show us your code: github profile or other project examples. Explain them in person / remotely. Discuss habits and interests to see if we have a culture fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enigma.com&quot;&gt;Enigma&lt;/a&gt; | New York, NY | 2-part takehome project, followed by a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enki.com&quot;&gt;Enki&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ento.com/blog/ento-interview-process-101&quot;&gt;Ento.com&lt;/a&gt; | Melbourne, Australia | On-site interview to talk about your experiences and what you‚Äôre looking for in your next role, followed by a take-home practical test relevant to the work you‚Äôll be undertaking at Ento.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.equalexperts.com&quot;&gt;Equal Experts&lt;/a&gt; | London, UK; Manchester, UK; New York, NY; Pune, India; Lisbon, Portugal; Calgary, Canada | Fizzbuzz test done at home followed by Pair Programming session at office and finally face to face technical and attitude interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ericsson.com&quot;&gt;Ericsson&lt;/a&gt; | Dublin, Ireland | Skype/phone interview followed by Face 2 Face interview, discussions and architecture questions followed by final small project on a problem similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://esharesinc.com/jobs&quot;&gt;eShares, Inc&lt;/a&gt; | San Francisco, CA; Palo Alto, CA; Seattle, WA; Rio de Janeiro, Brazil; London, UK; New York, NY | Phone call, practical technical screen, on site to meet the team &amp;amp; explore the company&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://espeo.eu/career&quot;&gt;Espeo Software&lt;/a&gt; | Pozna≈Ñ, Poland | 30 min HR interview, 1 hour technical interview, 1 hour soft skills interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://etermax.com/en/careers/&quot;&gt;Etermax&lt;/a&gt; | Buenos Aires, Argentina | Skype/phone screen with two engineers &amp;amp; HR, 30 min HR onsite interview, 2 hour onsite pair programming session (with focus on testing and design) with feedback&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etixeverywhere.com/en/job-offers&quot;&gt;Etix Everywhere&lt;/a&gt; | Luxembourg City, Luxembourg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://euranova.eu&quot;&gt;EURA NOVA&lt;/a&gt; | Mont-Saint-Guibert, Belgium; Marseille, France; Tunis, Tunisia | attitude interview, unpaid take-home project, technical discussion with 1 or 2 technical employees (remote or face 2 face), face 2 face discussion with HR, partner, and technical staff to have a foretaste of the collaboration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.europaymentgroup.com&quot;&gt;Euro Payment Group&lt;/a&gt; | Frankfurt, Germany | Take-home project followed by face to face interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exoscale.ch&quot;&gt;Exoscale&lt;/a&gt; | Bern, Switzerland | Take-home project. Discussion and presentation. Then entire team meet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.extend.com/careers&quot;&gt;Extend&lt;/a&gt; | San Francisco, CA; Dallas, TX; Remote | Phone call, a take home project similar to making a PR at work, then a meet &amp;amp; greet with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fdex.com.br&quot;&gt;F(x)&lt;/a&gt; | S√£o Paulo, Brazil | Skype interview, Take-home project and onsite interview to evaluate the candidate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/careers/jobs&quot;&gt;Facebook (Front End Engineer)&lt;/a&gt; | Tel Aviv, Israel; London, UK; US: Menlo Park, CA; Seattle, WA; Washington, DC | Initial phone code interview, then on site interview (or remote when not possible) with code and design / architecture interviews. All questions are based on actual problems the company has solved in the past.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.facile.it&quot;&gt;Facile.it&lt;/a&gt; | Milan, Italy; Cagliari, Italy; Remote | Initial call/Skype interview with HR. Tech interview about OOP concepts, HTTP and REST API design questions with 2 engineers. Brief talk with VP of Engineering or CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fairwinds.com/careers&quot;&gt;Fairwinds&lt;/a&gt; | Remote | Start with a brief talk with CTO or VP of Engineering, take home coding challenge, then remote interviews with several people on the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.falcon.io/jobs/&quot;&gt;Falcon.io&lt;/a&gt; | Copenhagen, Denmark | Initial call/Skype culture interview. Take-home tech assignment (game) and code review. On-site Interview about your experience and meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastbill.com/jobs&quot;&gt;FastBill&lt;/a&gt; | Frankfurt, Germany | Initial interview via Skype/Zoom. Small tech-home project based on the specific job. Afterwards code review and technical discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fatmap.com&quot;&gt;FATMAP&lt;/a&gt; | London, UK; Berlin, Germany; Vilnius, Lithuania | Skype discussion, Take-home project, Face to face&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fauna.com&quot;&gt;Fauna&lt;/a&gt; | San Francisco, CA / Remote | Take home project, then follow up with interviews on-site or remote. Interviews are both technical and non-technical. Technical interviews comprehend the scope of the home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feather-cfm.com&quot;&gt;Feather&lt;/a&gt; | Remote | Take-home challenge, portfolio discussion &amp;amp; team meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/fetchrewards&quot;&gt;Fetch Rewards&lt;/a&gt; | Remote | Short take-home project. 50 min screening interview that includes discussion of project. 5.5 hr (w/ breaks) final interview that involves speaking with your future manager and a non-technical product manager, a real-world coding problem, and high-level and low-level system design problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.findy.us/findy-saiyo&quot;&gt;Findy&lt;/a&gt; | Tokyo, Japan | Tech interview + On-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wearefine.com/careers&quot;&gt;FINE&lt;/a&gt; | Portland, OR | Small take-home challenge + follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.firemind.io&quot;&gt;Firemind&lt;/a&gt; | Maidstone, UK; London, UK; Remote | Small pre-interview challenge on github + discussion face to face in person or via video&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thefitbot.com/careers.html&quot;&gt;Fitbot&lt;/a&gt; | Boulder, CO | Pairing &amp;amp; writing code with the founders for a few hours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flatfox.ch&quot;&gt;Flatfox&lt;/a&gt; | Zurich, Switzerland | Informal conversation to check mutual fit, small (4h) take-home assignment, discussion in team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/adhawk?location=Sarasota%20Florida&quot;&gt;FloorForce&lt;/a&gt; | Sarasota, FL / Remote | Intro phone call with HR, second conversation with FloorForce engineer, and final pairing interview with FloorForce engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowdash.com/careers&quot;&gt;Flowdash&lt;/a&gt; | San Francisco, CA | Technical phone interview, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluidly.com&quot;&gt;Fluidly&lt;/a&gt; | London, UK | Casual 30min phone call. ~1hr take home tech exercise (not pass or fail). 1 stage onsite interview - discussion about experience, 1 hour pair programming on the real code base, then your turn to interview us!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fold.money&quot;&gt;Fold&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://food52.com/jobs&quot;&gt;Food52&lt;/a&gt; | New York, NY; Remote | Take-home project, discussion on-site or remote, interviews with both technical and non-technical staff&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fooji.com&quot;&gt;Fooji&lt;/a&gt; | Lexington, KY; Remote | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.formidable.com/careers&quot;&gt;Formidable Labs&lt;/a&gt; | Seattle, WA; London, UK; Remote | Take-home project, remote pair programming, discussion on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fortumo.com/careers&quot;&gt;Fortumo&lt;/a&gt; | Tallinn, Estonia; Tartu, Estonia | After a 30-min call you get a simplified version of a task that has recently been a challenge for the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://founders.as/joinus&quot;&gt;Founders&lt;/a&gt; | Copenhagen, Denmark | Take Home project + Interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.foundryinteractive.com/contact&quot;&gt;Foundry Interactive&lt;/a&gt; | Seattle, WA | On-site or remote discussion, paid trial project with pairing and code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fournova.com/jobs&quot;&gt;fournova&lt;/a&gt; | Remote | Take-home project, discussion via video call&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frappe.io/careers&quot;&gt;Frappe&lt;/a&gt; | Mumbai, India; Remote | Take-home project, a short pair programming exercise, discussion and interview with members of the Engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeagent.com/company/careers&quot;&gt;FreeAgent&lt;/a&gt; | Edinburgh, UK | Take-home project, pair programming, discussion and interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeletics.com/en/corporate/jobs&quot;&gt;Freeletics&lt;/a&gt; | Munich, Germany | Small real-world challenge, multiple interviews on-site/remote and social gathering with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freetrade.io/careers&quot;&gt;Freetrade&lt;/a&gt; | London, England | Initial hangout with fizz buzz style question followed by an on-site real world coding question and systems design conversation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://friday-jobs.personio.de&quot;&gt;FRIDAY&lt;/a&gt; | Berlin, Germany | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontside.io/careers&quot;&gt;Frontside&lt;/a&gt; | Austin, Texas | Phone interview with remote pairing session. Followed by in person pairing (paid for the day) and lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fullfacing.com/vacancies&quot;&gt;Full Facing&lt;/a&gt; | Cape Town, South Africa | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.funda.nl/vacatures&quot;&gt;Funda&lt;/a&gt; | Amsterdam, The Netherlands | Take Home test + Discussion On-Site/Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fundapps.co/about-us/join-our-team&quot;&gt;FundApps&lt;/a&gt; | London, UK | Coffee with an Engineer; take-home kata; code review + on-site pair programming exercise.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;G - I&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gamevycareers.com&quot;&gt;Gamevy&lt;/a&gt; | London, UK; Bilbao, ES; Remote | Informal culture discussions, pair programming with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.garmin.com&quot;&gt;Garmin&lt;/a&gt; | Tucson, AZ | Non-technical phone screen, technical phone screen (questions about projects on your resume), in-person interview: programming an arduino, given 3 hours and a laptop with internet access&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.garnercorp.com&quot;&gt;Garner&lt;/a&gt; | Toronto, Canada | step 1: online chat with hiring manager, step 2: at home assignment solving real-life problem, step 3: on-site pair programming with engineers, step 4: offer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gasketgames.com/work-with-us&quot;&gt;Gasket Games&lt;/a&gt; | Vancouver, Canada | Non-technical phone screen, technical phone screen (open-ended questions), in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gathercontent.com/about-us&quot;&gt;GatherContent&lt;/a&gt; | Remote | Culture-first interviews, pair programming and remote, informal technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gemini.com/careers&quot;&gt;Gemini&lt;/a&gt; | New York, NY | Phone chat. Take-home project, discussion on-site. Questions on prior experiences and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genui.com&quot;&gt;GenUI&lt;/a&gt; | Seattle, WA | A short phone screen with questions regarding general knowledge related to the open position, then a half day pair programming interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghostinspector.com/jobs&quot;&gt;Ghost Inspector&lt;/a&gt; | Remote | Video interview, short (under 2 hour) take-home project, and team video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.ginetta.net&quot;&gt;Ginetta&lt;/a&gt; | Zurich, Switzerland; Braga, Portugal | Culture-first interviews, take home assignment that resembles a real-world problem we often solve, then discussion about the assignment in-person with pair-programming improvement sessions with our developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/about/careers&quot;&gt;GitHub&lt;/a&gt; | Remote; San Francisco, CA; Boulder, CO| Take-home exercise, code review and technical discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/jobs/apply/&quot;&gt;GitLab&lt;/a&gt; | Remote | A series of video calls, and a coding exercise involving working on a Merge Request that is like a real work task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitprime.com&quot;&gt;GitPrime&lt;/a&gt; | Denver, CO; Remote | small short term real-world project, paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glints.com/sg/inside/careers/&quot;&gt;Glints&lt;/a&gt; | Singapore, Singapore; Jakarta, Indonesia | Culture fit interview, take home assignment that resembles a real-world problem, walkthrough about the assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/about/jobs&quot;&gt;GoCardless&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.godaddy.com/careers/overview&quot;&gt;GoDaddy&lt;/a&gt; | Sunnyvale, CA | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gojek.io&quot;&gt;GoJek&lt;/a&gt; | Bangalore, India; Jakarta, Indonesia; Singapore, SG; Bangkok, Thailand | Take-home exercise, Pair programming with senior engineer, Techinal problem solving and discussion, Cultural Fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gower.st&quot;&gt;Gower Street Analytics&lt;/a&gt; | Remote; London, UK | Initial telephone chat, then either a) work with us, fully paid, for a day on real code with the team; or b) pair-programming on a code kata with the team members for four pomodoros. Your choice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graffino.com&quot;&gt;Graffino&lt;/a&gt; | Sibiu, Romania | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graftonstudio.com&quot;&gt;Grafton Studio&lt;/a&gt; | Boston, MA | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gram.gs&quot;&gt;Gram Games&lt;/a&gt; | London, UK / Istanbul, Turkey | Initial interview -&amp;gt; Take home -&amp;gt; Take home discussion call -&amp;gt; On site code review and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gramercytech.com&quot;&gt;Gramercy Tech&lt;/a&gt; | New York, NY | Pair programming &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grandcentrix.net/jobs&quot;&gt;grandcentrix&lt;/a&gt; | Cologne, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chatgrape.com/jobs/&quot;&gt;Grape&lt;/a&gt; | Vienna, Austria / Remote | Github or code samples -&amp;gt; Pair programming -&amp;gt; Skype/phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graph.cool&quot;&gt;Graphcool&lt;/a&gt; | Berlin, Germany | On-site pair programming of a small, isolated real world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.graphicacy.com&quot;&gt;Graphicacy&lt;/a&gt; | Washington, DC | Phone interview; in-person or virtual interview depending on location and availability; two brief technical assignments focused on flexibility, creativity, and general competency&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graphistry.com&quot;&gt;Graphistry&lt;/a&gt; | San Francisco, CA; Remote | Discuss product/market, engineering, and culture, review past code/project, and for junior developers, choice of take home or code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grok-interactive.com&quot;&gt;Grok Interactive&lt;/a&gt; | San Antonio, TX | Take-home project with code review and a follow-up in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gruntwork.io&quot;&gt;Gruntwork&lt;/a&gt; | Remote | Paid, take-home project with pair coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gtmsportswear.com/careers&quot;&gt;GTM Sportswear&lt;/a&gt; | Manhattan, KS / Remote | Remote pairing session, then a take-home test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hacktiv8.com&quot;&gt;Hacktiv8&lt;/a&gt; | Jakarta, Indonesia | Phone call for quick project &amp;amp; personal introduction followed by Video call interview with project owner for discussion about the project and general question on how the project should be solved.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://happyteam.io&quot;&gt;Happy Team&lt;/a&gt; | Warsaw, Poland; Remote | General technical questions, takehome paid exercise with feedback/discussion during implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.happypie.com&quot;&gt;Happypie&lt;/a&gt; | Uppsala, Sweden | Takehome exercise with code review after, in-person interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hash.com.br/index.html&quot;&gt;Hash&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hashrocket.com&quot;&gt;Hashrocket&lt;/a&gt; | Chicago, IL/Jacksonville Beach, FL | Remote pairing session, paid week pair programming with everyone on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://headspring.com/about/careers&quot;&gt;Headspring&lt;/a&gt; | Austin, TX; Houston, TX; Monterrey, Mexico | Take-home situational questionnaire and code exercise, with in-person follow up to discuss and pair for changes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://healthify.us&quot;&gt;Healthify&lt;/a&gt; | Remote &amp;amp; New York City, NY | Take-home project, discussion via Zoom, pair programming with us on our app for a day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heavenhr.com&quot;&gt;HeavenHR&lt;/a&gt; | Berlin, Germany | Take home project based on the candidate‚Äôs experience and future responsibilities. Then discussion about the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helabs.com&quot;&gt;HE:labs&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Take-home project and discussion via Skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hellofresh.com/jobs&quot;&gt;HelloFresh&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.heptio.com/jobs&quot;&gt;Heptio&lt;/a&gt; | Seattle, WA; Remote | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://herodigital.com&quot;&gt;Hero Digital&lt;/a&gt; |&amp;nbsp;San Francisco, CA; Remote | Take-home project with code review, multiple (non-technical) interviews with different areas of the company about past projects and experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heroku.com/careers&quot;&gt;Heroku&lt;/a&gt; | Remote | Timeboxed independent project on Github, discussion/debrief of project via Hangouts, productionization discussion via Hangouts, ‚Äúmeet the team‚Äù meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hhcc.com/careers&quot;&gt;Hill Holliday&lt;/a&gt; | Boston, MA | Take-home project on GitHub, in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hireology.com/careers&quot;&gt;Hireology&lt;/a&gt; | Chicago, IL; Remote | Walk through personal/work projects and discuss experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hiventive.com&quot;&gt;Hiventive&lt;/a&gt; | Pessac, France | Phone interview, home coding challenge, on-site interview with general programming questions, discussion of proposed solutions and personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://holidaypirates.group/en/jobs&quot;&gt;HolidayPirates&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.holobuilder.com&quot;&gt;HoloBuilder&lt;/a&gt; | Aachen, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hologram.io/careers&quot;&gt;Hologram&lt;/a&gt; | Chicago, IL; Remote | Intro call, take-home project taken from production work, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homechef.com/careers&quot;&gt;Home Chef&lt;/a&gt; | Chicago, IL; Remote | Get-to-know-you meeting with the team, followed by a half-day collaborative coding session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homelight.com/engineering&quot;&gt;HomeLight&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; Seattle, WA | Phone screen, take home that is close to production code, onsite with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://housemarque.com&quot;&gt;Housemarque&lt;/a&gt; | Helsinki, Finland | Interview, take-home project, then interview and code review on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hoxhunt.com/careers/&quot;&gt;HoxHunt&lt;/a&gt; | Helsinki, Finland | Take-home project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanapi.co/company/careers&quot;&gt;Human API&lt;/a&gt; | Redwood City, CA | Technical phone interview, then on-site pair programming and design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://io.co.za/opportunities&quot;&gt;I|O&lt;/a&gt; | Cape Town, South Africa&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://icalialabs.com&quot;&gt;Icalia Labs&lt;/a&gt; | Monterrey, Mexico | Pair programming, cultural fit session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://iconstituent.com/careers/&quot;&gt;iConstituent&lt;/a&gt; | Washington, DC | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ideamotive.co&quot;&gt;Ideamotive&lt;/a&gt; | Warsaw, Poland &amp;amp; Remote | Take-home project, technical interview with developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ideo.com/jobs&quot;&gt;IDEO&lt;/a&gt; | San Francisco, CA; New York, NY; Chicago, IL; Cambridge, MA | Take home project that resembles a problem IDEO solves for, then pairing session in person or over video chat.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/scout24&quot;&gt;ImmobilienScout24&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.impraise.com&quot;&gt;Impraise&lt;/a&gt; | Amsterdam, The Netherlands | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.incloud.de&quot;&gt;Incloud&lt;/a&gt; | Darmstadt, Germany | Technical interview with developers, followed by a full day on site with a practical project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.indellient.com/careers&quot;&gt;Indellient&lt;/a&gt; | Oakville, Canada | Series of interviews both technical and non-technical&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inevitableinnovations.com&quot;&gt;INEVITABLE&lt;/a&gt; | Manchester, UK | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/careers&quot;&gt;InfluxData&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Technical and non-technical interviews, pair programming, with prospective manager and multiple prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infosum.com&quot;&gt;InfoSum&lt;/a&gt; | Basingstoke, UK | On-site unsupervised exercise &amp;amp; discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inkindcapital.com&quot;&gt;inKind Capital&lt;/a&gt; | Boulder, CO | Discussing real-world problems, pair programming, dinner &amp;amp; drinks with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inmar.com/careers&quot;&gt;Inmar&lt;/a&gt; | Winston-Salem, NC; Austin, TX &amp;amp; Remote | Take-home project and conversation-style interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.innoplexus.com&quot;&gt;Innoplexus&lt;/a&gt; | Pune, India; Frankfurt, Germany | Take-home projects and On-site pair programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.instacart.com&quot;&gt;Instacart&lt;/a&gt; | San Francisco, CA | Take-home real world project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://internshala.com/internships/internship-at-InstantPost&quot;&gt;InstantPost&lt;/a&gt; | Bangaluru, India | Remote assignment followed by Technical and Team round interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.integral.io&quot;&gt;Integral.&lt;/a&gt; | Detroit, MI | Initial remote technical screen featuring test-driven development &amp;amp; pair programming, then on-site full day interview that involves pair programming on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.intelipost.com.br&quot;&gt;Intelipost&lt;/a&gt; | S√£o Paulo, BR | Take-home project, on-site code review and presentation (skype available if needed), discussion involving real world problems and interviews with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interfrog.de/jobs&quot;&gt;Interfrog Produktion GmbH&lt;/a&gt; | Mannheim, Germany | Phone interview with developer and CEO to get to know each other and to understand skills and background. Follow-up interview to discuss technical realization of sample work which is handed over after the first interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interset.com/careers&quot;&gt;Interset&lt;/a&gt; | Ottawa, Canada | Discussion of technical background and past experience. Relevant take-home project for junior developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itexperts.be&quot;&gt;IT Experts&lt;/a&gt; | Eeklo, Belgium | On site interview -&amp;gt; 1 or 1/2 day at the office to solve a real world problem with the team -&amp;gt; job offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itdesign.de/karriere/&quot;&gt;itdesign&lt;/a&gt; | T√ºbingen, Germany | Short phone or personal interview. A day at our company to give you and us the opportunity to get to know each other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ithaka.travel&quot;&gt;Ithaka&lt;/a&gt; | Mumbai, India | Phone interview followed by a small development task. Finally a phone interview with CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://itrellis.com&quot;&gt;iTrellis&lt;/a&gt; | Seattle, WA | Phone screen, then a take-home project, then pairing (remote or on-site) with 3 developers on the take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.izettle.com/jobs&quot;&gt;iZettle&lt;/a&gt; | Stockholm, Sweden | Remote pair programming exercise, propose an architecture for an application and discuss about it in an informal format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;J - L&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jamasoftware.com&quot;&gt;Jamasoftware&lt;/a&gt; | Portland, OR | Initial phone screen with hiring manager. In person pairing on project similar to day-to-day work with a separate cultural interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jamitlabs.com/jobs&quot;&gt;Jamit Labs&lt;/a&gt; | Karlsruhe, Germany | Phone interview or on-site interview &amp;amp; take-home code challenge or on-site programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jetstack.io/careers&quot;&gt;Jetstack&lt;/a&gt; | London, UK | Phone screen; shared terminal session on Linux &amp;amp; Programming; Take home task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jiminny.com&quot;&gt;Jiminny&lt;/a&gt; | Sofia, Bulgaria | Phone screen. Take-home exercise. Follow-up discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jitbit.com&quot;&gt;Jitbit&lt;/a&gt; | Remote; London, UK; Tel-Aviv, Israel | Take-home real-world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weare.jobtome.com/careers&quot;&gt;Jobtome&lt;/a&gt; | Stabio, Switzerland | Phone screen introduction with hiring manager. In site (or screen call) with Engineer Manager for a talk on skills and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://journaltech.com/careers&quot;&gt;Journal Tech&lt;/a&gt; | Los Angeles, CA | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jplusplus.org&quot;&gt;Journalism++&lt;/a&gt; | Berlin, Germany | Apply through a &lt;a href=&quot;http://internship.jplusplus.org&quot;&gt;relevant online challenge&lt;/a&gt; to show your technical skills and your capacity to investigate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.justwatch.com/us/talent&quot;&gt;JustWatch&lt;/a&gt; | Berlin, Germany | Take-Home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.khealth.ai&quot;&gt;K Health&lt;/a&gt; | Tel Aviv, Israel | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getkahoot.com/jobs&quot;&gt;Kahoot!&lt;/a&gt; | London, UK / Oslo, Norway | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kata.ai&quot;&gt;Kata.ai&lt;/a&gt; | Malang, Indonesia / Jakarta, Indonesia | Take-home assignment, then invited to discuss the assignment and interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kayako.com&quot;&gt;Kayako&lt;/a&gt; | London, UK / Gurgaon, India | Take-home assignment, series of experience based interviews, cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kentik.com/careers&quot;&gt;Kentik&lt;/a&gt; | San Francisco, CA | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keymetrics.io&quot;&gt;Keymetrics&lt;/a&gt; | Paris, France | Phone Interview, Take-home project based on our &lt;a href=&quot;https://github.com/keymetrics/keymetrics-api&quot;&gt;API&lt;/a&gt;, IRL meeting with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kienguru.vn&quot;&gt;Ki·∫øn Guru&lt;/a&gt; | H·ªì Ch√≠ Minh, Vietnam | Phone screening with technical recruiter ‚Äì&amp;gt; live coding with an engineer ‚Äì&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) ‚Äì&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.kindredplc.com&quot;&gt;Kindred Group, Native Apps Team&lt;/a&gt; | Stockholm SE, London UK | On-site/Skype programming task, Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kinnek.com/jointeam&quot;&gt;Kinnek&lt;/a&gt; | New York, NY | Phone screen, on-site pairing session, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.kiwi.com&quot;&gt;Kiwi.com&lt;/a&gt; | Brno, Czech Republic | Phone Interview, Take-home projects, On-site code review &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.knock.com/careers&quot;&gt;Knock.com&lt;/a&gt; | San Francisco, CA / New York, NY / Remote | Phone Interview, Take-home project, On-site technical conversation relating to the tech stack you would be hired to build with&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://knplabs.com&quot;&gt;KNPLabs&lt;/a&gt; | Nantes, France | First step: screening call directly with the CEO, to discuss company vision, assess cultural fit and experience. Second step: call or IRL interview with a developer and a project facilitator , technical discussions with focus on soft skills. The goal of the interview is for the 2 KNPeers to be able to answer: ‚ÄúDo I want to work with this person ?‚Äù If both say yes, the person is hired. If even at least one says no, the person is not hired.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.konghq.com/careers&quot;&gt;Kong&lt;/a&gt; | San Francisco, CA | Phone interview. Pairing and technical interviews. Take home assigment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kongregate.com/jobs&quot;&gt;Kongregate&lt;/a&gt; | Portland, OR | Phone screening. Take home project. On-site pairing and conversational technical interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.korbit.co.kr/about/jobs&quot;&gt;Korbit&lt;/a&gt; | Seoul, South Korea | Take home assignment followed by on-site code review and interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kulkul.tech/careers&quot;&gt;Kulkul Tech&lt;/a&gt; | Jakarta, Indonesia | Take home and an in-person system design interview, then soft skills and culture assessment via interviews with the senior leadership team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.coop&quot;&gt;Lab.Coop&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lab49.com/careers/&quot;&gt;Lab49&lt;/a&gt; | New York, NY; Washington, DC; London, UK; Sydney, AU | First interview - Pairing interview using Codility. Final interviews that include a coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://landing.jobs/at/landing-jobs&quot;&gt;Landing.jobs&lt;/a&gt; | Lisbon, Portugal | Interviews (in-person or remote), Take home coding project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://engineering.lanetix.com&quot;&gt;Lanetix&lt;/a&gt; | San Francisco, CA | &lt;a href=&quot;https://engineering.lanetix.com/2015-10-20/hiring-process&quot;&gt;Our Hiring Process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lattice.com/careers&quot;&gt;Lattice&lt;/a&gt; | San Francisco, CA; New York, NY; Remote | Technical exercises based on work we do at Lattice, discussion of a new architecture to solve a real world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchacademy.com/careers&quot;&gt;Launch Academy&lt;/a&gt; | Boston, Philadelphia | Nontechnical phone screen, pair programming with team member, and potentially a ‚Äúguest lecture‚Äù for our students&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchdarkly.com/careers&quot;&gt;LaunchDarkly&lt;/a&gt; | Oakland, CA | Informational phone screen with Eng leadership, take home project, onsite interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leapsome.com&quot;&gt;Leapsome&lt;/a&gt; | Berlin, Germany | Phone screen with technical co-founder, take home case study, onsite culture-fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learningbank.dk&quot;&gt;Learningbank&lt;/a&gt; | Copenhagen, DK | Take home assignment, followed by on-site code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.legalstart.fr&quot;&gt;Legalstart.fr&lt;/a&gt; | Paris, France | Telephone interview followed by take-home challenges. Suitable applicants are asked to do further on-pair interviews on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.leverton.ai&quot;&gt;Leverton&lt;/a&gt; | Berlin, Germany | Initial chat with the HR continued with 1-2 rounds chat with the team; followed by a technical test and finally a chat with the CTO/MD. &lt;a href=&quot;http://leverton-jobs.personio.de&quot;&gt;Jobs page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.libertymutualgroup.com/careers&quot;&gt;Liberty Mutual&lt;/a&gt; | Seattle, WA; Boston, MA; Indianapolis, IN | Initial interview, discussion on-site, interview with peers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.librato.com/jobs&quot;&gt;Librato&lt;/a&gt; | San Francisco, CA; Boston, MA; Austin, TX; Vancouver, Canada; Krakow, Poland | Take home coding project, conversational technical interviews on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lightningjar.agency&quot;&gt;Lightning Jar&lt;/a&gt; | San Antonio, Tx | Remote pairing session, Initial interview,discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lightricks.com&quot;&gt;Lightricks&lt;/a&gt; | Jerusalem, Israel | Initial interview, Take home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.linkresearchtools.com/job-offers&quot;&gt;LinkResearchTools&lt;/a&gt; | Vienna, Austria | Skype interview, mini take-home exercise, discussion on-site / personal interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linxsystems.com&quot;&gt;Linx Systems&lt;/a&gt; | Bloomington, IL / Remote | 5-10 minute take home project; followed by a non-technical interview; finish up with a second take home project or paired with a developer for a 30-60 minute session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listium.com/jobs&quot;&gt;Listium&lt;/a&gt; | Melbourne, Australia | Design and code proof of concept features with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://litmus.com/careers#openings&quot;&gt;Litmus&lt;/a&gt; | Remote | General technical questions, take-home code challenge, discussion, on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.littlethings.com/careers.html&quot;&gt;LittleThings&lt;/a&gt; | New York, NY | Take home code challenge, Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://loanzen.in/team.html#Career&quot;&gt;LoanZen&lt;/a&gt; | Bengaluru, India | Initial phone interview about experience, a solve-at-home project based on the kind of work we do at our company, on-site interview discussing the submitted solution and a general discussion with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lob.com/careers&quot;&gt;Lob&lt;/a&gt; | San Francisco, CA | Initial phone screen followed by an on-site interview. Technical problems discussed during the interview are all simplified versions of problems we‚Äôve had to solve in production. Our entire interview process and what we‚Äôre looking for is described in our blog post &lt;a href=&quot;https://lob.com/blog/how-we-interview-engineers&quot;&gt;How We Interview Engineers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locastic.com/posao&quot;&gt;Locastic&lt;/a&gt; | Split, Croatia | Take-home code challenge, tehnical discussion &amp;amp; on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locaweb.com.br/carreira&quot;&gt;Locaweb&lt;/a&gt; | S√£o Paulo, Brazil | Skype interview, take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logiball.de/en/jobs/&quot;&gt;LOGIBALL GmbH&lt;/a&gt; | Berlin, Hannover and Herne in Germany | Interviews and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logicsoft.co.in&quot;&gt;Logic Soft&lt;/a&gt; | Chennai, India | Phone discussion, F2F pair programming exercise + discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lonres.com/public/working-us&quot;&gt;LonRes&lt;/a&gt; | London, United Kingdom | Quick introduction call with tech (Skype), coding task for ‚âà1 hour, face-to-face interview (or via Skype) and meeting with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lookbookhq.com/about/careers&quot;&gt;LookBookHQ&lt;/a&gt; | Toronto, Canada | On-site discussion, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.useloom.com/careers&quot;&gt;Loom&lt;/a&gt; | San Francisco, CA | Google Hangouts resume dive on past experience, take-home project OR architectural phone screen, on-site interviews (2 technical architecture related to work, 1 or 2 non-technical)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lovion.de&quot;&gt;Lovion GmbH&lt;/a&gt; | Dortmund, Germany | On-site or remote interview for technical and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oiluna.com&quot;&gt;Luna&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lydia-app.com/en/company/jobs&quot;&gt;Lydia&lt;/a&gt; | Paris, FR | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyft.com/jobs&quot;&gt;Lyft‚Äôs Mobile Team&lt;/a&gt; | San Francisco, CA; Seattle, WA; New York, NY; Minsk, Belarus; Mexico City, Mexico | On-site project, discussion of candidate‚Äôs completed project afterwards&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lykon.de&quot;&gt;Lykon&lt;/a&gt; | Berlin, Germany | Phone interview followed by home assignment that reflect our daily work and then on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyoness-corporate.com/de-AT/Karriere/Jobangebote&quot;&gt;Lyoness Austria GmbH&lt;/a&gt; | Graz, Austria | Take-Home project, discussion on-site&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;M - O&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madetech.com/careers&quot;&gt;Made Tech&lt;/a&gt; | London, UK | &lt;a href=&quot;https://github.com/madetech/handbook/tree/master/guides/hiring#20-minute-phone-conversation&quot;&gt;Our hiring process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magnetis.workable.com&quot;&gt;Magnetis&lt;/a&gt; | S√£o Paulo, Brazil &amp;amp; Remote | Phone interview + take home assignment, followed by pair programming and informal meeting with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers-mlssoccer.icims.com/jobs/search?ss=1&amp;amp;searchCategory=20285&quot;&gt;Major League Soccer&lt;/a&gt; | New York, NY | Phone interview + short take home project, which is daily work focused. In person interview could involve discussing past projects or pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.makemusic.com/careers/&quot;&gt;MakeMusic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maketime.workable.com&quot;&gt;MakeTime&lt;/a&gt; | Lexington, KY | Practical exercise and/or a pairing session on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mango-solutions.com/wp/about-mango/team&quot;&gt;Mango Solutions&lt;/a&gt; | London (UK), Chippenham (UK) | Initial phone interview, followed by on-site interview with take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/jobs&quot;&gt;Mapbox&lt;/a&gt; | San Francisco, CA; Washington, DC; Ayacucho, Peru; Bangalore, India; Berlin, Germany; Remote | Conversational interviews, paid onsite project with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/careers/&quot;&gt;Mattermost&lt;/a&gt; | Remote | Follow-up questions over email, a couple of video calls, audition (paid real-world ‚Äútry out‚Äù project), video call to discuss audtion, and then a video call with the CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mavenlink.com/careers&quot;&gt;Mavenlink&lt;/a&gt; | San Francisco, CA; Irvine, CA; Salt Lake City, UT | On-site pairing with multiple engineers. Pairing exercises and pairing on company code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.maxwellhealth.com/careers&quot;&gt;Maxwell Health&lt;/a&gt; | Boston, MA | Take-home exercise or pairing session with team. Then conversational meetings with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://me-company.de/jobs/&quot;&gt;Me &amp;amp; Company&lt;/a&gt; | D√ºsseldorf, Germany | You join us for one or two paid trial days to work on an assignment and to meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mealme.ai&quot;&gt;MealMe&lt;/a&gt; | San Francisco, California | Initial introductory interview, 1 hour technical interview with CTO (real-world problem), rapid fire questions about thinking and working in a start-up.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediapop.co&quot;&gt;Media Pop&lt;/a&gt; | Singapore, Singapore | Take-home or unsupervised (onsite) real-world assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.meetrics.com&quot;&gt;Meetrics&lt;/a&gt; | Berlin, Germany | Initial interview, take-home code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://underthehood.meltwater.com/jobs&quot;&gt;Meltwater&lt;/a&gt; | Manchester, NH | Small take home exercise that will be presented to the team during a QA style interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mention.workable.com&quot;&gt;Mention&lt;/a&gt; | Paris, FR | Take-home small exercise followed up by on site meetings with your future coworkers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.mercadolibre.com&quot;&gt;Mercado Livre&lt;/a&gt; | S√£o Paulo, Brazil | Phone interview with HR department, Takehome project and discussion (on-site or remote) with an interview to evaluate the candidate‚Äôs previous experience and Cultural Fit interview with a manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mercatus.com/company/careers&quot;&gt;Mercatus&lt;/a&gt; | Toronto, Canada | Practical on-site project similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.metro-markets.de/careers/&quot;&gt;Metro Markets&lt;/a&gt; | D√ºsseldorf, Germany | You can get to know us by joining fully remote interviews with us or you can come and visit us onsite&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mfind.pl/dolacz-do-nas/&quot;&gt;mfind&lt;/a&gt; | Warsaw, PL | Phone call about technical experience, Take-home project or technical test(depends on experience), Onsite interview with technical lead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://midrive.com/careers&quot;&gt;miDrive&lt;/a&gt; | London, UK | Phone screen, Take-home project / technical test, Onsite interview with senior and peer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.milchundzucker.de&quot;&gt;milch &amp;amp; zucker&lt;/a&gt; | Gie√üen, Germany | Interview with direct feedback, applicants providing working sample, code review (product code or personal code of applications)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.minutemedia.com/careers/&quot;&gt;Minute Media&lt;/a&gt; | Tel-Aviv, Israel | Phone screening with engineer. On-site real-world challenge questions with two engineers. Sometimes a take-home assignment or existing code sample submission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mirumee.com/jobs&quot;&gt;Mirumee&lt;/a&gt; | Wroclaw, Poland; Remote | Pair programming and code review using one of the issues (or Pull Requests) in our open-source Saleor project, general discussion about programming, technology and candidate‚Äôs experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixmax.com/careers&quot;&gt;Mixmax&lt;/a&gt; | San Francisco, CA | Takehome assignment purely based on their platform, followed by phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mobilecashout.com&quot;&gt;MobileCashout&lt;/a&gt; | Barcelona, Spain; Valencia, Spain | Quick introduction video call with a tech (less than 10-15 minutes). On-site open source contribution to a project of candidates choosing, paired with a tech from the team. Interview and a short questionaire about software design and relevant technologies. Interview and presentation of the company with a HR rep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobilethinking.ch&quot;&gt;Mobilethinking&lt;/a&gt; | Geneva, Switzerland | 1 hour discussion about technical background and past experiences, preferably in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.modeanalytics.com/careers&quot;&gt;Mode&lt;/a&gt; | San Francisco, CA | Phone interview followed by onsite pair-architecting and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mokahr.com&quot;&gt;MokaHR&lt;/a&gt; | Beijing, China | Take home project/challenge, then on-site programming session taken from problems we encounter at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moneytree.jp&quot;&gt;Moneytree Front-end Web Team&lt;/a&gt; | Tokyo, Japan | Pair programming exercise and social gathering with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com&quot;&gt;Monzo&lt;/a&gt; | London, UK &amp;amp; Remote | Phone interview with another engineer. Take-home assignment. Call to debrief on take-home assignment. Half-day interview (on-site or Hangouts) with three conversational sessions: (1) building on take-home test &amp;amp; real-world system design (verbal and collaborative); (2) digging into knowledge &amp;amp; understanding in 1-2 other relevant technical areas; (3) general background, teams and ways of working.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.moteefe.com/jobs&quot;&gt;Moteefe&lt;/a&gt; | London, UK &amp;amp; Remote | Interview with CTO. Take home project/challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mutualmobile.com/careers&quot;&gt;Mutual Mobile&lt;/a&gt; | Austin, TX; Hyderabad, India | Technical discussion, code test based on actual work you‚Äôll be doing, panel style discussions for cross-functional and culture-fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mutualofomaha.com/careers&quot;&gt;Mutual of Omaha&lt;/a&gt; | Omaha, NE, USA | Panel Style Interviews analyzing problem solving, ability to adapt well to change, and interpersonal communication skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mutuallyhuman.com&quot;&gt;Mutually Human Software&lt;/a&gt; | MI, OH, WA | Collaborative problem analysis and design exercise, pairing exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mux.com/jobs/&quot;&gt;Mux&lt;/a&gt; | San Francisco, CA; London, UK &amp;amp; Remote | Hands-on software engineer and system-design interviews that focus on collaboratively building practical applications at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mytaxi.com&quot;&gt;My Taxi&lt;/a&gt; | Hamburg, Germany | Video chat with HR, Take Home Assignment, Review of Assignment with a technical member, Technical interview and onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.myheritage.com&quot;&gt;MyHeritage&lt;/a&gt; | Or Yehuda, Israel; Kyiv, Ukraine | Video call with HR, problem solving test on codility.com, video call with tech lead and solving problem from real project, system design onsite interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/mytutor/&quot;&gt;MyTutor&lt;/a&gt; | London, UK | Take home test, followed by pair programming, system design discussion, and cross functional interview on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.native-instruments.com&quot;&gt;Native Instruments&lt;/a&gt; | Berlin, Germany | Takehome programming assignment and personal interviews with part of the hiring team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nearsoft.com/join-us/&quot;&gt;Nearsoft Inc&lt;/a&gt; | Hermosillo, Mexico; Chihuahua, Mexico; Mexico City, Mexico | Takehome &lt;a href=&quot;https://nearsoft.com/blog/the-logic-behind-nearsofts-logic-test/&quot;&gt;logic test&lt;/a&gt;, english interview to check communication skills, short technical interview about experience, long technical discussion about languages/tools/practices you will use on daily basis, pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lifeatnedap.com/vacatures&quot;&gt;Nedap&lt;/a&gt; | Groenlo, Netherlands / Remote | A simple conversation, human to human and a small on-site project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://neoteric.eu/career/&quot;&gt;Neoteric&lt;/a&gt; | Gda≈Ñsk, Warsaw Poland; Remote | Face2Face conversation, take home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdwallet.com/careers&quot;&gt;NerdWallet&lt;/a&gt; | San Francisco, CA; Remote | Code review phone screen, on-site project to build a functioning app with interviewee‚Äôs platform of choice&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.netflix.com/jobs/867042&quot;&gt;Netflix&lt;/a&gt; | Los Gatos, CA | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and our director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netguru.co/career&quot;&gt;Netguru&lt;/a&gt; | Warsaw, Poland; Remote | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlandish.com&quot;&gt;Netlandish&lt;/a&gt; | Los Angeles, CA; Remote | Takehome exercise, chat interview, video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/careers&quot;&gt;Netlify&lt;/a&gt; | San Francisco, CA / Remote | Takehome project and online/onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://newrelic.com/about/careers&quot;&gt;New Relic&lt;/a&gt; | San Francisco, CA | Takehome exercise &amp;amp;/ or pair programming session depending on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newstore.com/careers/&quot;&gt;NewStore&lt;/a&gt; | Berlin, Germany; Hannover, Germany; Erfurt, Germany; Boston, MA | Telephone technical interview, code sample submission or takeaway coding exercise, on-site pair programming, design session (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newvoicemedia.com/about-newvoicemedia/careers&quot;&gt;NewVoiceMedia&lt;/a&gt; | Basingstoke, England; Wroclaw, Poland | Telephone interview, takeaway coding exercise, on-site pair programming, code review &amp;amp; technical discussion (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexapp.ca/career/&quot;&gt;Nexapp&lt;/a&gt; | Quebec City, Canada | Video call where we get to know you more and you get to know us more, followed by a video call technical interview where we discuss a few open-ended problems strongly inspired by the daily real-world work we do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexcess.net&quot;&gt;Nexcess.net&lt;/a&gt; | Southfield, MI | We mostly chat to get a feel on both ends if there‚Äôs a good cultural fit. We ask questions to see what experience you have and how you think as a programmer. At some point we look at some of your code or have you work on some of ours (1 hour).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nimblehq.co&quot;&gt;Nimble&lt;/a&gt; | Bangkok, Thailand; Ho Chi Minh City, Vietnam; Da Nang, Vietnam | Takehome exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ninjaneers.de&quot;&gt;Ninjaneers&lt;/a&gt; | Kassel, Germany; Remote | Google Hangouts resume dive on past experience and projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.niteoweb.com/careers&quot;&gt;Niteoweb&lt;/a&gt; | Ljubljana, Slovenia | Join us for a week to see if we fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gonitro.com/about/jobs&quot;&gt;Nitro&lt;/a&gt; | Dublin, Ireland; San Francisco, CA | Phone Call, Take Home Test, Hiring Manager Phone Interview followed by an onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.nmbrs.com&quot;&gt;Nmbrs&lt;/a&gt; | Amsterdam, The Netherlands; Lisbon, Portugal | Cultural interview, take home test, interview with CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noa.one&quot;&gt;Noa&lt;/a&gt; | Berlin, Germany; San Francisco, CA | 1 technical chat, 2-3 cultural chats with colleagues from different departments in the team, if these work a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nodesource.com/careers&quot;&gt;NodeSource&lt;/a&gt; | Remote | A person-to‚Äìperson walk through of a past project of yours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nomoko.world/jobs&quot;&gt;Nomoko,camera&lt;/a&gt; | Zurich, Switzerland | Three interrogations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.norbsoft.com/careers&quot;&gt;Norbsoft&lt;/a&gt; | Krak√≥w, Poland; Warszawa, Poland; Sosnowiec, Poland; Remote | Take-home exercise or code sample submission, technical discussion by video conference&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nordsoftware.com/en/jobs&quot;&gt;Nord Software&lt;/a&gt; | Helsinki, Finland; Tampere, Finland; Stockholm, Sweden | Take-home exercise &amp;amp; interview with CEO and senior developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nordsecurity.com/careers&quot;&gt;NordPass&lt;/a&gt; | Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noredink.com/jobs&quot;&gt;NoRedInk&lt;/a&gt; | San Francisco, CA | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacare.no&quot;&gt;Nova Care&lt;/a&gt; | Oslo, Norway | Casual interview, take-home exercise &amp;amp; presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacredit.com/careers&quot;&gt;Nova Credit&lt;/a&gt; | San Francisco, CA | Choose between a take home assignment or two interviews on CoderPad, CodePen, or your local dev env while screensharing. Final round is onsite working on a small project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novicap.com/en/careers.html&quot;&gt;NoviCap&lt;/a&gt; | Barcelona, Spain | Takehome exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novoda.com/joinus&quot;&gt;Novoda&lt;/a&gt; | London, UK; Liverpool, UK; Berlin, Germany; Barcelona, Spain; Remote | 2 x Pairing sessions &amp;amp; conversational interviews &lt;a href=&quot;https://github.com/novoda/dojos&quot;&gt;(public repo)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novus.com/jobs&quot;&gt;Novus Partners&lt;/a&gt; | New York, NY | Take-home exercise &amp;amp; on-site exercises (choice of laptop or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noyo.com/careers/&quot;&gt;Noyo&lt;/a&gt; | San Francisco, CA / Durham, NC / Remote | Phone interview, take-home assignment, on-site code review, and walk through a past project you‚Äôre proud of&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nozbe.com/careers&quot;&gt;Nozbe&lt;/a&gt; | Remote | Take-home exercise &amp;amp; interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.com/jobs&quot;&gt;npm, Inc&lt;/a&gt; | Oakland, CA / Remote | No technical challenges. Just interview conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nubank.workable.com&quot;&gt;Nubank&lt;/a&gt; | S√£o Paulo, BR | Phone conversation, take-home exercise, code walkthrough, on-site code pairing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.numberly.com&quot;&gt;numberly&lt;/a&gt; | Paris, France | Series of interviews, that go over technical background, past experiences and cultural knowledge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/numerai/jobs&quot;&gt;numer.ai&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nutshell.com/jobs&quot;&gt;Nutshell&lt;/a&gt; | Ann Arbor, MI, US | Email screen / take-home programming exercise (&lt;a href=&quot;https://github.com/nutshellcrm/join-the-team&quot;&gt;public repo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nyon.nl/jobs&quot;&gt;Nyon&lt;/a&gt; | Amsterdam, The Netherlands | 1. Skype (or real life) interview 2. Take home exercise (3-4 hours) 3. Meet entire team and pair programming sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oreilly.com/jobs&quot;&gt;O‚ÄôReilly Media&lt;/a&gt; | Sebastopol, CA; Boston, MA; Remote | Phone conversation, take-home exercise or pair programming session, team interview, all via Google Hangout&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oakstreethealth.com/careers&quot;&gt;Oak Street Health&lt;/a&gt; | Chicago, IL / Remote | Casual but semi-technical initial phone screen. One hour video call consisting of in depth technical discussion with lead developers followed by one hour of discussion with the product team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://objectpartners.com/careers/&quot;&gt;Object Partners, Inc.&lt;/a&gt; | Minneapolis, MN; Omaha, NE | Phone interview to gauge mutual interest, followed by a slightly more in-depth technical round-table interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objectiveinc.com/careers&quot;&gt;Objective, Inc.&lt;/a&gt; | Salt Lake City, UT | Take-home programming exercise, then onsite friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rejoins.octo.com&quot;&gt;OCTO Technology&lt;/a&gt; | Paris, France | HR interview to go over your experiences and cultural knowledge. Then more or less informal discussion with two future team members about architecture design, agile practices, take-home project, pair programming‚Ä¶&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octopus.energy/careers/&quot;&gt;Octopus Energy&lt;/a&gt; | London, UK; Sydney, Australia; Remote | Take-home exercise and phone or on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://olist.com&quot;&gt;Olist&lt;/a&gt; | Curitiba, Brazil | Take-home project and remote or on-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.omadahealth.com/jobs&quot;&gt;Omada Health&lt;/a&gt; | San Francisco, CA | Take home exercise and/or pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://oncue.co&quot;&gt;Oncue&lt;/a&gt; | San Francisco, CA; Remote | Online coding test on real-world problems (2 hours). Technical discussion with developer team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.onemainfinancial.com&quot;&gt;OneMain Financial&lt;/a&gt; | Chicago, IL; Remote | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onesignal.com/careers&quot;&gt;OneSignal&lt;/a&gt; | San Mateo, CA | Intro call with recruiting, second conversation with OneSignal engineer, onsite pairing via screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onfido.com/jobs&quot;&gt;Onfido&lt;/a&gt; | London, UK; Lisbon, Portugal | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ontame.io&quot;&gt;Ontame.io&lt;/a&gt; | Copenhagen, Denmark | Take home exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opbeat.com/jobs#seniorbackendengineer&quot;&gt;Opbeat&lt;/a&gt; | Copenhagen, Denmark | Pairing on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/openbasecom&quot;&gt;Openbase&lt;/a&gt; | San Francisco, CA | Take-home exercise on real-world problem &amp;amp; discussion with engineers about exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openmindonline.it&quot;&gt;Openmind&lt;/a&gt; | Monza, Italy | On-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.optoro.com/open_position_item/?oid=134960&quot;&gt;Optoro&lt;/a&gt; | Washington, DC | Take home exercise. Review your code onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ori.co&quot;&gt;Ori&lt;/a&gt;| London, UK | Phone interview and a takehome project, followed by a two hour meeting with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ostmodern.co.uk&quot;&gt;Ostmodern&lt;/a&gt; | London, UK | Take-home exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.outbrain.com/?F1C=Netanya&amp;amp;F2C=&amp;amp;FTXT=&quot;&gt;Outbrain&lt;/a&gt; | Netanya, Israel | Take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://outlandish.com&quot;&gt;Outlandish&lt;/a&gt; | London, UK | Take-home exercise, real-world pair programming session, friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/outlook/jobs&quot;&gt;Outlook iOS &amp;amp; Android&lt;/a&gt; | San Francisco, CA / New York, NY | Take-home project &amp;amp; online / onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdery.com/careers&quot;&gt;The Nerdery&lt;/a&gt; | Minneapolis, MN; Chicago, IL; Phoenix, AZ; Kansas City, KS | Take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/theoutline&quot;&gt;The Outline&lt;/a&gt; | New York, NY | Take-home exercise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;P - R&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pace.car/jobs&quot;&gt;PACE Telematics&lt;/a&gt; | Karlsruhe, Germany | Culture and mindset check, on-site meet and great, small code challenge to see development style and strategy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paessler.com/company/career/jobs&quot;&gt;Paessler AG&lt;/a&gt; | Nuremberg, Germany | Pairing with different engineers on a real problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagar.me&quot;&gt;Pagar.me&lt;/a&gt; | S√£o Paulo, BR | Skype interview, on-site pairing task and-or real world problem solving process / presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pager.com&quot;&gt;Pager&lt;/a&gt; | New York, NY; Remote | Short phone interview, conversational interviews, take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagerduty.com/careers&quot;&gt;PagerDuty&lt;/a&gt; | San Francisco, CA / Toronto, Canada / Atlanta, GA | Zoom / on-site pair programming and tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.palatinategroup.com&quot;&gt;Palatinate Tech&lt;/a&gt; | London, UK | Hangout/Skype/phone followed by (normally) on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parabol.co&quot;&gt;Parabol&lt;/a&gt; | New York, NY; Los Angeles, CA; Remote | Culture check followed by compensated, &lt;a href=&quot;https://github.com/ParabolInc/action/projects&quot;&gt;open-source contribution&lt;/a&gt; skills evaluation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parivedasolutions.com&quot;&gt;Pariveda Solutions&lt;/a&gt; | Dallas, TX / Houston, TX / Atlana, GA / Washington, DC / New York, NY / Chicago, IL / San Francisco, CA / Seattle, WA / Los Angeles, CA | Personality assessment (Predictive Index) and case study. Programming aptitude test (language independent) for college hires.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passfort.com/about#jobs&quot;&gt;PassFort&lt;/a&gt; | London, UK | Skype interview, and on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passiv.com&quot;&gt;Passiv&lt;/a&gt; | Fredericton, Canada | Zoom interview, take-home coding assignment, standalone bite-size project that delivers some value, small feature development involving team collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paws.com/careers&quot;&gt;Paws&lt;/a&gt; | London, UK | Phone screening, take-home project, on-site pairing/discussion on your solution and meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paybase.io&quot;&gt;Paybase&lt;/a&gt; | London, UK | Phone screening, Take home project, On-site interview for technical and culture fit, Open Q&amp;amp;A session with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paybyphone.com/careers&quot;&gt;PayByPhone&lt;/a&gt; | Vancouver, Canada | Remote programming interview, on-site ‚Äúmeet the team‚Äù&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://peaksware.com&quot;&gt;Peaksware Companies (TrainingPeaks, TrainHeroic, MakeMusic)&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://info.peerstreet.com/careers&quot;&gt;PeerStreet&lt;/a&gt; | Los Angeles, CA | Phone, take home project &amp;amp; on-site to meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pento/jobs&quot;&gt;Pento&lt;/a&gt; | Remote | Quick personal interview, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://permutive.com/careers/&quot;&gt;Permutive&lt;/a&gt; | London, UK | Phone call; short, relevant take-home coding assignment; on-site pairing, general technical discussion, values &amp;amp; ways of working interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.persgroep.nl/werken-bij-it&quot;&gt;Persgroep, de&lt;/a&gt; | Amsterdam, Netherlands | Tech interview (technical background and experiences) and culture fit, both on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.withpersona.com/about&quot;&gt;Persona&lt;/a&gt; | San Francisco, CA | Tech interview (technical background and experiences), pair programming, and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pexeso/jobs&quot;&gt;Pex&lt;/a&gt; | Los Angeles, CA; Remote | 3 sessions: brief phone conversation (30 min); take home assignment (2 hours); on-site or video discussion without any coding (2 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://philo.com/jobs&quot;&gt;Philo&lt;/a&gt; | San Francisco, CA; Cambridge, MA | Initial screen with deep-dive into one of your recent projects (30 mins) ; take-home coding exercise tailored your skills (4 hours); on-site with take-home code review, architecture interview, design interview and ‚Äúsoft skills‚Äù interview (4 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phoodster.com&quot;&gt;Phoodster&lt;/a&gt; | Stockholm, Sweden | Take-home exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pillartechnology.com/careers&quot;&gt;Pillar Technology&lt;/a&gt; | Ann Arbor, MI; Columbus, OH; Des Moines, IA | Phone, take home exercise, in-person pairing session and site visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pilot.co/become-a-partner&quot;&gt;Pilot&lt;/a&gt; | Remote | Two calls. Introduction one (30m) + verification of communication skills and remote work experience (15m)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pingcap.com&quot;&gt;PingCAP&lt;/a&gt; | Beijing, China; Shanghai, China; Guangzhou, China; Shenzhen, China; Hangzhou, China; Chengdu, China; Remote | Phone interview with HR, then a take home project. Finally 1-4 rounds of business interviews and 1 round of Founder interview(via phone, video, Face to Face‚Ä¶).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pivotal.io/careers&quot;&gt;Pivotal&lt;/a&gt; | San Francisco, CA; Los Angeles, CA; New York, NY; Boston, MA; Denver, CO; Atlanta, GA; Chicago, IL; Seattle, WA; Washington, D.C.; London, UK; Sydney, Australia; Toronto, Canada; Paris, France; Berlin, Germany; Tokyo, Japan | Initial remote technical screen featuring pair programming; on-site pair programming interview, generally a full day pairing on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixiumdigital.com&quot;&gt;Pixium Digital&lt;/a&gt; | Singapore, Singapore | Remote or on-site interview with few generic / technical questions as well as portfolio review + discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform.sh&quot;&gt;Platform.sh&lt;/a&gt; | Remote | Remote Interview, Wide-Ranging discussions on many diverse subjects. Remote interviews with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform45.com&quot;&gt;Platform45&lt;/a&gt; | Johannesburg, South Africa; Cape Town, South Africa | On-site interview, take-home project and culture fit day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getcatalyst.in/careers&quot;&gt;Playlyfe&lt;/a&gt; | Bangalore, India | Short personal interview, on-site demonstration of programming in browser devtools followed by discussion about the problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com/careers&quot;&gt;Pluralsight&lt;/a&gt; | Salt Lake City, UT; San Francisco, CA; Boston, MA; Orlando, FL | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pointman.bamboohr.com/jobs/&quot;&gt;Pointman&lt;/a&gt; | Buffalo, NY | Takehome exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.poki.com&quot;&gt;Poki&lt;/a&gt; | Amsterdam, The Netherlands | Pair programming on-site w/ two engineers where we focus on teamwork, googling relevant documentation and fixing things together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://polar.me/company/careers&quot;&gt;Polar&lt;/a&gt; | Toronto, Canada | Phone interview, followed by 1-2 onsite pair-programming interviews based on their platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popstand.com&quot;&gt;Popstand&lt;/a&gt; | Los Angeles, CA | Build MVPs for startups&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popularpays.com&quot;&gt;Popular Pays&lt;/a&gt; | Chicago, IL | Phone chat/coffee to determine what will be worked on during a day of pair-programming on a real problem that the candidate thinks best demonstrates their skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pragma.team/talent&quot;&gt;Pragmateam&lt;/a&gt; | Sydney, Australia | Engineering Consultancy And Delivery - Takehome exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.premiumbeat.com/careers&quot;&gt;PremiumBeat&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.primary.com/jobs&quot;&gt;Primary&lt;/a&gt; | New York, NY / Remote | Phone chat, take home exercise, pair program and discuss onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.promptworks.com/jobs&quot;&gt;PromptWorks&lt;/a&gt; | Philadelphia, PA | Take-home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.proxy.com&quot;&gt;Proxy&lt;/a&gt; | San Francisco, CA | Phone chat. In-depth discussion about experiences on-site. Occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pusher.com/jobs&quot;&gt;Pusher&lt;/a&gt; | London, UK | Solve a real-world problem through a design session with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pygmalios.com/en&quot;&gt;Pygmalios&lt;/a&gt; | Bratislava, Slovakia | Take-home project related to business and discussion with our engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quietlightcom.com/positions-web.php&quot;&gt;Quiet Light Communications&lt;/a&gt; | Rockford, IL, USA | Discussion, work samples and/or small freelance project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.workatquintype.com&quot;&gt;Quintype&lt;/a&gt; | Bengaluru, India / San Mateo, USA | Take home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quizizz.com&quot;&gt;Quizizz&lt;/a&gt; | Bengaluru, India | Phone chat, real world assignment, discussion w/ developers, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ragnarson.com&quot;&gt;Ragnarson&lt;/a&gt; | Lodz, Poland; Remote | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.railslove.com&quot;&gt;Railslove&lt;/a&gt; | Cologne, Germany | Have a coffee in our office, casual chat with us, pair programming on a real project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raisingit.com&quot;&gt;Raising IT&lt;/a&gt; | London, UK | Coffee with a team member, on-site pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rapyuta-robotics.com/pages/jobs.html&quot;&gt;Rapyuta Robotics&lt;/a&gt; | Bengaluru, India / Tokyo, Japan / Zurich, Switzerland | Take-home assignment related to our ongoing projects, series of technical / experience based interviews, candidate presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rayfeed.com&quot;&gt;Rayfeed&lt;/a&gt; | Vancouver, Warsaw | Video-call interview followed by a take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://razorpay.com/jobs&quot;&gt;Razorpay&lt;/a&gt; | Bangalore, India | Phone screen, On-site pair programming, and occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reaktor.com/careers&quot;&gt;Reaktor&lt;/a&gt; | New York, NY; Amsterdam, Netherlands; Helsinki, Finland; Tokyo, Japan | Discussion, work samples from previous projects (work or hobby), take-home exercise if needed for further info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realhq.com/jobs&quot;&gt;Real HQ&lt;/a&gt; | Austin, TX / Chicago, IL / Remote | Phone/video interviews, a take-home coding exercise, and a remote pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realync.com/careers&quot;&gt;Realync&lt;/a&gt; | Chicago, IL / Carmel, IN / Remote | Quick phone interview, then a take home project and finally in person interview (open discussions instead of quizzes - anything technical are real-world problems).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rebase.fi&quot;&gt;Rebase Consulting&lt;/a&gt; | Helsinki, Finland / Remote | First round general discussion/introductions, second round technical interview built around a take-home exercise, 2x2 skill/interest matrix go-through and general technical topics based on the candidate‚Äôs profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://red-badger.com/about-us/join-us&quot;&gt;Red Badger&lt;/a&gt; | London, UK | Phone &amp;amp; Skype interview, take home exercise, On-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redballoonsecurity.com&quot;&gt;Red Balloon Security&lt;/a&gt; | New York City, USA | A rather educational week long hacking challenge with a monetary reward uppon finding solution. On-site with team members, real job related problems, a few open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redcarpetup.com/jobs&quot;&gt;RedCarpet&lt;/a&gt; | New Delhi, India | Interview, work sample/take-home project and discussion/code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.red-gate.com/our-company/careers/current-opportunities/&quot;&gt;Redgate&lt;/a&gt; | Cambridge, UK | Simple couple of questions during screening phase (up to 30 min) followed by a second phase with up to two coding exercises (non-CS).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reducer.co.uk&quot;&gt;Reducer&lt;/a&gt; | London, UK | Introductions by phone, pair programming on site, then meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reflektive.com/careers/&quot;&gt;Reflektive&lt;/a&gt; | San Francisco, CA; Bengaluru, India | A short take home project/assignment, followed by a couple of technical and non-technical discussions online and offline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://relabe.com&quot;&gt;Relabe&lt;/a&gt; | San Juan, PR | First we screen for cultural fit then check for technical proficiency. 2-3 Interviews max in SJ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentify.com/jobs&quot;&gt;Rentify&lt;/a&gt; | London, UK | Phone call, take home real-world project, on-site pair programming, product discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentomojo.com/about/careers&quot;&gt;RentoMojo&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repl.it/site/jobs&quot;&gt;Repl.it&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, then an on-site project and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://resin.io&quot;&gt;Resin.io&lt;/a&gt; | Remote | Take home real-world project and a couple of technical and non-technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.respark.co.uk&quot;&gt;ReSpark&lt;/a&gt; | London, UK | Phone conversation followed by on-site interview w/ task relevant to daily role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.restaurantops.co&quot;&gt;RestaurantOps&lt;/a&gt; | Scottsdale, AZ | Take Home Project &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://retailpulse.ai&quot;&gt;Retail Pulse&lt;/a&gt; | Bangalore, India | Phone chat, take home exercise, feedback &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reverscore.com&quot;&gt;Rever&lt;/a&gt; | Guadalajara, Mexico | Take-home project, on-site discussion or via Hangouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revlv.net&quot;&gt;Revlv&lt;/a&gt; | Manila, Philippines | Discussion about developer skills, previous projects and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.revolut.com&quot;&gt;Revolut&lt;/a&gt; | London, UK / Berlin, Germany / Krakow, Poland / Moscow, Russia / St Petersburg, Russia | Take-home exercise reflecting day-to-day work, technical interview via hangouts or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rexsoftware.com/careers&quot;&gt;Rex Software&lt;/a&gt; | Brisbane, Australia | Take home project, feedback + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rizk.com&quot;&gt;Rizk.com&lt;/a&gt; | Ta‚Äô Xbiex, Malta | Take-home assignment, discussion w/ developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.rocketmiles.com&quot;&gt;Rocket Travel&lt;/a&gt; | Remote; Chicago, IL; New York, NY | Pair programming, take home project (2-4 hours), 3-4 hour final interview with mix of high level technical, product, and cultural/behavioral sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rockode.com&quot;&gt;Rockode&lt;/a&gt; | Bangalore, India | Real world assignment, group hack session, discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rosedigital.co&quot;&gt;Rose Digital&lt;/a&gt; | New York, NY | Phone conversation followed by pair coding components that mirror day to day work, in person discussion about code, take home project if needed for more info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rstudio.com&quot;&gt;RStudio&lt;/a&gt; | Remote | Video calls with recruiter then engineering management, take home project, video call for code review with engineering lead&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.ruangguru.com&quot;&gt;Ruangguru&lt;/a&gt; | Jakarta, Indonesia / Yogyakarta, Indonesia / Malang, Indonesia / Bandung, Indonesia | Phone screening with technical recruiter ‚Äì&amp;gt; live coding with an engineer ‚Äì&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) ‚Äì&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubygarage.org&quot;&gt;RubyGarage&lt;/a&gt; | Dnipro, UA | Take-home project, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runtastic.com&quot;&gt;Runtastic&lt;/a&gt; | Linz, Austria; Vienna, Austria | Video call with recruiting staff, take home project, video call for code review, discussion, questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rvu.co.uk/careers&quot;&gt;RVU&lt;/a&gt; | London, UK | Also known as Uswitch / Money.co.uk / Bankrate, small take-home project related to our business area, followed by open book pairing with developers to extend it followed by Q&amp;amp;A session to discuss your experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;S - U&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.safebutler.com&quot;&gt;SafeButler&lt;/a&gt; | San Francisco, CA | Take-home project, then an on-site or remote interview with a review, pair programming, and culture fit discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sahajsoft.com&quot;&gt;Sahaj Software Solutions&lt;/a&gt; | Bangalore, India; Chennai, India; San Jose, CA | Take home code + Pairing + Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salecycle.com/careers&quot;&gt;SaleCycle&lt;/a&gt; | Durham, UK; Brighton, UK | Phone screen, face-to-face discussion with developers, optional pairing session and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salesfive.com/jobs&quot;&gt;Salesfive&lt;/a&gt; | Munich, Germany; Berlin, Germany | Phone screen, Phone Interview with developer to discuss code and challenges, Take home challenge if necessary. Onsite visit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.salesforce.org&quot;&gt;Salesforce.org Tech &amp;amp; Products&lt;/a&gt; | Remote | Phone screen, hands-on programming test solving real-world problems, Google Hangouts video sessions with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://salesloft.com&quot;&gt;Salesloft&lt;/a&gt; | Atlanta, GA | Phone interview, take-home project, cultural-fit interview, technical interview where candidate modifies take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samsara.com/jobs&quot;&gt;Samsara&lt;/a&gt; | San Francisco, CA; Atlanta, GA; London, UK | Phone interview, onsite interview (technical challenges based on real problems we‚Äôve faced at Samsara)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sc5.io/careers&quot;&gt;SC5 Online&lt;/a&gt; | Helsinki, Finland; Jyv√§skyl√§, Finland | Take-home assignment (intentionally short, takes at most an hour to complete), discussion and review assignments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scapic.com/careers/&quot;&gt;Scapic&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schibsted.pl&quot;&gt;Schibsted Tech Polska&lt;/a&gt; | Gda≈Ñsk, Poland | Phone screen, take-home exercise, code review and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://segment.com&quot;&gt;Segment&lt;/a&gt; | San Francisco, CA; Vancouver, Canada | Phone interview, take-home assignment (small fun project), onsite interview (technical + core/culture) -&amp;gt; intended to set you up for success&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seitenbau.com/karriere/aktuelle-jobangebote&quot;&gt;SEITENBAU&lt;/a&gt; | Konstanz, Germany | Peer recruiting; conversational interviews (video call or face-to-face) with other developers and HR focussing on motivation, attitude, skills; possibly 2nd face-to-face interview meeting with additional team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sendyne.com&quot;&gt;Sendyne&lt;/a&gt; | New York City, USA | Phone screen, on-site with team members. Review of past experiences + questions regardnig real problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensortower.com/jobs&quot;&gt;Sensor Tower&lt;/a&gt; | San Francisco, CA | Phone call, on-site interview including discussion about projects/skills and a short real-world programming challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensu.io&quot;&gt;Sensu&lt;/a&gt; | Remote | Video call, choice of pairing session or take home programming assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sentisis.com/trabaja-con-nosotros&quot;&gt;S√©ntisis&lt;/a&gt; | Madrid, Spain; Mexico City, Mexico; Bogot√°, Colombia; Santiago de Chile, Chile; Remote | Phone call, on-site/remote interview including discussion about projects/skills and a short real-world pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serpapi.com&quot;&gt;SerpApi&lt;/a&gt; | Austin, TX / Remote | Skype core value and culture interview, review of contributions on GitHub or other platforms, and take-home project if online contributions are not enough.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sertiscorp.com&quot;&gt;Sertis&lt;/a&gt; | Bangkok, Thailand | Technical &amp;amp; culture fit interview, take-home project, follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://setapp.pl/career&quot;&gt;Setapp Sp. z o.o.&lt;/a&gt; | Poznan, Poland | Online/face-to-face discussion with developers about everyday programming dilemmas &amp;amp; reviewing your own code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sharoo.com/jobs/&quot;&gt;Sharoo&lt;/a&gt; | Zurich, Switzerland; Remote | Soft skills interview, take home project, technical interview based on take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shipandco.com/en/&quot;&gt;Ship&amp;amp;co&lt;/a&gt; | Remote / Kyoto, Japan | Casual non-technical interview with the CEO. One hour technical discussion with lead developer about software development, skills and past experience. Three months paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getshogun.com&quot;&gt;Shogun&lt;/a&gt; | Remote | Discussion about software development and past experience, code samples, paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.showmax.com/engineering-careers&quot;&gt;Showmax&lt;/a&gt; | Beroun, Czechia; Prague, Czechia; Remote | Take home project, then a pair-programming and discussion onsite / Hangouts round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shuttlecloud.com/jobs&quot;&gt;ShuttleCloud&lt;/a&gt; | Chicago, IL / Madrid, Spain | Take-home project, then on-site code walk through and a real world problem discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.signal-ai.com/about-us/careers&quot;&gt;Signal AI&lt;/a&gt; | London, UK | Phone screen; take home code exercise; on-site code extension with pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simple.com&quot;&gt;Simple&lt;/a&gt; | Portland, OR | Discussion about software development and architecture skills and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simpli.fi/about-us/careers&quot;&gt;Simpli.fi&lt;/a&gt; | Fort Worth, TX, USA | Takehome code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.welcometothejungle.co/companies/simplifield/jobs&quot;&gt;SimpliField&lt;/a&gt; | Lille, France | Interview with the CTO and the developer team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simplybusiness.co.uk/about-us/careers/tech&quot;&gt;Simply Business&lt;/a&gt; | London, UK / Remote | Three stage, one day interview with quick feedback. One of the stages is 1.5h pair-programming session, where interviewee is assigned a task and interviewing developer plays role of Product Owner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sixfold.com/careers&quot;&gt;Sixfold&lt;/a&gt; |&amp;nbsp;Tallinn, Estonia; Tartu, Estonia; Vienna, Austria | 3-4 stages: 1st interview with HR and an engineering lead, 2nd a test-task to solve at home, 3rd technical discussion &amp;amp; feedback on the test-task, 4th optional meeting with further engineering leads to find best fitting team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sixt.jobs/en&quot;&gt;Sixt&lt;/a&gt; | Munich, Germany | 4 stages: 1st HR, 2nd take-home project, 3rd follow-up discussion, 4th on-site interview with team plus HR&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://skylight.digital/join/&quot;&gt;Skylight Digital&lt;/a&gt; | Remote | Screening call to determine general interest, 1.5 hour pair programming exercise based on realistic scenario, EQ interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.skyrisepro.com&quot;&gt;Skyrise Pro&lt;/a&gt; | Chicago, IL | Take-home coding project, on-site interview including coding enhancements to the take-home project, offsite group activity&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/jobs&quot;&gt;Slack&lt;/a&gt; | San Francisco, CA | Call with recruiter, 1 week take-home project, call with hiring manager, on-site interview covering high-level system design, best software development practices and culture-fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.small-improvements.com/careers&quot;&gt;Small Improvements&lt;/a&gt; | Berlin, Germany&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smartly.io/developer&quot;&gt;Smartly.io&lt;/a&gt; | Helsinki, Finland | Discussion with recruiter and developers and a pair coding exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://smile.io/careers&quot;&gt;Smile.io&lt;/a&gt; | Kitchener, Canada / Remote | Take-home real world project, interviews with HR and engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snyk.io/jobs&quot;&gt;Snyk&lt;/a&gt; | London, UK; Tel Aviv, Israel | Take home task, then a pair coding on it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.socialtables.com&quot;&gt;Social Tables&lt;/a&gt; | Washington, DC | Chat about skills and past experiences + bring in a code sample from previous work or side project to discuss&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwear.nl/vacatures&quot;&gt;Softwear&lt;/a&gt; | Amsterdam, Netherlands | Writing software for the fashion industry ‚Äì remotely ‚Äì in an international team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sogilis.com&quot;&gt;Sogilis&lt;/a&gt; | Grenoble, France | Discussion about interests, practices, and motivation. Presentation/code review/pair programming on a personal or professional project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.sourcegraph.com/jobs&quot;&gt;Sourcegraph&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Tailored to the candidate, often consists of take-home work, discussion of real-world eng challenges, and product familiarity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.splice.com&quot;&gt;Splice&lt;/a&gt; | New York, NY; Remote | Call with recruiter, 4 hr take-home project, video interview w two engs on take-home exercise, video call with hiring manager, video call w VPE &amp;amp; principal eng to talk about architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.splyt.com&quot;&gt;Splyt&lt;/a&gt; | London, UK; Singapore, Singapore; Kuala Lumpur, Malaysia; Tokyo, Japan | Initial screening with recruiters from hr department, take home assessment (React + Node.js), followed by remote/on-site interviews with hiring manager and CTO about the assessment, system design/architecture, and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spreedly.com/jobs&quot;&gt;Spreedly&lt;/a&gt; | Durham, NC | Take-home project &lt;a href=&quot;https://engineering.spreedly.com/blog/programming-puzzles-are-not-the-answer-how-spreedly-does-work-samples.html&quot;&gt;related to business&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.natureasia.com&quot;&gt;Springer Nature (Asia)&lt;/a&gt; | Tokyo, Japan | Discussion &amp;amp; Pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sndigital.springernature.com&quot;&gt;Springer Nature Digital&lt;/a&gt; | Berlin, Germany; London, UK | Phone chat; take-home project; then a pairing session based on the project, a technical chat, and a chat with non-technical team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spronq.nl&quot;&gt;SpronQ&lt;/a&gt; | Amsterdam, Netherlands | Takehome coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squareup.com/careers&quot;&gt;Square&lt;/a&gt; | San Francisco, CA | Pair programming in a work environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://square-sense.com&quot;&gt;Square Sense&lt;/a&gt; | Paris, France | Short phone screen to confirm the interest, take-home project (similar to some of our existing software), a pair-programming interview where we will make some changes to the same project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://srijan.net&quot;&gt;Srijan Technologies&lt;/a&gt; | Delhi, India | General high level questions/discussion followed by Pair programming OR take-home coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stardog.com&quot;&gt;Stardog Union&lt;/a&gt; | Washington, DC; Remote | Technical discussion and general interest conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://startdee.com&quot;&gt;StartDee&lt;/a&gt; | Bangkok, Thailand | Phone screening with technical recruiter ‚Äì&amp;gt; live coding with an engineer ‚Äì&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) ‚Äì&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://statflo.com&quot;&gt;Statflo&lt;/a&gt; | Toronto, Canada | Phone screening, take home project, on-site interview discussing the take home project, high-level architectural brainstorm, and questions about career and team work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.store2be.com/de/jobs/tech&quot;&gt;store2be&lt;/a&gt; | Berlin, Germany | Skype/on-site interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.stormx.io/about#jobs&quot;&gt;Storm&lt;/a&gt; | Seattle, WA; Remote | Phone/skype screen ‚Äì&amp;gt; Take-home coding assignment ‚Äì&amp;gt; on-site/skype interview loop to discuss assignment; meet-and-greet with other teams ‚Äì&amp;gt; +1/-1 based on team consensus&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.storytel.com/departments/tech&quot;&gt;Storytel&lt;/a&gt; | Stockholm, Sweden; Lund, Sweden; Karlstad, Sweden; Ume√•, Sweden; Copenhagen, Denmark | Our process has few stages: a social interview with HR and 1-2 future teammates; a small take-home project followed by a technical discussion with 2-3 future colleagues. All stages can be in-person in one of our offices or via Google Meet&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; | San Francisco, CA / Seattle, WA / Dublin, Ireland / Singapore, SG / Remote | Programming/debugging phone screen + on site with your own laptop/setup and full access to internet, systems design discussion and talk with hiring manager about team alignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://structura.bio&quot;&gt;Structura Biotechnology&lt;/a&gt; | Toronto, Canada | Phone screening, take-home coding challenge, on-site review and discussion about past experience, and high-level architectural brainstorm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strv.com/careers&quot;&gt;STRV&lt;/a&gt; | Prague, Czech Republic; Brno, Czech Republic; Remote | A social interview with a recruiter + take-home coding challenge followed by a technical interview session discussing your approach in solving the take-home assignment + a culture-fit interview with the head of engineering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.stylabs.in&quot;&gt;STYLABS&lt;/a&gt; | Mumbai, India | Phone Screen, Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verticalchange.com/job_posts&quot;&gt;Subvertical (VerticalChange)&lt;/a&gt; | Remote | Phone screening, live pair programming &amp;amp; personal project code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sulvo.com/careers&quot;&gt;Sulvo&lt;/a&gt; | New York, NY / Remote | Interview over video call for cultural fit first, if you pass we proceed with technical interview that doesn‚Äôt include coding games or challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.summitto.com&quot;&gt;Summitto&lt;/a&gt; | Amsterdam, Netherlands | take-home coding challenge and on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.superawesome.com&quot;&gt;SuperAwesome&lt;/a&gt; | London, UK | Short recruiter phone screen, take-home exercise, follow up system design and cultural interview focused on your past experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://superplayer.fm&quot;&gt;Superplayer&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project and interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://surveysparrow.com/careers&quot;&gt;SurveySparrow&lt;/a&gt; | Kochi, India | Skype interview, take home project and code review, interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://svti.svt.se&quot;&gt;SVTi (Sveriges Television)&lt;/a&gt; | Stockholm, Sweden | On-site interview, take-home project, follow up interview where you walk through how you chose to solve the task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sweetiq.com/about/careers&quot;&gt;SweetIQ&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://useswiftly.com/jobs&quot;&gt;Swiftly Systems&lt;/a&gt; | Seattle, WA; San Francisco, CA | Take-home coding project, design principles discussions, collaborative problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symphonycommerce.com/careers&quot;&gt;Symphony Commerce&lt;/a&gt; | San Francisco, CA / Remote | Take-home project (phone), design discussion, review and critique &lt;em&gt;our&lt;/em&gt; code, debugging questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symplicity.com/about/join-us&quot;&gt;Symplicity&lt;/a&gt; | Arlington, VA | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sysgarage.com&quot;&gt;SysGarage&lt;/a&gt; | Buenos Aires, Argentina | Take-home project and real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tablecheck.com/en/company/jobs/&quot;&gt;TableCheck&lt;/a&gt; | Tokyo, Japan | Show us your code! Brief call then take-home project or pairing for those without code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tailorbrands.com/jobs&quot;&gt;Tailor Brands&lt;/a&gt; | Tel Aviv-Yafo, Israel | Discuss knowledge and interests, explore previous work experience, during the technical interview we discuss real-life problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tails.com/careers&quot;&gt;tails.com&lt;/a&gt; | Richmond (London), UK | Live pair programming or take home project with review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.takeaway.com&quot;&gt;takeaway.com&lt;/a&gt; | Enschede, Netherlands &amp;amp; Berlin, Germany | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madeintandem.com&quot;&gt;Tandem&lt;/a&gt; | Chicago, IL; San Francisco, CA | Introductory phone screen, take-home project, take-home project phone review, a few hour-long pairing sessions on real projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tanookilabs.com&quot;&gt;Tanooki Labs&lt;/a&gt; | New York, NY | Paid half-day take home project with followup review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tara.ai/about/careers&quot;&gt;Tara AI&lt;/a&gt; | San Jose, CA | On-site interview with a deep dive into appropriate technology and our problem space. The same sort of problem solving you would do with peers after a standup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tattoodo.com&quot;&gt;Tattoodo&lt;/a&gt; | Copenhagen, Denmark | Takehome exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.taxdoo.com/#/jobs/&quot;&gt;Taxdoo&lt;/a&gt; | Hamburg, Germany | On-site interview, little takehome exercise, followup review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tenthousandcoffees.com&quot;&gt;Ten Thousand Coffees&lt;/a&gt; | Toronto, Canada | Take home project, then explain how you solved the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.teraki.com&quot;&gt;Teraki&lt;/a&gt; | Berlin, Germany | Pair programming exercise, 45min to 3h according to seniority and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.tes.com/recruitment/&quot;&gt;Tes&lt;/a&gt; | Remote; London, UK | Remote pair programming session on React/Node kata with small takehome exercise as prep. Remote interview with senior engineers about previous experience, technical knowledge and interests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tesco.com&quot;&gt;Tesco PLC&lt;/a&gt; | London, United Kingdom | Pair programming and casual hypothetical system design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testdouble.com/join/developer&quot;&gt;Test Double&lt;/a&gt; | Remote | Initial conversation, Consulting interview, Technical interview, Pair programming, Takehome exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://textio.com/careers/?utm_source=github&amp;amp;utm_medium=forum&amp;amp;utm_campaign=textio-careers-engineering&amp;amp;utm_content=poteto-hiring-without-whiteboards&quot;&gt;Textio&lt;/a&gt; | Seattle, WA | Initial screen to discuss experience and interest in a role at Textio; then a take-home programming task is discussed during a 1-hour tech screen (on-site or remote); finally a larger take-home project, simulating real work, is discussed during an on-site presentation plus 1-1s; &lt;a href=&quot;https://textio.ai/how-we-hire-a74cdbadd1e8&quot;&gt;How we hire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thebookofeveryone.workable.com&quot;&gt;The Book of Everyone&lt;/a&gt; | Barcelona, Spain | Quick interview, meet the team, pairing with developers on your own project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thezebra.com/about/careers/&quot;&gt;The Zebra&lt;/a&gt; | Austin, TX | Take-home coding challenge with in-person review and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mobile.thescore.com/careers&quot;&gt;theScore&lt;/a&gt; | Toronto, Canada | Coding challenge &amp;amp; systems design challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thinkmill.com.au&quot;&gt;Thinkmill&lt;/a&gt; | Sydney, Australia | Initial meet and greet interview with Thinkmillers from the relevant team, take home assignment followed by tech review on a followup interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.thinslices.com&quot;&gt;Thinslices&lt;/a&gt; | Iasi, Romania | Takehome exercise &amp;amp; in person pair programming on a simple Kata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thoughtbot.com/jobs&quot;&gt;thoughtbot&lt;/a&gt; | San Francisco, CA; London, UK | &lt;a href=&quot;https://thoughtbot.com/playbook/our-company/hiring#interviewing&quot;&gt;Our interview process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers&quot;&gt;ThoughtWorks&lt;/a&gt; | San Francisco, CA | Interviews with ThoughtWorkers of diverse backgrounds and roles; take home assignment followed by in person pairing session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers/singapore&quot;&gt;ThoughtWorks Singapore&lt;/a&gt; | Singapore, Singapore | Interviews with ThoughtWorkers of diverse backgrounds and roles; Simple, live paired coding exercise in language of choice focused on clean code, not speed. Followed by refactoring paired interview, and technical discussion on modelling and system design, tech depth &amp;amp; breadth and team leading skills (if applicable).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thread.com/jobs&quot;&gt;Thread&lt;/a&gt; | London, UK | Take home test, real world architecture design, real world pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.threatspike.com&quot;&gt;ThreatSpike Labs&lt;/a&gt; | London, UK | Take home computing and security related challenges to be completed over a week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tilde.io&quot;&gt;Tilde&lt;/a&gt; | Portland, OR | Pair programming sessions with each member of the team, working on problems similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.timbuktutravel.com&quot;&gt;Timbuktu&lt;/a&gt; | Cape Town, South Africa | On site interview and pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tipalti.com&quot;&gt;Tipalti&lt;/a&gt; | Glil-Yam, Israel | Real-world design and coding challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://titanium.codes&quot;&gt;Titanium&lt;/a&gt; | Moldova, Chisinau | High level review of public activity on GitHub/BitBucket/Gitlab (if applicable) and screening via phone, On-site technical &amp;amp; Team fit interview, Formal ‚ÄúMeet the Team‚Äù meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toggl.com/jobs&quot;&gt;Toggl&lt;/a&gt; | Remote / Tallinn, Estonia | Online test on basic programming skills, followed by interview (typically includes get-to-know questions and technical skill testing). Depending on the team, there may be a take-home or live coding assignment. &lt;strong&gt;Paid test week&lt;/strong&gt; to work with the team on actual bugs/features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tooploox.com/careers&quot;&gt;Tooploox&lt;/a&gt; | Warsaw, Poland; Wroclaw, Poland; Gdansk, Poland; Remote | Team fit interview and then take-home project. Next on-site or remote interview consisting of discussion and live coding based on the delivered code. Focusing on high level questions, architecture and design decisions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toowoxx.de/index.php/karriere/&quot;&gt;Toowoxx&lt;/a&gt; | Deisenhausen, Germany &amp;amp; Ulm, Germany | Short interview with general questions, on-site programming challenge, code review of result&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophat.com/company/work-with-us/&quot;&gt;Top Hat&lt;/a&gt; | Remote / Toronto, Canada | Short coding challenge inspired from the day-to-day problem space followed by a longer frontend or backend pairing design and implementation exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophatter.com/careers&quot;&gt;Tophatter&lt;/a&gt; | San Francisco, CA; Portland, OR; Remote | Introductory call, followed by a technical phone screen that takes place on Coderpad. Next is the onsite interview, consisting in a bug squash, a refactoring exercise, a project, and closing with an informal chat about how the candidate likes to work and what they‚Äôre looking for in their next job.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.jointorii.co&quot;&gt;Torii&lt;/a&gt; | Raanana, Israel | Take-home fun full-stack-app exercise followed by an on-site review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://toucantoco.com/fr/team#jobs&quot;&gt;Toucan Toco&lt;/a&gt; | Paris, France | Pair-programming and TDD&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotouche.com&quot;&gt;Touch√©&lt;/a&gt; | Singapore, Singapore; Barcelona, Spain | Skype / Phone / on-site interview, take-home project, technical interview to discuss the project, team interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trademark.vision&quot;&gt;TrademarkVision&lt;/a&gt; | Brisbane, Australia | On site interview and quick take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trainheroic.com/careers/&quot;&gt;TrainHeroic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.trainingpeaks.com/careers.html&quot;&gt;TrainingPeaks&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transparentclassroom.com&quot;&gt;Transparent Classroom&lt;/a&gt; | Seattle, WA; Remote | Phone screen, 1 hr pairing on toy problem, 4 hr pairing on real code, full-day paid stage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tripstack.com/company/careers/&quot;&gt;TripStack&lt;/a&gt; | Toronto, Canada | Take-home assignment, followed up by a face to face code walk through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.trivago.com&quot;&gt;Trivago&lt;/a&gt; | D√ºsseldorf, Germany | Case Study, Skype Interview, On site Interview with some code review exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/trov&quot;&gt;Tr≈çv&lt;/a&gt; | Remote | Take-home project with followup interview from actual prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truefit.io/about/&quot;&gt;Truefit&lt;/a&gt; | Pittsburgh, PA | Phone screen, Take-home project, In-person interview with the team that you would join&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.truora.com&quot;&gt;Truora&lt;/a&gt; | Bogot√°, Colombia; Cali, Colombia; Remote | Take-home project, followed by phone interview with tech leads to discuss the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truss.works/jobs&quot;&gt;Truss&lt;/a&gt; | San Francisco, CA; Remote | Phone screen/ Take-home project that resembles a problem Truss has seen many times before / Followup interview about the project / Closing Interview, all interviews done remotely&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tunein.com&quot;&gt;TuneIn&lt;/a&gt; | San Fransisco, CA | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.twistlock.com&quot;&gt;Twistlock&lt;/a&gt; | Tel Aviv, Israel | Takehome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typito.com/go&quot;&gt;Typito&lt;/a&gt; | Bangalore , India | Take home assignment project with options for focus in frontend or backend work. First interview round based on the project submitted, may require to do some edits or add further feature based on discussion , live during interview. Second round mostly specific to overall system enegineering and discussion regarding solutions to common backend/frontend engineering problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uberall.com/en/careers&quot;&gt;uberall&lt;/a&gt; | Berlin, Germany | 30-min coding on-site, then a trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ubiome.com/careers&quot;&gt;uBiome&lt;/a&gt; | San Francisco, CA / Santiago, Chile | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ubots.com.br&quot;&gt;Ubots&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unbounce.com&quot;&gt;Unbounce&lt;/a&gt; | Vancouver, BC | Phone screen, take-home project, project discussion, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unboxed.co&quot;&gt;Unboxed&lt;/a&gt; | London, UK | Take home feature requests, pairing with developers to extend solution, team-fit interviews, chat with a director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.unearthlabs.com/careers&quot;&gt;Unearth&lt;/a&gt; | Seattle, WA | Take home project, team-fit interviews, technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unito.io/careers/&quot;&gt;Unito&lt;/a&gt; | Montreal, Canada | Team-fit interviews, technical discussion, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.untappd.com&quot;&gt;Untappd&lt;/a&gt; | Wilmington, NC; New York, NY; Los Angeles, CA | Review portfolio - What projects have you worked on? + personality assessment, + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.updater.com/jobs/openings&quot;&gt;Updater&lt;/a&gt; | New York, NY | Begin-at-home assignment highly relevant to role, presented and discussed during on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://uprise.se&quot;&gt;Uprise&lt;/a&gt; | Uppsala, Sweden | Take-home assignment, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.upstatement.com/jobs/&quot;&gt;Upstatement&lt;/a&gt; | Boston, MA; New York, NY; Remote | Phone screen, take home project relevant to our work, first round interview to discuss background and take home implementation, second round interview to meet more employees and share some of your and our recent work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbdyn.com/careers&quot;&gt;Urban Dynamics&lt;/a&gt; | Knoxville, TN; Vilnius, Lithuania; Remote | Phone screen, take home project (&lt;a href=&quot;https://github.com/urbdyn/coding_exercises&quot;&gt;exercises publicly available&lt;/a&gt;), and then interview with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbanmassage.com/jobs&quot;&gt;Urban Massage&lt;/a&gt; | London, UK | Project done at home, in-person walk through. Meeting the team is an integral part.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usertesting.com/about-us/jobs&quot;&gt;UserTesting&lt;/a&gt; | Atlanta, GA; San Francisco, CA; Mountain View, CA | Initial interview, pair programming, and offer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V - X&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.valassis.com/digital-advertising&quot;&gt;Valassis Digital&lt;/a&gt; | Seattle, WA; San Francisco, CA; Lansing, MI; Hamburg, Germany | Phone screen, on-site interview with group, paired whiteboard problem solving and discussion, take-home project and follow-up review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.valuemotive.com/careers&quot;&gt;Valuemotive&lt;/a&gt; | Helsinki, Finland | Code examples from previous projects (work or hobby) or take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.varsitytutors.com&quot;&gt;Varsity Tutors&lt;/a&gt; | Remote | Take home assignment, presentation of assignment, live code review with team. Advanced / high-level chat with team based on skillset and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://vayu.com.au&quot;&gt;Vayu Technology&lt;/a&gt; | Sydney, Australia; Kathmandu, Nepal | Short interview, general programming questions and short take home challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.venasolutions.com&quot;&gt;Vena Solutions&lt;/a&gt; | Toronto, Canada | Phone screen, on-site pair-programming and code-review exercise on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.venminder.com&quot;&gt;Venminder, Inc.&lt;/a&gt; | Elizabethtown, KY; Louisville, KY | Initial phone screen to explain position. If candidate interested they get a take home assignment followed by a non-scripted in-person interview with team members to judge personality fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verloop.io&quot;&gt;Verloop&lt;/a&gt; | Bengaluru, India | A take home programming exercise and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vernacular.ai&quot;&gt;Vernacular.ai&lt;/a&gt; | Bangalore, India | Phone screen, Research Paper Discussion (ML Role), Code review/Open-source code navigation/on-screen Pair programming, and discussion with CTO/CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verve.co/careers&quot;&gt;Verve&lt;/a&gt; | London, UK | An intentionally short, take home exercise that mirrors real project work and incorporates code review elements&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.veteransunited.com/careers/&quot;&gt;Veterans United Home Loans&lt;/a&gt; | Columbia, MO | Phone screen, remote or in person pair-programming exercise, and multiple in person panel interviews with developers and managers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.vingle.net&quot;&gt;Vingle&lt;/a&gt; | Seoul, Korea | Written interview, takehome project, in-person, conversational code review and interviews with engineers and engineering managers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vinta.com.br/careers/&quot;&gt;Vinta Software&lt;/a&gt; | Recife, Brazil | Culture fit interview, architectural challenge, take home project, and pairing over work sample&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://virtual7.de/de/karriere&quot;&gt;virtual7&lt;/a&gt; | Kalrsruhe, Germany | Phone interview and on-site interview based on personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-conomic.dk/om/job&quot;&gt;Visma e-conomic&lt;/a&gt; | Copenhagen, Denmark | Take home assignment, assignment presentation and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://voltra.co&quot;&gt;Voltra Co.&lt;/a&gt; | Amsterdam, Netherlands / New York, NY / Remote | Show us your github account, tell us what you know. Let‚Äôs pair on an OSS PR!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://https://vsx.net/jobs&quot;&gt;VSX&lt;/a&gt; | Dresden, Germany | On-site interview, home coding challenge, presentation/discussion of proposed solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.vtex.com/careers&quot;&gt;VTEX&lt;/a&gt; | Rio de Janeiro, Brazil | Take-home project, Skype interview and then in-person talk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildingvts.com&quot;&gt;VTS&lt;/a&gt; | New York City, New York | Technical Phone Screen, Pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/wallapop/&quot;&gt;Wallapop&lt;/a&gt; | Barcelona, Spain | Intro call, technical take-home project OR tech repository you feel proud that highlights your skills for the job, practical interview and finally a competency interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://waymark.com/jobs&quot;&gt;Waymark&lt;/a&gt; | Detroit, MI | Technical phone screen, take-home project, going over the project in person, follow up day in the office&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wealthsimple.com/work-with-us&quot;&gt;Wealthsimple&lt;/a&gt; | Toronto, Canada | Pair programming on a problem similar to daily work, discussion of system design&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.wearehive.co.uk&quot;&gt;WeAreHive&lt;/a&gt; | London, UK | Just walk us through your best code or we give you a small real-world exercise to do at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webantic.co.uk/careers&quot;&gt;Webantic&lt;/a&gt; | Manchester, UK | Basic TNA self-assessment and real-world problem-solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webflow.com&quot;&gt;Webflow&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Short take-home challenge, followed by a paid 3-5 day freelance contract project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.weebly.com&quot;&gt;Weebly&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; New York, NY | Phone screens (30 min to 1 hour) by a recruiter, an engineering manager (focused on your past experiences), an engineer (focused on system / db / api design). Followed by a paid 3 day onsite where you work on a project and then present it to a team of engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weedmaps.com/careers&quot;&gt;Weedmaps&lt;/a&gt; | Irvine, CA; Denver, CO; Tucson, AZ; Madrid, Spain; Remote | Phone screen, Group interview, and possible code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wemake.services&quot;&gt;wemake.services&lt;/a&gt; | Remote | Short unpaid take-home challenge, code review, portfolio discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wend.nl&quot;&gt;Wend&lt;/a&gt; | Amsterdam, Netherlands | Face to face interview followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.weployapp.com/join-our-team/&quot;&gt;Weploy&lt;/a&gt; | Melbourne, Australia; Sydney, Australia | Phase 1: Face to face interview to get to know the candidate. Phase 2: Problem solving session that involves designing a solution to a real-world problem followed by 1/2 day of pairing with a senior dev on implementing the proposed solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wetransfer.homerun.co&quot;&gt;WeTransfer&lt;/a&gt; | Amsterdam, Netherlands | Culture fit and fundamentals chat, skills interview - no whiteboarding! - and take-home project, communication and collaboration interview, meet with the VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wheely.com/en/careers&quot;&gt;Wheely&lt;/a&gt; | Moscow, Russia | Get to know each other in under 30 minutes on-site or via Skype, take-home challenge, on-site review and interview with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wilburlabs.com&quot;&gt;Wilbur Labs&lt;/a&gt; | San Francisco, CA | Technical phone screen, pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wildbit.com&quot;&gt;Wildbit&lt;/a&gt; | Philadelphia, PA &amp;amp; Remote | Take-home project followed by interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://windy.com&quot;&gt;Windy.com&lt;/a&gt; | Prague, Czechia | Talk and write small programm on a computer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wirecardbrasil.workable.com&quot;&gt;Wirecard Brasil&lt;/a&gt; | S√£o Paulo, Brazil | Phone or on-site Cultural Fit interview, take-home coding challenge, code review and discussing in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://worldgaming.com&quot;&gt;WorldGaming&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://woumedia.com&quot;&gt;woumedia&lt;/a&gt; | Remote | Getting to know each other and aligning expectations. Talking about past experiences, projects you are proud of and latest challenges you faced. It‚Äôs followed by a use case study from one of our current projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wyeworks.com&quot;&gt;WyeWorks&lt;/a&gt; | Montevideo, Uruguay | Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://x-team.com&quot;&gt;X-Team&lt;/a&gt; | Remote | A short, fun Node.js challenge, followed by a series of culture-based interview questions, followed by a creative mock project with tons of freedom on how to approach, and follow-up questions about the approach they chose to discuss the tradeoffs. Usually a 10-30 day paid training is rewarded to top candidates to prep them for remote communication skills needed to join a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xing.com&quot;&gt;XING&lt;/a&gt; | Hamburg, Germany | Take-home coding challenge, on-site review and short interviews with future team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ourxplor.com&quot;&gt;Xplor&lt;/a&gt; | Melborne, Australia; London, UK | Phone Cultural Fit interview, Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Y - #&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://18f.gsa.gov/join/&quot;&gt;18F&lt;/a&gt; | Remote; Washington, DC; New York, NY; Chicago, IL; San Francisco, CA | take-home coding exercise (2-4 hours), technical and values-match interviews over video chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://21re.de&quot;&gt;21st Real Estate&lt;/a&gt; | Berlin, Germany | Phone call for quick personal introduction followed by Video call interview. Finally, a pair-programming session on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3boxlabs.com&quot;&gt;3BoxLabs&lt;/a&gt; | Remote | Intro call, resume walk-through, and finally live work exercise with ~2 hours indepdendent work followed by ~1.5 hour debrief discussing the work with the rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3dhubs.com/jobs&quot;&gt;3D Hubs&lt;/a&gt; | Amsterdam, The Netherlands | Take-home code challenge from our product‚Äôs domain followed by discussion remote/on-site, sometimes do an additional on-site pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://47-degrees.breezy.hr&quot;&gt;47 Degrees&lt;/a&gt; | Remote; Seattle, WA; Madrid, ESP; Cadiz, ESP; London, UK | Questions related to implementation of specific projects using popular functional programming libraries and techniques and a discussion about the tradeoffs. Discussion of past open-source projects/contributions and future open-source goals. &lt;strong&gt;Note:&lt;/strong&gt; This company looks for people who have modern functional programming experience in Haskell, Scala, Swift, or Kotlin and it looks for people who have existing open-source contributions in those fields so the roles can be a bit self-selecting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://4degrees.ai/about/&quot;&gt;4Degrees&lt;/a&gt; | Chicago, Illinois | Collaborative pair-programming exercise done through video chat that‚Äôs representative of the responsibilities of the job then a take-home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://500friends.com/who-we-are/careers&quot;&gt;500friends&lt;/a&gt; | San Francisco, CA; Remote | Take home challenge followed by onsite expansion of the submission and high level discussions (design exercise or overview of past projects)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://500Tech.com&quot;&gt;500Tech&lt;/a&gt; | Tel Aviv, Israel | Pair programming on a laptop in working env&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://8thlight.com&quot;&gt;8th Light&lt;/a&gt; | Chicago, IL; London, UK; Los Angeles, CA; New York, NY | Take home code challenge, discussion, pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yhat.com/jobs&quot;&gt;Yhat&lt;/a&gt; | Brooklyn, NY | Demo something cool you built and walk us thru the code + design decisions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/yld&quot;&gt;YLD&lt;/a&gt; | London, UK; Lisbon, PT; Porto, PT &amp;amp; Remote | Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yodas.com&quot;&gt;Yodas&lt;/a&gt; | Binyamina, Israel | Coding tasks over github repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yougov.com&quot;&gt;YouGov&lt;/a&gt; | Remote; San Francisco, CA; London, UK; Warsaw, Poland; Mumbai, India; Hong Kong, Hong Kong | Coding exercise sometimes over github repository, at least 1 interview with a developer and a lead, no live coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://yoyowallet.com&quot;&gt;Yoyo Wallet&lt;/a&gt; | London, UK | Take home code challenge, discussion of the code challenge, and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.yunojuno.com&quot;&gt;YunoJuno&lt;/a&gt; | London, UK | Code challenge based on a realistic feature request on a real open-source package created and used at YunoJuno; phone/video interview with members of the Product team to explore technical background, experiences, interests, cultural fit; on-site interview, usually with Product Manager and CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.kenoby.com/grupozap/&quot;&gt;ZAP Group&lt;/a&gt; | S√£o Paulo, Brazil | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and product managers on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zapier.com/jobs/&quot;&gt;Zapier&lt;/a&gt; | Remote | Recruiter interview, take-home project, code review of the take-home project, technical discussions with hiring manager and engineers from the team, values interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zencargo.com/careers&quot;&gt;Zencargo&lt;/a&gt; | London, UK | Initial interview with CTO, covering professional experience interests and expectations, followed by one technical interview focused on fundamentals and familiarity with best practices. A further short chat with co-founders to get to know each other - - either onsite or remote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenefits.com/careers&quot;&gt;Zenefits (UI Team)&lt;/a&gt; | San Francisco, CA | One technical phone screen focused on JS fundamentals and/or one timeboxed take-home challenge. The onsite is a series of interviews designed to test your understanding of JS, HTML/CSS, design, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zerodha.com/careers&quot;&gt;Zerodha&lt;/a&gt; | Bengaluru, India | Technical call at the beginning and one take home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zweitag.de/karriere&quot;&gt;Zweitag&lt;/a&gt; | M√ºnster, Germany &amp;amp; Remote | Get-to-know call, take-home task representative to our problems, mentoring throughout the process, on-site pairing and discussion, talks for aligning expectations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/zype&quot;&gt;Zype&lt;/a&gt; | New York, NY &amp;amp; Remote | Skype/Video call with VP of Product and a take-home challenge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Also see:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://they.whiteboarded.me&quot;&gt;They Whiteboarded Me!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/poteto/hiring-without-whiteboards&quot;&gt;&lt;img src=&quot;https://travis-ci.org/poteto/hiring-without-whiteboards.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
